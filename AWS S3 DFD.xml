<?xml version="1.0" encoding="UTF-8"?>
<project ref="aws-s3-dfd" name="AWS S3 DFD" tags="" modelUpdated="2022-02-22 09:49:51" workflowState="" locked="false">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings>
    <issueTrackers>
      <jira>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="Bucket (Internal) -&gt; Bucket (External 2)" ref="04a5f688-1bee-48a4-8244-52acca109ec9" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="59864655-18b5-4fea-80c8-f143d976ffd3">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="s3 VPC Endpoints -&gt; Public / Accelerate End Point (HTTP/S)" ref="1d4fcf90-2239-479e-9544-27c808ec3a66" source="5af42def-e4a8-4508-9a2b-7fa03c8da273" target="39feed16-7135-4dfe-a1e9-97746a264b70">
      <assets/>
      <tags>
        <tag tag="VPCe Gateway"/>
      </tags>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; Lambda" ref="234d946d-a57f-4c0a-b85f-3b01038d9745" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="5c0e78e3-5d42-4695-80a7-ffc3559da647">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; KMS" ref="244cc431-4d3a-4619-b885-e29117a93cbe" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="4c8fe4da-8091-4785-b4c1-9f547e92034d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="S3 Control Public Endpoint (HTTP/S) -&gt; S3 Control" ref="2d4f72eb-eec5-4d93-900e-7b6b04a3966f" source="71f62ca2-8263-458e-86d1-8cda6683ae8d" target="c0b52751-5bda-40bf-a71b-e7d9e2676555">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Access Point -&gt; Bucket" ref="2dffa4d6-fe82-4e5a-bb5e-4359d050227f" source="fa6e5955-9e01-403f-bb93-e9d4a305b2eb" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; Object (Internal)" ref="39e6712a-407e-4471-9148-ec6075c3f108" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="58272f47-8e1d-4655-9bfe-77c893b60676">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; EventBridge" ref="3f28959f-58d7-476d-b9f5-8a809cb912a7" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="8e8641d0-4583-4e2d-8f5b-0db14b32eb27">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; Lambda" ref="454bda52-7d28-43dd-b925-3df18615da25" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="5c0e78e3-5d42-4695-80a7-ffc3559da647">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS Services (Compatible with Access Point) -&gt; Access Point (Internal)" ref="4bca578d-b177-486c-b621-17078a3512d2" source="5f6c8642-529d-4a62-ba26-e600b681d49a" target="fa6e5955-9e01-403f-bb93-e9d4a305b2eb">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Access Point (Internal) -&gt; Bucket (Internal)" ref="4c087f0b-bff9-4c68-af5e-26bac8d7ae51" source="fa6e5955-9e01-403f-bb93-e9d4a305b2eb" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; Bucket Logs" ref="4e0f50e1-9776-4460-97bd-35ff85004e8e" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="8e40199d-9ef5-4be3-b0f6-e13d23891389">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="S3 Control -&gt; Bucket (External 2)" ref="58ac65a6-2644-497b-8e2a-56dce3358750" source="c0b52751-5bda-40bf-a71b-e7d9e2676555" target="59864655-18b5-4fea-80c8-f143d976ffd3">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="S3 Control -&gt; CloudWatch" ref="5c5570ea-daa6-4ef9-a366-8fda17770caa" source="c0b52751-5bda-40bf-a71b-e7d9e2676555" target="0e2c21d8-3cf7-483f-95a5-f476a6c31522">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Public / Accelerate End Point (HTTP/S) -&gt; Bucket" ref="61870bf2-d294-4a16-a1a3-aa41e6ee6547" source="39feed16-7135-4dfe-a1e9-97746a264b70" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="s3 VPC Endpoints -&gt; Multi-Region Access Point" ref="62e2e38c-8cfa-42f8-9ea9-f1a3043229bb" source="5af42def-e4a8-4508-9a2b-7fa03c8da273" target="dc08e016-c014-4dbc-9597-95c9b2196450">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Lambda -&gt; KMS" ref="6b151395-cde0-4296-8afd-7fa42e8d5bab" source="5c0e78e3-5d42-4695-80a7-ffc3559da647" target="4c8fe4da-8091-4785-b4c1-9f547e92034d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="S3 Control -&gt; Bucket (Internal)" ref="70e7c81c-f39a-4932-85f3-f72f0e9b6590" source="2eeb3b27-e8a5-4dee-8740-69dc127f33b6" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Invoke" ref="797b5277-b842-4e99-886d-d7f1f5b19ce2" source="c0b52751-5bda-40bf-a71b-e7d9e2676555" target="fbcdc126-9d9a-4faa-891b-0a8f736efadc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Access Point (Internal) -&gt; Lambda" ref="7c70a6e7-ad16-4da1-bacd-b3ebad8af079" source="3a143026-546a-4fee-b34d-a7cff051c31a" target="5c0e78e3-5d42-4695-80a7-ffc3559da647">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bucket -&gt; Object" ref="7c842ba8-044b-4476-9b4d-d4232488f79d" source="6c03c684-3e0e-4bac-8786-28e63567806b" target="f0ca29d3-e38d-4d3c-99d1-3315dfe419b5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="WebSite Endpoint -&gt; Bucket (Internal)" ref="80c55d3b-e485-4b7d-9051-f2fcb4f9f14a" source="60e6cfa5-331e-4d69-86e3-de3e46c03830" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS Services (with/without IAM) -&gt; Public / Accelerate End Point (HTTP/S)" ref="8ed8f7b1-0ad7-4ed2-b42a-4dde46d01961" source="ef3b3701-16a1-4e27-bbe5-061d83393080" target="39feed16-7135-4dfe-a1e9-97746a264b70">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Replication" ref="931afea4-d54f-4194-b621-f047fc35fb53" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="6c03c684-3e0e-4bac-8786-28e63567806b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Public End Point -&gt; Bucket" ref="9a7fd911-2330-4e85-95cc-7d18d96d9f68" source="1e4d368d-4700-498a-9f8f-c26b084e0c19" target="6c03c684-3e0e-4bac-8786-28e63567806b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Access Point (Internal) -&gt; Access Point (Internal)" ref="9fedff91-e6f4-4d9f-a924-3bf665c9d85d" source="fa6e5955-9e01-403f-bb93-e9d4a305b2eb" target="3a143026-546a-4fee-b34d-a7cff051c31a">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Batch jobs" ref="a234f80e-f9ff-4105-9558-186b4007a3c5" source="c0b52751-5bda-40bf-a71b-e7d9e2676555" target="59864655-18b5-4fea-80c8-f143d976ffd3">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Access Point -&gt; Bucket" ref="a7d1b1d8-0507-446e-9200-a185d82db307" source="4fbd9cc8-722a-4ec7-9203-88c6e6950ab3" target="6c03c684-3e0e-4bac-8786-28e63567806b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Multi-Region Access Point -&gt; Bucket (Internal)" ref="ad5cc9e7-4196-452d-8e13-3fa79aac427a" source="dc08e016-c014-4dbc-9597-95c9b2196450" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="s3 VPC Endpoints -&gt; Access Point" ref="b45d12a2-6c3b-4c76-97c8-65abd6b098f4" source="5af42def-e4a8-4508-9a2b-7fa03c8da273" target="fa6e5955-9e01-403f-bb93-e9d4a305b2eb">
      <assets/>
      <tags>
        <tag tag="Object Related APIs"/>
      </tags>
    </dataflow>
    <dataflow name="Bucket (Internal) -&gt; Bucket Notification Targets" ref="b4c7177a-32e7-42e9-bfb4-1ebeb975acd3" source="188d431d-4cbf-475e-bff2-8d71d98b13d5" target="5c86bf93-7793-41cc-ba9b-f329d29b3343">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS Services (with/without IAM) -&gt; WebSite Endpoint" ref="cdb18de1-8fdc-4111-8c07-8ee9567da2c4" source="ef3b3701-16a1-4e27-bbe5-061d83393080" target="60e6cfa5-331e-4d69-86e3-de3e46c03830">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="s3 VPC Endpoints -&gt; Public End Point" ref="e073f8a3-1212-41f9-99f2-80927d6ed945" source="5af42def-e4a8-4508-9a2b-7fa03c8da273" target="65b675ef-666a-47dc-8921-e5f861b0725c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="S3 Control -&gt; Multi-Region Access Point" ref="f0ef412e-96e4-4187-b2f0-a32197bd95a6" source="c0b52751-5bda-40bf-a71b-e7d9e2676555" target="dc08e016-c014-4dbc-9597-95c9b2196450">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="s3 VPC Endpoints -&gt; Bucket" ref="f21b88d3-bdcd-40af-aa26-f29a6c34ffed" source="5af42def-e4a8-4508-9a2b-7fa03c8da273" target="188d431d-4cbf-475e-bff2-8d71d98b13d5">
      <assets/>
      <tags>
        <tag tag="via VPCe interface"/>
      </tags>
    </dataflow>
  </dataflows>
  <customFields/>
  <components>
    <component uuid="320fbb1d-dfcc-4375-b2b1-81460763259c" diagramComponentId="364d02c3-ad6f-4795-a0a1-13b30f9be1e9" ref="8e8641d0-4583-4e2d-8f5b-0db14b32eb27" name="EventBridge" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-eventbridge">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="bc3854c8-7526-497f-a5ee-b25fa554e652" diagramComponentId="35ad97bd-7dc4-4ff4-a441-e29366fd2b43" ref="90c38062-a0a7-4962-8398-0f3ad978edc9" name="S3.VPC.Endpoint (Interface)" desc="" library="CS-Default" parentComponentRef="5af42def-e4a8-4508-9a2b-7fa03c8da273" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W12" name="Unlimited/MOnitored access via S3 VPC Endpoints" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:27:26.782">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C124" name="S3 VPC Endpoints covered by VPC endpoint controls" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Ensure all S3 VPC endpoints (Interface and Gateway) are covered by the VPC endpoints controls &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring all S3 VPC endpoints (Interface and Gateway) are covered by the VPC endpoints controls, and its records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:46:40.619">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ungoverned-endpoint" name="Ungoverned EndPoint" desc="" library="CS-Default">
          <threats>
            <threat ref="S3.T45" name="Exfiltrate data via ungoverned S3 endpoint" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 VPC endpoints can be either Interface or Gateway. An attacker can create a second endpoint to create an ungoverned exfiltration vector. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "ec2:CreateVpcEndpoint"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS Low 1.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0005" url="https://attack.mitre.org/tactics/TA0005"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W12">
                  <countermeasures>
                    <countermeasure ref="S3.C124" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C124" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="2039c8bf-bc8c-4014-9041-f64e5943fd95" diagramComponentId="727f212a-554c-4864-a4c2-0ff86510164e" ref="5c86bf93-7793-41cc-ba9b-f329d29b3343" name="Bucket Notification Targets" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-group">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="371d3417-d861-4e23-8567-cb7288275074" diagramComponentId="659d684f-c745-4817-84ea-d085ebfa6684" ref="6d2c4fc0-ac22-44b9-9482-81506ce97a2e" name="Amazon S3" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-amazon-s3">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W25" name="Block all requests not using SigV4" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:29:06.670">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W24" name="Block deprecated actions" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:27:17.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W17" name="Block direct public access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:31:30.636">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W16" name="Enforce Good Coding Practice" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:01:59.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C81" name="Block all requests not using SigV4 " issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Block all requests not using SigV4 (e.g. using an SCP and S3 policy on all buckets with deny on&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;"StringNotEquals":{"s3:signatureversion": "AWS4-HMAC- SHA256"})&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a non-SigV4 AWS API call, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:29:45.718">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C80" name="Block deprecated S3 actions, using IAM ThreatModel and the S3 actions list." issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Block deprecated S3 actions, using IAM ThreatModel and the S3 actions list. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the controls blocking deprecated S3 actions &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:27:45.982">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C82" name="Monitor and investigate that all requests not using SigV4" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor and investigate that all requests not using SigV4 (e.g via CloudTrail S3 with the additionalEventData.SignatureVersion different from "SigV4") &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a non-SigV4 AWS API call, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:31:54.636">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.43" name="Monitor S3 connection" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Monitor that all S3 connections are made with virtual-hosted model (e.g via CloudTrail S3 requestParameters.Host)&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a path-style request to S3, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:09:15.007">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C83" name="Use SDK with SigV4 enabled" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Use SDK with SigV4 enabled (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#UsingAWSSDK-move-to-Sig4" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring the use of SDK with SigV4 enabled &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:07:25.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C42" name="use virtual-hosted model when connecting to S3 endpoints" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;When connecting to S3 endpoints, use virtual-hosted model ("my-bucket-name.s3.amazonaws.com" or "my-bucket- name.my-s3-regional-endpoint.amazonaws.com") instead of path-style model ("s3.amazonaws.com/my-bucket-name" or "my-s3-regional-endpoint.amazonaws.com/my-bucket-name") (see &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/aws/amazon-s3-path-deprecation-plan-the-rest-of-the-story/" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). All the latest SDK make use of domain style, by default. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring the usage of domain style Very instead of path style. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:07:04.803">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="insecure-or-old-s3-features" name="Insecure or Old S3 Features" desc="" library="">
          <threats>
            <threat ref="S3.T35" name="Use of less secure or old S3 features" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;S3 was launched in 2006, and its features have evolved. An attacker can use older features that have been proven less secure by AWS (e.g. certain API configuration, &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://aws.amazon.com/blogs/aws/amazon-s3-update-sigv2-deprecation-period-extended-modified/" target="_blank"&gt;SigV2&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;, path-style model), but are still maintained for retro- compatibility. &lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 14.6667px;"&gt;IAM Access&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 14.6667px;"&gt;{&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 14.6667px;"&gt;"UNIQUE": "s3:deprecated"&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 14.6667px;"&gt;}&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS Low 1.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.43" mitigation="50"/>
                    <countermeasure ref="S3.C42" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C83" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W24">
                  <countermeasures>
                    <countermeasure ref="S3.C80" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W25">
                  <countermeasures>
                    <countermeasure ref="S3.C81" mitigation="100"/>
                    <countermeasure ref="S3.C82" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.43" mitigation="50"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C42" mitigation="50"/>
                <countermeasure ref="S3.C80" mitigation="100"/>
                <countermeasure ref="S3.C81" mitigation="100"/>
                <countermeasure ref="S3.C82" mitigation="100"/>
                <countermeasure ref="S3.C83" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c370445b-5524-4e5f-9184-131c0c95a854" diagramComponentId="10c34a26-7f8d-4cd9-a068-d79cbff48499" ref="0e2c21d8-3cf7-483f-95a5-f476a6c31522" name="CloudWatch" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-cloudwatch">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="bf01a5ed-3625-4689-a756-e32bceecd754" diagramComponentId="85b0e283-5668-4b70-b958-bc8829de5209" ref="5af42def-e4a8-4508-9a2b-7fa03c8da273" name="s3 VPC Endpoints" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-group">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W10" name="Manage all external buckets" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:09:20.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W06" name="S3 Data Events Unprotected" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:50:27.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="1" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W12" name="Unlimited/MOnitored access via S3 VPC Endpoints" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:27:26.782">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C23" name="Limit access to only authorised S3 bucket" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Limit the access to only authorized S3 bucket(s) or their AWS account(s) from each VPC (e.g. using the condition key "s3:ResourceAccount" on the VPC endpoint policy, alternatively use specific resource-level statement for each bucket, or if the VPC endpoint policy size is beyond the limit and more granular control on VPC is required, use access points) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request to an unauthorized bucket from one of your VPC, it should be denied &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:41:03.157">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C22" name="Maintain list of authorised S3 and S3 Access points" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized S3 and S3 access point (and their respective AWS accounts) to be access for each VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the list of authorized S3 and S3 access point to be access for each VPC, its review process, and its review records &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:37:59.110">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C25" name="Monitor VPC DNS query log" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[depends on S3.C21,S3.C22]&lt;br&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;Monitor VPC DNS query logs that only authorised&amp;nbsp;S3 bucket and S3 access points are being queried in each VPC (e.g. using VPC DNS query logging), and protect it using Route53 ThreatModel &lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a DNS query to an unauthorized 1) S3 bucket and 2) S3 access points, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:44:11.731">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C15" name="Request access via S3 access point" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request access via S3 access point on bucket you don't own, if compatible with your interaction with the bucket (e.g. not through not-compatible AWS service) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the documented reason access point was not implemented in the use case &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:46:33.300">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C11" name="Track all buckets you do not control that host your objects" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Track all buckets you don't control hosting your objects, define their authorised&amp;nbsp;data classification, identify their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), and get assured for the protection (e.g. through contractual agreement, verified by assurance programs, or using this ThreatModel). &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:06:31.436">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C24" name="Verify that all VPC are limited to authorised S3 buckets" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all VPC are limited to limit access to only authorized S3 bucket(s) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the control limiting access to only authorized S3 bucket(s), it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:42:32.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="insecure-old-s3-features" name="Insecure/Old S3 Features" desc="" library="">
          <threats/>
        </usecase>
        <usecase ref="upload-download" name="Upload/Download" desc="" library="">
          <threats>
            <threat ref="S3.T8" name="Exfiltrate data by using a S3 VPC endpoint to upload data to an attacker bucket using an internal IAM entity" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;VPC endpoints for S3 allow IAM entities to connect from a VPC to any S3 bucket without Internet Gateway. An attacker can exfiltrate pre-collected data to an external S3 bucket via a VPC endpoint, using an internal IAM entity they control. If the attacker does not control object ACL, it can use the name of objects (1KB). &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"AND": ["s3:PutObject", {&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OPTIONAL": "s3:PutObjectAcl" }]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C15" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W12">
                  <countermeasures>
                    <countermeasure ref="S3.C21" mitigation="20"/>
                    <countermeasure ref="S3.C22" mitigation="20"/>
                    <countermeasure ref="S3.C23" mitigation="20"/>
                    <countermeasure ref="S3.C24" mitigation="20"/>
                    <countermeasure ref="S3.C25" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C15" mitigation="100"/>
                <countermeasure ref="S3.C21" mitigation="20"/>
                <countermeasure ref="S3.C22" mitigation="20"/>
                <countermeasure ref="S3.C23" mitigation="20"/>
                <countermeasure ref="S3.C24" mitigation="20"/>
                <countermeasure ref="S3.C25" mitigation="20"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="d7bb4055-3d50-4c12-8d28-09b2aec1acf0" diagramComponentId="12b48442-1412-49a5-a529-0c01cce5fc5b" ref="188d431d-4cbf-475e-bff2-8d71d98b13d5" name="Bucket (Internal)" desc="Bucket sub-resources" library="trustoncloud-s3" parentComponentRef="" componentDefinitionRef="toc-bucket">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W17" name="Block Bucket ACL except for server access logging" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:09:17.597">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W17" name="Block direct public access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:31:30.636">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W15" name="Changes to make an object public via object ACL" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:35:06.560">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W31" name="Control CloudFront access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:15:35.287">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W28" name="Control event receivers" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:05:22.142">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W29" name="Control where the inventory is stored" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:20:32.353">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.C16" name="Deletion of Buckets" state="0" impact="1" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:46:48.150">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W34" name="Deploy only authorized S3 website and behind a CDN" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:15:02.668">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W35" name="Disabling ACLs for all buckets" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:28:29.178">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W21" name="Encrypt or tokenize critical data" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:04:32.743">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W19" name="Enforce Encryption at rest" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:32:47.384">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W16" name="Enforce Good Coding Practice" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:01:59.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W22" name="Have a process to apply a legal hold" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:17:36.430">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W18" name="Identify and ensure the protection all internal buckets hosting your objects" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:15:44.727">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W07" name="Lack of Monitoring" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:39:20.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W30" name="Limit access from only authorized VPCs" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:28:39.262">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Limit the access to the IAM actions required to execute the threats" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W10" name="Manage all external buckets" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:09:20.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W20" name="Protect primary data against loss" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:51:09.805">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W24" name="Remove incomplete multipart uploads" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:22:49.867">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W33" name="Restrict access point access to VPC when in use" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:32.787">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W27" name="Restrict bucket replication" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:38:43.194">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W06" name="S3 Data Events Unprotected" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:50:27.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W27" name="Scan input/output objects for malware" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:08:01.294">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="1" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W12" name="Unlimited/MOnitored access via S3 VPC Endpoints" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:27:26.782">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W23" name="Use S3 Object Lock to protect data integrity" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:09:15.017">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C72" name="Aligned with your data governance" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Aligned with your data governance, encrypt on the client side - or tokenize - appropriate data &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the governance and mechanism(s) used to protect data (e.g. encrypt or tokenize critical data on the client side &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:05:08.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C71" name="Backup primary data in a secure location under a different security authority" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[depends on S3.C58]&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Backup primary data in a secure location under a different security authority (e.g. in an &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://wellarchitectedlabs.com/security/100_labs/100_create_a_data_bunker/1_instructions/" target="_blank"&gt;AWS data bunker account &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;via replication) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Recover" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism used to backup primary data in a location which have different security authority, its records of execution, and records of restoration testing &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:57:48.291">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C112" name="Block object access to S3 bucket not via an AP" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C104]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block any &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html#access-points-service-api-support" target="_blank"&gt;object-related operations&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;access to S3 bucket not through access point (i.e. using a deny IAM policy statement with the condition "ArnNotLike" {"s3:DataAccessPointArn": "arn:aws:s3:&lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;Region&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;:&lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;AccountId&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;:accesspoint/*"}) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Access any S3 bucket using the S3 public endpoint, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:39:10.426">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C76" name="Block PutObject and PutObjectRetention requests with unauthorized S3 Object Lock" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C58, assured by S3.C77]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block PutObject and PutObjectRetention requests with unauthorized S3 Object Lock on each bucket (e.g. using an S3 bucket policy deny statement on PutObject and PutObjectRetention if the condition if exists "s3:object-lock- mode" and "s3:object-lock-remaining-retention-days" is not the defined S3 Object Lock configuration) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:14:26.720">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C66" name="Block PutObject requests with unauthorized KMS key on each bucket" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C61, assured by S3.C67]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block PutObject requests with unauthorized KMS key on each bucket (e.g. using an S3 bucket policy deny statement on PutObject if the condition if exists "s3:x-amz-server-side- encryption-aws-kms-key-id" is not an authorized KMS key) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request encrypted with an unauthorized KMS key, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:51:15.683">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C8" name="Block S3 endpoints in your corporate perimeter security to the Internet" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Block S3 endpoints (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/general/latest/gr/s3.html" target="_blank"&gt;DNS&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-find-ip-address-ranges/" target="_blank"&gt;IP ranges&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) in your corporate perimeter security to the Internet (e.g. firewalls, or cloud interception proxy like &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://kivera.io/" target="_blank"&gt;Kivera&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) including via Internet Gateway, to force usage of VPC endpoints. It will block data-plane transfer.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Note: AWS console stays functional as it proxies non- data-plane requests (via "console.aws.amazon.com"). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:33:20.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C38" name="Block the action &quot;s3:DeleteBucket&quot;" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[assured by S3.C39]&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Block the action "s3:DeleteBucket" (e.g. via SCP, exemption can be managed by authorizing a SuperAdmin to delete buckets with a certain tag, and with bucket owners able to tag bucket) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do a DeleteBucket, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:47:15.536">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C19" name="block Unauthorised IAM entity" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Block any IAM entity not belonging to an authorized AWS Organizations, OU and/or AWS account(s) to call S3 from your VPCs by adding a deny statement on S3 VPC endpoint policy of each VPC, with the condition using "aws:PrincipalOrgPaths" (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;ref&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) including the full Org ID, as those are globally unique. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each VPC, do an API call with an IAM entity which is not part of its authorized AWS Organizations path(s), it should be denied. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:32:43.892">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C149" name="Create and maintain a list of authorised IAM principals" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;For each bucket, maintain a list of authorised&amp;nbsp;IAM principals allowed to access via bucket policy &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized a list of authorized IAM principals allowed to access via bucket policy, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T17:09:29.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C73" name="Create a process to apply legal hold to any S3 bucket" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a process to apply legal hold to any S3 bucket, whenever required. The condition "s3:object-lock-legal-hold" can be used to restrict who can remove such a lock. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the process of applying legal hold, and its records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:18:10.557">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C55" name="Deny requests to add bucket ACL other than for server access logging" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C57]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Deny requests to add bucket ACL other than for server access logging (e.g. using an SCP, bucket policy and VPC endpoint policy blocking PutBucketAcl for all but the following predefined group&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;"http://acs.amazonaws.com/groups/s3/LogDelivery" using the IAM condition x-amz-acl: "log-delivery-write")&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a call to create a bucket ACL other than server access logging, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:10:33.837">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny-requests-to-change-object-acl-to-public" name="Deny requests to change object ACL to public" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C36]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Deny requests to change object ACL to public (e.g. using an SCP, S3 bucket policy and VPC endpoint policy blocking&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;PutObjectAcl for "s3:x-amz-grant-read", "s3:x-amz-grant- read-acp", "s3:x-amz-grant-write-acp", "s3:x-amz-grant-full- control" on the following predefined groups "http://acs.amazonaws.com/groups/global/AllUsers" and "http://acs.amazonaws.com/groups/global/AuthenticatedUsers")&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a call to create a public ObjectACL, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:36:13.184">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C45" name="Do not include sensitive data when naming objects" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do not include sensitive data in bucket names, access point names, object names, object metadata and tags. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the process ensuring no sensitive data is included in bucket names, object names, object metadata and tags. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:23:41.813">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C49" name="Enable account-level S3 Block Public Access on all AWS accounts" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C50]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Enable account-level S3 Block Public Access on all AWS accounts, with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="page"&gt; 
   &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Create a public bucket and try to access one of its objects without proper authentication&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;or change the ACL of an existing object to public&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;the action should be denied.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:39:16.314">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C10" name="Enable GuardDuty Monitoring" issueId="" issueLink="" platform="" cost="0" risk="36" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Enable and monitor &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html" target="_blank"&gt;S3 protection in Amazon GuardDuty&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;in all AWS accounts in all Regions, and protect it using GuardDuty ThreatModel. Ensure findings are investigated (e.g. using Amazon Detective). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Guard Duty Policy Findings" url="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html"/>
          </references>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the GuardDuty ThreatModel and the evidence of its application for enabling, monitoring, investigation and protecting S3 protection &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:40:34.220">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C118" name="Enable Macie" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Enable &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/macie/latest/user/findings-types.html#findings-policy-types" target="_blank"&gt;S3 policy findings in Amazon Macie&lt;/a&gt; &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in all AWS accounts in all Regions, and protect it using Macie ThreatModel&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Macie Policy Findings" url="https://docs.aws.amazon.com/macie/latest/user/findings-types.html#findings-policy-types"/>
          </references>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:43:23.044">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C53" name="Enable S3 Block Public Access on all S3 access points" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C54]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Enable S3 Block Public Access on all S3 access points (including multi-region), with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="page"&gt; 
   &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Create a public bucket and try to access via access point one of its objects without proper authentication (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html#access-control-block-public-access-policy-status-access-points" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;)&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;change the ACL of an existing object to public and try to access via access point one of its objects&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;they should be denied.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:58:22.993">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C51" name="Enable S3 Block Public Access on all S3 buckets" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C52]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Enable S3 Block Public Access on all S3 buckets, with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="page"&gt; 
   &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Create a public bucket and try to access one of its objects without proper authentication&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;br&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;change the ACL of an existing object to public&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 14.6667px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be denied.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:50:04.232">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C69" name="Enable versioning on buckets holding primary data" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C58, assured by S3.C70]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Enable versioning on buckets holding primary data &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;Request the mechanism used to ensure versioning on buckets Very S3.FC5 holding primary data, and its records Low&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:51:44.078">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C140" name="Ensure all objects on S3 buckets are encrypted with an authorized KMS key" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[assured by S3.C62]&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Ensure all objects on S3 buckets are encrypted with an authorized KMS key &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism (including training, or utility) ensuring only authorized KMS key are used for any objects stored in S3 &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:46:02.342">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C46" name="Ensure all S3 buckets interacted with are in the correct AWS account" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Ensure all S3 buckets interacted with are in the correct AWS account (e.g. using the condition in all compatible S3 requests: x-amz-expected-bucket-owner and x-amz-source-expected- bucket-owner) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:04:34.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C152" name="Ensure bucket ACL and object ACL are disabled on each bucket" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C154]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure bucket ACL and object ACL are disabled on each bucket &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring bucket ACL and object ACL are disabled on each bucket&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;its records of execution for all new buckets&lt;/li&gt; 
     &lt;li&gt;plan to move any older buckets&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:28:55.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C142" name="Ensure only authorized buckets are configured as website" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C141, assured by S3.C143]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized buckets are configured as website &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring only authorized buckets are configured as website&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;its records of execution for all new website-enabled buckets&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;plan to move any older website-enabled buckets &lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:18:37.481">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C134" name="Ensure only authorized buckets have replication enabled" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C86, assured by S3.C87,S3.C88,S3.C117]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized buckets have replication enabled and with correct configuration are configured &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;the mechanism ensuring only authorized buckets have replication enabled and with correct configuration are configured&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;its records of execution for all new buckets&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;plan to move any older buckets &lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:41:24.248">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C137" name="Ensure only authorized CloudFront distributions are associated with their authorized bucket, and vice versa" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C101, assured by S3.C102]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized CloudFront distributions are associated with their authorized bucket, and vice versa. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring only authorized only authorized CloudFront distribution are associated with their authorized bucket, and vice versa&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;its records of execution for all new CloudFront distribution&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;plan to move any older CloudFront distribution &lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:17:55.496">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C138" name="Ensure only authorized IAM roles are attached for each replication" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C89, assured by S3.C92]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized IAM roles are attached for each replication, ideally dedicated &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring authorized IAM roles are attached for each replication, and the evidence of its execution for all replication configuration &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:47:18.430">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C135" name="Ensure only authorized notification receiver(s) are configured" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C94, assured by S3.C95]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized notification receiver(s) (e.g. SNS Topic, Lambda, etc.) for each bucket are configured &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring only authorized notification receiver(s) (e.g. SNS Topic, Lambda, etc.) for each bucket are configured&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;its records of execution for all new buckets&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;plan to move any older buckets &lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:16:12.712">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C136" name="Ensure only authorized S3 buckets are configured to receive S3 inventory" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C96, assured by S3.C97]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized S3 buckets are configured to receive S3 inventory for each bucket &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;font size="4"&gt;R&lt;span style="font-family: OpenSans; background-color: rgb(255, 255, 255);"&gt;equest&lt;/span&gt;&lt;/font&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans; background-color: rgb(255, 255, 255);"&gt;the mechanism ensuring only authorized S3 buckets are configured to receive S3 inventory for each bucket&lt;/span&gt;&lt;/font&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans; background-color: rgb(255, 255, 255);"&gt;its records of execution for all new buckets&lt;/span&gt;&lt;/font&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans; background-color: rgb(255, 255, 255);"&gt;plan to move any older buckets&lt;/span&gt;&lt;/font&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:25:08.834">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C144" name="Ensure S3 websites are protected with HTTP headers using a CDN" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C141]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure S3 websites are protected with HTTP headers (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;ref&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) using a CDN (e.g. CloudFront) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:21:50.565">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C146" name="For buckets (or paths) requiring SSE-C, block PutObject requests with unauthorized encryption" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C145, assured by S3.C147]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;For buckets (or paths) requiring SSE-C, block PutObject requests with unauthorized encryption (e.g. using an S3 bucket policy deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-customer- algorithm"="AES265" is not present) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to a bucket (or path) requiring SSE-C without the proper encryption, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:17:34.204">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C148" name="For buckets (or paths) requiring SSE-C, monitor that only authorized encryption" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C145]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;For buckets (or paths) requiring SSE-C, monitor that only authorized encryption is used on each bucket or path (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;requestParameter.bucketName &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-customer- algorithm&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to a bucket (or path) requiring SSE-C without the proper encryption, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:22:36.849">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C147" name="For buckets (or paths) requiring SSE-C, verify all buckets block PutObject requests with unauthorized encryption" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For buckets (or paths) requiring SSE-C, verify all buckets block PutObject requests with unauthorized encryption &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket requiring SSE-C not blocking PutObject requests with unauthorized encryption, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:19:12.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C98" name="For each S3 bucket, maintain a list of VPC(s), authorized to access it." issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each S3 bucket, maintain a list of VPC(s), authorized to access it. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For each S3 bucket, request the list of authorized VPC to access it, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:29:00.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C64" name="Implement an authorized default encryption key" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C61, assured by S3.C65]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Implement an authorized default encryption key on each bucket and enable S3 Bucket Key (note: Amazon S3 evaluates and applies bucket policies before applying bucket default encryption settings) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;the mechanism implementing an authorized default encryption key on each bucket and enabling S3 Bucket Key&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;its records of execution for all new buckets&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;plan to move any older buckets &lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:32:12.343">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C78" name="Implement lifecycle policy to remove incomplete multipart uploads" issueId="" issueLink="" platform="" cost="0" risk="20" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C79]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Reduce costs related to incomplete multipart upload by creating a lifecycle policy to remove them after an agreed length of time (e.g. 7 days) (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/aws/s3-lifecycle-management-update-support-for-multipart-uploads-and-delete-markers/" target="_blank"&gt;blog&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an incomplete upload, and wait for the agreed time, it should be deleted automatically. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:24:24.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C74" name="Implement the authorized default S3 Object Lock" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C58, assured by S3.C75]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Implement the authorized default S3 Object Lock on each bucket (note: Amazon S3 evaluates and applies bucket policies before applying bucket default S3 Object Lock settings) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Upload an object without appropriate S3 Object Lock, it should have the S3 Object Lock automatically. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:10:05.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C91" name="Limit access to authorized IAM roles used for replication" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C89]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit access to authorized IAM roles used for replication, using the IAM ThreatModel (e.g. trust policy, and "iam:PassRole" &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the IAM ThreatModel and the evidence of its application to the IAM roles used for replication &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:50:38.750">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C23" name="Limit access to only authorised S3 bucket" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Limit the access to only authorized S3 bucket(s) or their AWS account(s) from each VPC (e.g. using the condition key "s3:ResourceAccount" on the VPC endpoint policy, alternatively use specific resource-level statement for each bucket, or if the VPC endpoint policy size is beyond the limit and more granular control on VPC is required, use access points) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request to an unauthorized bucket from one of your VPC, it should be denied &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:41:03.157">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C105" name="Limit access via the S3 access point" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C104, assured by S3.C109]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit access via the S3 access point by using in VPC endpoint and/or bucket policy the condition "s3:DataAccessPointAccount" or preferably "s3:DataAccessPointArn" in an allow statement to reduce the length of allowlist bucket name in VPC endpoint/bucket policy. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do a request on an unauthorized access point or bucket, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:25:27.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C99" name="Limit the access to authorised VPC" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C98, assured by S3.C100]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to only those VPC(s) (e.g. using S3 bucket statement, deny if the condition "aws:SourceVpce", or if the bucket policy size is beyond the limit, use this condition on access point) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to the bucket outside an authorized VPC, it should be denied&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:01:37.327">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C90" name="Limit the S3 access" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C89]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the S3 access to the source/destination bucket and replication rights of each authorized IAM role configured for replication &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the S3 access of replication role, and how they aligned to the replication requirements &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:48:56.358">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C104" name="Maintain a list of authorized access between VPC, S3 access point and S3." issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized access between VPC, S3 access point and S3. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized access between VPC and S3 access point &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:52.631">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C141" name="Maintain a list of authorized buckets to be configured as website" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt; &lt;/p&gt; 
        &lt;div class="page"&gt; 
         &lt;div class="section"&gt; 
          &lt;div class="layoutArea"&gt; 
           &lt;div class="column"&gt; 
            &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized buckets to be configured as website&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized buckets to be configured as website, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:15:31.367">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C86" name="Maintain a list of authorized buckets to have replication enabled" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Maintain a list of authorized buckets to have replication enabled, their target bucket and replication type (i.e. ownership, RTC, etc.) (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized buckets to have replication enabled, their target bucket and replication rights, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:39:45.136">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C101" name="Maintain a list of authorized CloudFront distribution and associated bucket" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized CloudFront distribution (via origin access identity) and associated bucket &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of all authorized CloudFront distribution and associated S3 buckets &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:16:16.266">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C61" name="Maintain a list of authorized KMS key(s) for each bucket," issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized KMS key(s) for each bucket, and their default encryption key. You might simplify by using only 1 key per bucket, ideally dedicated. Note that S3 server access log bucket does not support KMS encryption (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-how-to-set-up" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;).&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized KMS key(s) for each bucket, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:33:43.973">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C94" name="Maintain a list of authorized notification receiver(" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized notification receiver(s) (e.g. SNS Topic, Lambda, etc.) for each bucket. You might use a simpler approach by using authorized account ID(s) to ensure all your receivers are in authorized AWS account(s). &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized notification receiver (e.g. SNS Topic, Lambda, etc.) for each bucket, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:05:56.194">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C96" name="Maintain a list of authorized S3 buckets to receive S3 inventory of each bucket" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized S3 buckets to receive S3 inventory of each bucket &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized bucket(s) to receive S3 inventory of each bucket, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:21:24.832">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C145" name="Maintain a list of buckets" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of buckets (or paths) required to be encrypted with server-side encryption with customer- provided keys (SSE-C) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of buckets (or paths) required to be encrypted with server-side encryption with customer- provided keys (SSE-C), its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:11:10.798">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C89" name="Maintain a list of IAM roles used for replication" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of IAM roles used for replication, ideally dedicated (e.g. using change management process on infrastructure-as-code) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of all IAM roles configured for replication &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:45:54.700">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C17" name="Maintain comprehensive list of those accessing S3" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each VPC, maintain a list of AWS Organizations, OU and/or AWS account(s), where IAM entities are authorized to access S3 &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For each VPC, request the list of AWS Organizations, OU and/or AWS account(s), where IAM entities are authorized to access S3, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:28:18.658">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C22" name="Maintain list of authorised S3 and S3 Access points" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized S3 and S3 access point (and their respective AWS accounts) to be access for each VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the list of authorized S3 and S3 access point to be access for each VPC, its review process, and its review records &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:37:59.110">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C116" name="Monitor abnormal behaviour on replication" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor abnormal behaviour on replication CloudWatch metrics (i.e. &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;BytesPendingReplication &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;OperationsPendingReplication&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:59:59.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C37" name="Monitor and investigate anonymous requests to objects" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor and investigate anonymous requests to objects (e.g. using CloudTrail S3 data events with userIdentity.accountId=ANONYMOUS_PRINCIPAL) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make an anonymous call, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:41:11.922">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C56" name="Monitor changes on bucket ACL" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor changes on bucket ACL other than for server access logging (e.g. using CloudTrail, 1) if the CloudTrail PutBucketAcl log indicates requestParameters.AccessControlPolicy.AccessControlList.G rant[].Grantee.xsi:type: "Group", then the URI should be "http://acs.amazonaws.com/groups/s3/LogDelivery", and 2) if the requestParameters.AccessControlPolicy.AccessControlList.G rant[].Grantee.xsi:type: "CanonicalUser" then the ID should be the same than "AccessControlPolicy.Owner.ID", and 3) requestParameters.x-amz-acl should be either "private", "log-delivery-write" or not existing) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a call to create a bucket ACL other than server access logging, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:12:02.942">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C13" name="Monitor external buckets to ensure only those authorised are used" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Monitor that only &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;external buckets are used (e.g. via CloudTrail S3 data events in resources[].accountId and resources[].ARN). Both account ID and bucket name must be verified. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:31:57.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C35" name="Monitor ObjectACL change" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor ObjectACL changed (or tentatively changed) to public using CloudTrail S3 data events&lt;/font&gt;&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to create a public ObjectACL, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:38:01.416">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C33" name="Monitor that only authorised AWS accounts to provide KMS keys are used for each AWS account" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C31]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized AWS accounts to provide KMS keys are used for each AWS account (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-aws-kms- key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:49:05.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C68" name="Monitor that only authorized KMS key(s) are used on each bucket" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C61]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized KMS key(s) are used on each bucket (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;requestParameter.bucketName &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server- side-encryption-aws-kms-key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request encrypted with an unauthorized KMS key, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:09:37.867">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C25" name="Monitor VPC DNS query log" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[depends on S3.C21,S3.C22]&lt;br&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;Monitor VPC DNS query logs that only authorised&amp;nbsp;S3 bucket and S3 access points are being queried in each VPC (e.g. using VPC DNS query logging), and protect it using Route53 ThreatModel &lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a DNS query to an unauthorized 1) S3 bucket and 2) S3 access points, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:44:11.731">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C150" name="Only Authorised IAM principals allowed" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C149, assured by S3.C151]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized a list of authorized IAM principals allowed to access via bucket policy are configured (e.g. using IAM Access Analyzer for the reconciliation) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring only authorized IAM principals allowed to access via bucket policy are configured&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;its records of execution for all new buckets&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;plan to move any older buckets &lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T17:11:44.677">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C41" name="Parameterize S3 bucket name or S3 access point in your code (no hardcoding)" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Parameterize S3 bucket name or S3 access point in your code (no hardcoding) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the process on ensuring S3 bucket name or S3 access point are not hard-coded &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:02:35.474">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C153" name="Prevent the creation of buckets with ACL enabled" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Prevent the creation of buckets with ACL enabled (e.g. by using a SCP and/or an IAM policy on "s3:CreateBucket" with a deny statement on "s3:x-amz-object- ownership":"BucketOwnerEnforced").&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Note it does not block someone to enable ACL afterwards via PutPutBucketOwnershipControls. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket to enable ACL, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:30:33.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C47" name="Protect Buckets Required to be public" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C48]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Front buckets required to be public, using authenticated CDN (e.g. CloudFront) or API Gateway, protected with WAF (e.g. for &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/how-to-prevent-hotlinking-by-using-aws-waf-amazon-cloudfront-and-referer-checking/" target="_blank"&gt;hotlinking&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="5"&gt;Request the process ensuring that buckets required to be public are front by authenticated CDN or API Gateway &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:32:56.009">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C124" name="S3 VPC Endpoints covered by VPC endpoint controls" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Ensure all S3 VPC endpoints (Interface and Gateway) are covered by the VPC endpoints controls &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring all S3 VPC endpoints (Interface and Gateway) are covered by the VPC endpoints controls, and its records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:46:40.619">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C14" name="Scan all data uploaded to external buckets" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Scan all data before uploading to an external bucket to ensure the classification of the data is aligned with the bucket classification (e.g. using Macie). &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;the mechanism ensuring all data are scanned for proper data classification before upload to an external bucket are configured&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;its records of execution for all object upload flows&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;plan to move any older object upload flows &lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:43:09.473">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C93" name="scan the objects for malware" issueId="" issueLink="" platform="" cost="1" risk="41" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C58]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;If the bucket is used as an input or the output of a process, scan the objects for malware (e.g. using &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://s3-virusscan.widdix.net/" target="_blank"&gt;VirusScan&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;or &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/apn/amazon-s3-malware-scanning-using-trend-micro-cloud-one-and-aws-security-hub/" target="_blank"&gt;Trend Micro Cloud One&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Inject a malware test file, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:10:07.042">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C40" name="Scan your CNAME records" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Scan your CNAME records (e.g. in Route53) and CloudFront origin for deleted buckets &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:51:02.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C18" name="Secure with VPC Threat Model" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each VPC with an IAM entity allowed to use S3, secure them with the VPC ThreatModel (e.g. &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpce-gateway.html" target="_blank"&gt;modification of VPC endpoints, VPC endpoint policy, routing table, Security Groups&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:31:49.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C58" name="Track all buckets you control and define data classification" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Track all buckets you control, define their authorized data classification, identify whether the hosted data is primary (i.e. source of truth, for example logs, backups, forensic data, raw data, etc.) or an input/output of a process (e.g. file-processing, software package, etc.), their WORM requirements (e.g. SEC 17a-4, CTCC, etc.), if they are production/non-production (preferably done at account-level), their storage class. You may use tags, Infra-as-code, AWS Glue Data Catalog or external management tool like &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://finraos.github.io/herd/" target="_blank"&gt;FINRA herd&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of all buckets you control, define their authorized data classification, identify whether the data is primary and the mechanism and records to ensure the accuracy of those metadata &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:16:31.129">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C11" name="Track all buckets you do not control that host your objects" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Track all buckets you don't control hosting your objects, define their authorised&amp;nbsp;data classification, identify their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), and get assured for the protection (e.g. through contractual agreement, verified by assurance programs, or using this ThreatModel). &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:06:31.436">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C59" name="Use a data discovery tool" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C58]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Use a data discovery tool (e.g. Amazon Macie) to control that no sensitive data are stored in unauthorized bucket &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Upload a higher classification data in a bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:18:15.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C60" name="Use a data discovery tool to ensure bucket names" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Use a data discovery tool (e.g. Amazon Macie) to ensure the bucket names, object names, tags and metadata do not contain sensitive data &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket name, object name, tags, or a metadata of an object with sensitive data, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:20:10.213">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C63" name="Use KMS ThreatModel to protect the KMS keys used for S3" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C61]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Use KMS ThreatModel to protect the KMS keys used for S3 (e.g. using encryptionContext on the policy of each KMS key) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the KMS ThreatModel and the evidence of its application to protect S3 &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:30:21.340">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C50" name="Verify account-level S3 Block Public Access is enabled on all AWS accounts" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify account-level S3 Block Public Access is enabled on all AWS accounts, with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true (e.g. using the AWS Config rule: &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-account-level-public-access-blocks.html" target="_blank"&gt;S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:41:58.297">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C79" name="Verify a lifecycle policy on incomplete multipart uploads" issueId="" issueLink="" platform="" cost="1" risk="20" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4" style=""&gt;Verify a lifecycle policy on incomplete multipart uploads is implemented on all buckets &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;font size="4"&gt;Create a bucket without a lifecycle policy to remove incomplete multipart upload, it should be detected&lt;/font&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:25:53.957">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify-all-associations-of-cloudfront-distributions-with-buckets-are-authorized" name="Verify all associations of CloudFront distributions with buckets are authorized" issueId="" issueLink="" platform="" cost="2" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all associations of CloudFront distributions with buckets are authorized&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a non-authorized distribution or association, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:18:20.263">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C67" name="Verify all buckets block PutObject requests with an unauthorized KMS key" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets block PutObject requests with an unauthorized KMS key (e.g. using the Config rule:&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-not-more-permissive.html" target="_blank"&gt;S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, note that a&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;new rule needs be deployed for each configuration, then the resource tracked by name or tag; alternatively you might use&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-server-side-encryption-enabled.html" target="_blank"&gt;S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to ensure a limited coverage)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket not blocking PutObject requests with an unauthorized KMS key, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:53:44.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C77" name="Verify all buckets blocks PutObject and PutObjectRetention requests with unauthorized S3 Object Lock " issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets blocks PutObject and PutObjectRetention requests with unauthorized S3 Object Lock (e.g. using the Config rule: &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-not-more-permissive.html" target="_blank"&gt;S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, note that a new rule needs be deployed for each configuration, then the resource tracked by name or tag) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:17:20.652">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C75" name="Verify all buckets have the correct default S3 Object Lock configuration" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all buckets have the correct default S3 Object Lock configuration &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket either&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;without S3 Object Lock&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;with an incorrect default S3 Object Lock&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;/ol&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;it should be detected.&lt;/span&gt; 
   &lt;p&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:12:01.260">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C100" name="Verify all buckets include a control to limit access to only authorized VPC(s)" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets include a control to limit access to only authorized VPC(s) (e.g. using the AWS Config rule &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-grantee-check.html" target="_blank"&gt;S3_BUCKET_POLICY_GRANTEE_CHECK&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove the control limiting access to only authorized VPC(s), it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:04:50.232">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C62" name="Verify all objects on S3 buckets are encrypted with an authorized KMS key" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all objects on S3 buckets are encrypted with an authorized KMS key (e.g. using S3 inventory, see &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/storage/encrypting-objects-with-amazon-s3-batch-operations/" target="_blank"&gt;blog&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, or &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_basics_metrics_recommendations.html#storage_lens_basics_metrics_types" target="_blank"&gt;S3 Storage Lens&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Upload an encrypted data using an unauthorized KMS key, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:48:04.211">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C117" name="Verify all replicated buckets have metrics enabled on each replication rule" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all replicated buckets have metrics enabled on each replication rule (included by default in S3 RTC) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Modify the replication metric of an authorized replication, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:03:19.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C111" name="Verify all S3 access points are VPC attached" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all S3 access points are VPC attached &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an internet-based access point, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:37:09.390">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C151" name="Verify Authorised IAM principals Access" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;font face="OpenSans"&gt;Verify only authorised&amp;nbsp;IAM principals allowed to access via bucket policy are used (e.g. using the AWS Config rule &lt;/font&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-grantee-check.html" target="_blank"&gt;S3_BUCKET_POLICY_GRANTEE_CHECK&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T17:14:16.565">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C88" name="Verify authorized buckets have the correct replication configuration" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify authorized buckets have the correct replication configuration &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:44:42.507">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C154" name="Verify bucket ACL and object ACL are disabled on each bucket" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify bucket ACL and object ACL are disabled on each bucket &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create/modify a bucket to enable ACL, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:31:51.253">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C70" name="Verify buckets holding primary data are versioned" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify buckets holding primary data are versioned (e.g. using &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-versioning-enabled.html" target="_blank"&gt;S3_BUCKET_VERSIONING_ENABLED&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove versioning from a bucket holding primary data, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:55:00.439">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C65" name="Verify each bucket has an authorized default encryption key and has S3 Bucket Key enabled" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify each bucket has an authorized default encryption key and has S3 Bucket Key enabled &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create/modify a bucket&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;without default encryption&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;with a wrong default encryption key&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;or without S3 Bucket Key disabled,&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;font face="OpenSans" size="4"&gt;&lt;br&gt;&lt;/font&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:36:04.590">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C109" name="Verify only access points are used in the resource-level statement in VPC endpoints" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify only access points are used in the resource-level statement in VPC endpoints &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a VPC endpoint giving access to an S3 bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:34:11.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C143" name="Verify only authorized buckets are configured as website" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify only authorized buckets are configured as website &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Enable website configuration on an unauthorized bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:20:07.480">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C97" name="Verify only authorized buckets are configured to receive inventory." issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt; &lt;/p&gt; 
   &lt;div class="page"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify only authorized buckets are configured to receive inventory.&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an unauthorized bucket to receive inventory, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:26:53.720">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C87" name="Verify only authorized buckets have replication enabled and with correct configuration" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify only authorized buckets have replication enabled and with correct configuration&lt;/font&gt;&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Configure replication on a non-authorized bucket, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:43:00.481">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C95" name="Verify only authorized notification receiver(s) are configured for buckets." issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify only authorized notification receiver(s) are configured for buckets. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an unauthorized receiver, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:17:49.174">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C92" name="Verify only the authorized IAM role is configured for each replication" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify only the authorized IAM role is configured for each replication &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create/modify a replication with an unauthorized IAM role, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:58:40.619">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C54" name="Verify S3 Block Public Access is enabled on all S3 access points" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify S3 Block Public Access is enabled on all S3 access points (including multi-region), with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove S3 Block Public Access of&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;an access point&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;a multi-region access point&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;it should be detected&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:00:43.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C52" name="Verify S3 Block Public Access is enabled on all S3 buckets" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify S3 Block Public Access is enabled on all S3 buckets, with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true (e.g. using the AWS Config rule: &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-level-public-access-prohibited.html" target="_blank"&gt;S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:52:28.767">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C20" name="Verify S3 VPC endpoints blocking unauthorised IAM" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all S3 VPC endpoint are blocking any IAM entity not belonging to an authorized AWS Organizations, OU and/or AWS account(s) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the policy statement blocking any IAM entity not belonging to an authorized AWS Organizations, OU and/or AWS account(s) from the VPC endpoint, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:34:57.678">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C24" name="Verify that all VPC are limited to authorised S3 buckets" issueId="" issueLink="" platform="" cost="2" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all VPC are limited to limit access to only authorized S3 bucket(s) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the control limiting access to only authorized S3 bucket(s), it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:42:32.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C48" name="Verify that no bucket is available publicly for write or read" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify no bucket is available publicly for write or read (e.g. using the AWS Config rules: &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-public-read-prohibited.html" target="_blank"&gt;S3_BUCKET_PUBLIC_READ_PROHIBITED&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-public-write-prohibited.html" target="_blank"&gt;S3_BUCKET_PUBLIC_WRITE_PROHIBITED&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a public S3 bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:34:57.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C57" name="Verify the control blocking bucket ACL changes other than for server access logging" issueId="" issueLink="" platform="" cost="2" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify the control blocking bucket ACL changes other than for server access logging (e.g. an SCP, a bucket policy and VPC endpoint policy) is properly implemented &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove the control blocking bucket ACL changes other than for server access logging, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:13:54.711">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C36" name="Verify the control blocking change" issueId="" issueLink="" platform="" cost="2" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify the control blocking change ObjectACL to public (e.g. an SCP and VPC endpoint policy) is properly implemented &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the control blocking changes of ObjectACL to public, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:39:38.608">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C39" name="Verify the control blocking the action " issueId="" issueLink="" platform="" cost="2" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt; &lt;/p&gt; 
        &lt;div class="page"&gt; 
         &lt;div class="section"&gt; 
          &lt;div class="layoutArea"&gt; 
           &lt;div class="column"&gt; 
            &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify the control blocking the action "s3:DeleteBucket" (e.g. an SCP on your AWS Organizations root node) is properly implemented&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the control blocking the action "s3:DeleteBucket" (e.g. an SCP on your root node), it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:49:17.194">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="bucket" name="Bucket" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T1" name="Bucket takeover to gather data" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket names are globally unique. An attacker can recreate the same bucket name of a deleted bucket you used to own to collect any new data being uploaded by a non-updated party, do a DNS takeover (using a non-deleted CNAME / CloudFront origin to the bucket) or to use remaining permissions to exfiltrate data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;"OPTIONAL": "s3:DeleteBucket"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS Medium 5.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.C16">
                  <countermeasures>
                    <countermeasure ref="S3.C38" mitigation="33"/>
                    <countermeasure ref="S3.C39" mitigation="33"/>
                    <countermeasure ref="S3.C40" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="75"/>
                    <countermeasure ref="S3.C13" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="50"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="30"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.C41" mitigation="75"/>
                    <countermeasure ref="S3.C46" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="75"/>
                <countermeasure ref="S3.C13" mitigation="25"/>
                <countermeasure ref="S3.C26" mitigation="50"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="30"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C38" mitigation="33"/>
                <countermeasure ref="S3.C39" mitigation="33"/>
                <countermeasure ref="S3.C40" mitigation="100"/>
                <countermeasure ref="S3.C41" mitigation="75"/>
                <countermeasure ref="S3.C46" mitigation="25"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T17" name="Destroy or modify primary data" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;S3 provides high durability by design (11 9s), however data can still be deleted by the customer. An attacker (or someone by negligence) can use its access to destroy (or modify) primary data located on S3, affecting the ability for the business to operate (for example, &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://www.networkcomputing.com/cloud-infrastructure/code-spaces-lesson-cloud-backup" target="_blank"&gt;Code Spaces&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;"AND": ["s3:DeleteObject", {&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;"OPTIONAL": "S3:DeleteObjectVersion" }, {&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;"OPTIONAL": "s3:BypassGovernanceMode" }]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS Medium 6.1" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H"/>
                <reference name="Example Code Spaces" url="https://www.networkcomputing.com/cloud-infrastructure/code-spaces-lesson-cloud-backup"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W18">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C63" mitigation="100"/>
                    <countermeasure ref="S3.C64" mitigation="100"/>
                    <countermeasure ref="S3.C65" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W20">
                  <countermeasures>
                    <countermeasure ref="S3.C69" mitigation="100"/>
                    <countermeasure ref="S3.C70" mitigation="100"/>
                    <countermeasure ref="S3.C71" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W22">
                  <countermeasures>
                    <countermeasure ref="S3.C73" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W23">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C74" mitigation="100"/>
                    <countermeasure ref="S3.C75" mitigation="100"/>
                    <countermeasure ref="S3.C76" mitigation="100"/>
                    <countermeasure ref="S3.C77" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C63" mitigation="100"/>
                <countermeasure ref="S3.C64" mitigation="100"/>
                <countermeasure ref="S3.C65" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
                <countermeasure ref="S3.C69" mitigation="100"/>
                <countermeasure ref="S3.C70" mitigation="100"/>
                <countermeasure ref="S3.C71" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C73" mitigation="100"/>
                <countermeasure ref="S3.C74" mitigation="100"/>
                <countermeasure ref="S3.C75" mitigation="100"/>
                <countermeasure ref="S3.C76" mitigation="100"/>
                <countermeasure ref="S3.C77" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Disruption of Service"/>
              </customFields>
            </threat>
            <threat ref="S3.T16" name="Files encrypted for ransomware" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;S3 provides several types of encryption where the key is not operated by AWS (e.g. SSE-KMS with Bring Your Own Key). An attacker can encrypt all the data stored in S3 to ransom the data owner to get the decryption key (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://rhinosecuritylabs.com/aws/s3-ransomware-part-1-attack-vector" target="_blank"&gt;blog&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). Alternatively, an attacker can change the default encryption key, for a similar effect on any new data uploaded. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"AND": ["s3:GetObject", "s3:PutObject"]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="75" availability="25" easeOfExploitation="75"/>
              <references>
                <reference name="Blog - Rhino Security Labs" url="https://rhinosecuritylabs.com/aws/s3-ransomware-part-1-attack-vector"/>
                <reference name="CVSS Medium 6.3" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C10" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C145" mitigation="100"/>
                    <countermeasure ref="S3.C146" mitigation="100"/>
                    <countermeasure ref="S3.C147" mitigation="100"/>
                    <countermeasure ref="S3.C148" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                    <countermeasure ref="S3.C68" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W20">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C69" mitigation="100"/>
                    <countermeasure ref="S3.C70" mitigation="100"/>
                    <countermeasure ref="S3.C71" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W22">
                  <countermeasures>
                    <countermeasure ref="S3.C73" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W23">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C74" mitigation="100"/>
                    <countermeasure ref="S3.C75" mitigation="100"/>
                    <countermeasure ref="S3.C76" mitigation="100"/>
                    <countermeasure ref="S3.C77" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C10" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C145" mitigation="100"/>
                <countermeasure ref="S3.C146" mitigation="100"/>
                <countermeasure ref="S3.C147" mitigation="100"/>
                <countermeasure ref="S3.C148" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
                <countermeasure ref="S3.C68" mitigation="100"/>
                <countermeasure ref="S3.C69" mitigation="100"/>
                <countermeasure ref="S3.C70" mitigation="100"/>
                <countermeasure ref="S3.C71" mitigation="100"/>
                <countermeasure ref="S3.C73" mitigation="100"/>
                <countermeasure ref="S3.C74" mitigation="100"/>
                <countermeasure ref="S3.C75" mitigation="100"/>
                <countermeasure ref="S3.C76" mitigation="100"/>
                <countermeasure ref="S3.C77" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Direct Financial Gain"/>
              </customFields>
            </threat>
            <threat ref="S3.T40" name="Increase bill by creating incomplete uploads" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;By default, when a multiple upload is initiated but not completed, S3 will keep it (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://www.reddit.com/r/aws/comments/immer3/protip_watch_out_for_stranded_multipart_uploads_i/" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). An attacker can upload a large amount of data without completing it, while being hard to detect. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutObject"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.0) Low 2.3" url="https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W24">
                  <countermeasures>
                    <countermeasure ref="S3.C78" mitigation="100"/>
                    <countermeasure ref="S3.C79" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C78" mitigation="100"/>
                <countermeasure ref="S3.C79" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Financial Drain"/>
              </customFields>
            </threat>
            <threat ref="S3.T47" name="Increase bill by restoring large amount of data" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Restore cost can be amplified by the size and the type (i.e. expedited). An attacker can restore lots of data to generate costs. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans"&gt;"UNIQUE": "s3:RestoreObject"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS Low 2.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Financial Drain"/>
              </customFields>
            </threat>
            <threat ref="S3.T11" name="Move prod data in non-prod environment" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Multiple types of environments are usually operated in AWS. An attacker can move the data from a secure location (e.g. production) to a less secure location (e.g. dev). &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:GetObject"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 4.4" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0009" url="https://attack.mitre.org/tactics/TA0009"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C13" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W12">
                  <countermeasures>
                    <countermeasure ref="S3.C17" mitigation="15"/>
                    <countermeasure ref="S3.C18" mitigation="10"/>
                    <countermeasure ref="S3.C19" mitigation="15"/>
                    <countermeasure ref="S3.C20" mitigation="100"/>
                    <countermeasure ref="S3.C21" mitigation="10"/>
                    <countermeasure ref="S3.C22" mitigation="10"/>
                    <countermeasure ref="S3.C23" mitigation="10"/>
                    <countermeasure ref="S3.C24" mitigation="10"/>
                    <countermeasure ref="S3.C25" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W18">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C59" mitigation="100"/>
                    <countermeasure ref="S3.C60" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C145" mitigation="100"/>
                    <countermeasure ref="S3.C146" mitigation="100"/>
                    <countermeasure ref="S3.C147" mitigation="100"/>
                    <countermeasure ref="S3.C148" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                    <countermeasure ref="S3.C68" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C104" mitigation="100"/>
                    <countermeasure ref="S3.C105" mitigation="100"/>
                    <countermeasure ref="S3.C109" mitigation="100"/>
                    <countermeasure ref="S3.C112" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C104" mitigation="100"/>
                <countermeasure ref="S3.C105" mitigation="100"/>
                <countermeasure ref="S3.C109" mitigation="100"/>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C112" mitigation="100"/>
                <countermeasure ref="S3.C13" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C145" mitigation="100"/>
                <countermeasure ref="S3.C146" mitigation="100"/>
                <countermeasure ref="S3.C147" mitigation="100"/>
                <countermeasure ref="S3.C148" mitigation="100"/>
                <countermeasure ref="S3.C17" mitigation="15"/>
                <countermeasure ref="S3.C18" mitigation="10"/>
                <countermeasure ref="S3.C19" mitigation="15"/>
                <countermeasure ref="S3.C20" mitigation="100"/>
                <countermeasure ref="S3.C21" mitigation="10"/>
                <countermeasure ref="S3.C22" mitigation="10"/>
                <countermeasure ref="S3.C23" mitigation="10"/>
                <countermeasure ref="S3.C24" mitigation="10"/>
                <countermeasure ref="S3.C25" mitigation="10"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C59" mitigation="100"/>
                <countermeasure ref="S3.C60" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
                <countermeasure ref="S3.C68" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T36" name="Object made public or accessible in a private bucket you own by changing object ACL" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Bucket authority only prevails on object ACL when the object access is explicitly denied by the bucket authority (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-auth-workflow-object-operation.html" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). An attacker (or someone by negligence) can change the object ACL to make it public or accessible for themselves (to exfiltrate or modify). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;"UNIQUE": "s3:PutObjectAcl"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 5.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
                <reference name="Reference - How Amazon S3 authorises a request for an object operation" url="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-auth-workflow-object-operation.html"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C118" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W15">
                  <countermeasures>
                    <countermeasure ref="S3.C34" mitigation="100"/>
                    <countermeasure ref="S3.C35" mitigation="100"/>
                    <countermeasure ref="S3.C36" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C49" mitigation="50"/>
                    <countermeasure ref="S3.C50" mitigation="50"/>
                    <countermeasure ref="S3.C51" mitigation="100"/>
                    <countermeasure ref="S3.C52" mitigation="100"/>
                    <countermeasure ref="S3.C53" mitigation="100"/>
                    <countermeasure ref="S3.C54" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C145" mitigation="100"/>
                    <countermeasure ref="S3.C146" mitigation="100"/>
                    <countermeasure ref="S3.C147" mitigation="100"/>
                    <countermeasure ref="S3.C148" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C63" mitigation="100"/>
                    <countermeasure ref="S3.C64" mitigation="100"/>
                    <countermeasure ref="S3.C65" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                    <countermeasure ref="S3.C68" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W35">
                  <countermeasures>
                    <countermeasure ref="S3.C152" mitigation="100"/>
                    <countermeasure ref="S3.C153" mitigation="100"/>
                    <countermeasure ref="S3.C154" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C118" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C145" mitigation="100"/>
                <countermeasure ref="S3.C146" mitigation="100"/>
                <countermeasure ref="S3.C147" mitigation="100"/>
                <countermeasure ref="S3.C148" mitigation="100"/>
                <countermeasure ref="S3.C152" mitigation="100"/>
                <countermeasure ref="S3.C153" mitigation="100"/>
                <countermeasure ref="S3.C154" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C34" mitigation="100"/>
                <countermeasure ref="S3.C35" mitigation="100"/>
                <countermeasure ref="S3.C36" mitigation="25"/>
                <countermeasure ref="S3.C49" mitigation="50"/>
                <countermeasure ref="S3.C50" mitigation="50"/>
                <countermeasure ref="S3.C51" mitigation="100"/>
                <countermeasure ref="S3.C52" mitigation="100"/>
                <countermeasure ref="S3.C53" mitigation="100"/>
                <countermeasure ref="S3.C54" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C63" mitigation="100"/>
                <countermeasure ref="S3.C64" mitigation="100"/>
                <countermeasure ref="S3.C65" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
                <countermeasure ref="S3.C68" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T14" name="Use bucket to upload a malware or modify an object to include a malware" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;S3 buckets are commonly used to distribute software. An attacker can upload malware in a bucket to better position it for later use, or directly change an object to include a malware (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://www.securityweek.com/exposed-twilio-sdk-abused-malvertising-attack" target="_blank"&gt;example&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS (3.1) High 7.3" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"/>
                <reference name="MITRE ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C14" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C47" mitigation="100"/>
                    <countermeasure ref="S3.C48" mitigation="100"/>
                    <countermeasure ref="S3.C49" mitigation="100"/>
                    <countermeasure ref="S3.C50" mitigation="100"/>
                    <countermeasure ref="S3.C51" mitigation="100"/>
                    <countermeasure ref="S3.C52" mitigation="100"/>
                    <countermeasure ref="S3.C53" mitigation="100"/>
                    <countermeasure ref="S3.C54" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W27">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C93" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C14" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C47" mitigation="100"/>
                <countermeasure ref="S3.C48" mitigation="100"/>
                <countermeasure ref="S3.C49" mitigation="100"/>
                <countermeasure ref="S3.C50" mitigation="100"/>
                <countermeasure ref="S3.C51" mitigation="100"/>
                <countermeasure ref="S3.C52" mitigation="100"/>
                <countermeasure ref="S3.C53" mitigation="100"/>
                <countermeasure ref="S3.C54" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C93" mitigation="100"/>
                <countermeasure ref="S3.C94" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-acl" name="Bucket ACL" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T50" name="DoS by blocking traffic using bucket ACL" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket ACL can allow access (e.g. for server access logging). An attacker can remove an existing permission to deny legitimate access to the bucket. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketAcl"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Low 2.4" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Disruption of Service"/>
              </customFields>
            </threat>
            <threat ref="S3.T4" name="Grant unauthorised access to a private bucket by changing bucket ACL" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket ACL can be used to give access to the bucket information, list the objects, and overwrite/delete objects. An attacker can change the bucket ACL to destroy or modify data, or exfiltrate data via the object name (1KB). &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;"UNIQUE": "s3:PutBucketAcl"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="75" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C10" mitigation="100"/>
                    <countermeasure ref="S3.C118" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C55" mitigation="100"/>
                    <countermeasure ref="S3.C56" mitigation="100"/>
                    <countermeasure ref="S3.C57" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C49" mitigation="100"/>
                    <countermeasure ref="S3.C50" mitigation="100"/>
                    <countermeasure ref="S3.C51" mitigation="100"/>
                    <countermeasure ref="S3.C52" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W35">
                  <countermeasures>
                    <countermeasure ref="S3.C152" mitigation="100"/>
                    <countermeasure ref="S3.C153" mitigation="100"/>
                    <countermeasure ref="S3.C154" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C10" mitigation="100"/>
                <countermeasure ref="S3.C118" mitigation="100"/>
                <countermeasure ref="S3.C152" mitigation="100"/>
                <countermeasure ref="S3.C153" mitigation="100"/>
                <countermeasure ref="S3.C154" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C49" mitigation="100"/>
                <countermeasure ref="S3.C50" mitigation="100"/>
                <countermeasure ref="S3.C51" mitigation="100"/>
                <countermeasure ref="S3.C52" mitigation="100"/>
                <countermeasure ref="S3.C55" mitigation="100"/>
                <countermeasure ref="S3.C56" mitigation="100"/>
                <countermeasure ref="S3.C57" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-logging" name="Bucket Logging" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T51" name="Evade detection by disabling S3 access logs" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;S3 access logs can be used by SIEM to detect abnormal behaviours. An attacker can disable S3 access log on a bucket to evade detection. &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Low 2.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0005" url="https://attack.mitre.org/tactics/TA0005"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-policy" name="Bucket Policy" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T37" name="Grant unauthorised access to a private bucket by changing bucket policy" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket policy can enable access to objects owned by the bucket. An attacker (or someone by negligence) can change the bucket policy and make the content accessible. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketPolicy"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) High 7.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C118" mitigation="100"/>
                    <countermeasure ref="S3.C151" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C149" mitigation="10"/>
                    <countermeasure ref="S3.C150" mitigation="10"/>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C49" mitigation="100"/>
                    <countermeasure ref="S3.C50" mitigation="100"/>
                    <countermeasure ref="S3.C53" mitigation="100"/>
                    <countermeasure ref="S3.C54" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C145" mitigation="100"/>
                    <countermeasure ref="S3.C147" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C63" mitigation="100"/>
                    <countermeasure ref="S3.C64" mitigation="100"/>
                    <countermeasure ref="S3.C65" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C118" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C145" mitigation="100"/>
                <countermeasure ref="S3.C147" mitigation="100"/>
                <countermeasure ref="S3.C149" mitigation="10"/>
                <countermeasure ref="S3.C150" mitigation="10"/>
                <countermeasure ref="S3.C151" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C49" mitigation="100"/>
                <countermeasure ref="S3.C50" mitigation="100"/>
                <countermeasure ref="S3.C53" mitigation="100"/>
                <countermeasure ref="S3.C54" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C63" mitigation="100"/>
                <countermeasure ref="S3.C64" mitigation="100"/>
                <countermeasure ref="S3.C65" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T38" name="Reduce bucket security by deleting the bucket policy" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket policy can deny access to objects, as it supersedes the object authority. An attacker (or someone by negligence) can delete the bucket policy and make the content less secure. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Medium 6.4" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"/>
                <reference name="Mitre ATT&amp;CK TA0004" url="https://attack.mitre.org/tactics/TA0004"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C118" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C49" mitigation="100"/>
                    <countermeasure ref="S3.C50" mitigation="100"/>
                    <countermeasure ref="S3.C51" mitigation="100"/>
                    <countermeasure ref="S3.C52" mitigation="100"/>
                    <countermeasure ref="S3.C53" mitigation="100"/>
                    <countermeasure ref="S3.C54" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C118" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C49" mitigation="100"/>
                <countermeasure ref="S3.C50" mitigation="100"/>
                <countermeasure ref="S3.C51" mitigation="100"/>
                <countermeasure ref="S3.C52" mitigation="100"/>
                <countermeasure ref="S3.C53" mitigation="100"/>
                <countermeasure ref="S3.C54" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
            <threat ref="S3.T20" name="Use CloudFront to access private bucket" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;CloudFront distributions can use S3 as their origin. An attacker can connect a CloudFront distribution to a private S3 bucket to get access to it. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketPolicy"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C145" mitigation="100"/>
                    <countermeasure ref="S3.C146" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C64" mitigation="100"/>
                    <countermeasure ref="S3.C65" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W31">
                  <countermeasures>
                    <countermeasure ref="S3.C101" mitigation="100"/>
                    <countermeasure ref="S3.C137" mitigation="100"/>
                    <countermeasure ref="verify-all-associations-of-cloudfront-distributions-with-buckets-are-authorized" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C101" mitigation="100"/>
                <countermeasure ref="S3.C137" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C145" mitigation="100"/>
                <countermeasure ref="S3.C146" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C64" mitigation="100"/>
                <countermeasure ref="S3.C65" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
                <countermeasure ref="verify-all-associations-of-cloudfront-distributions-with-buckets-are-authorized" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-tag" name="Bucket Tag" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T18" name="Exfiltrate data by using tags" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Objects and buckets can have tags. An attacker can use those features to exfiltrate data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"AND": [{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OR": ["GetObjectTagging", "s3:GetObjectVersionTagging"] }, {&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OR": ["s3:PutObjectTagging", "s3:PutObjectVersionTagging"] }]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Low 3.3" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-versioning" name="Bucket Versioning" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T48" name="Affect data protection by removing versioning" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Versioning can be used as a first level of integrity protection. An attacker can suspend versioning to affect data protection of a bucket. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketVersioning"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Low 2.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-website" name="Bucket WebSite" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T29" name="Clickjacking on S3 website" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 does not enforce certain security headers by default. An attacker can use an iFrame on your website to trick users to interact with their own scripts. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 4.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W34">
                  <countermeasures>
                    <countermeasure ref="S3.C141" mitigation="100"/>
                    <countermeasure ref="S3.C142" mitigation="100"/>
                    <countermeasure ref="S3.C143" mitigation="100"/>
                    <countermeasure ref="S3.C144" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C141" mitigation="100"/>
                <countermeasure ref="S3.C142" mitigation="100"/>
                <countermeasure ref="S3.C143" mitigation="100"/>
                <countermeasure ref="S3.C144" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
            <threat ref="S3.T15" name="Embed client-side script malware in bucket website" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 website enables users to be served client-side scripts (e.g. JavaScript). An attacker can upload a client-side script with a malware (e.g. cryptomining) on the visitor. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutObject"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C14" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W27">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C93" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C14" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C93" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Direct Financial Gain"/>
              </customFields>
            </threat>
            <threat ref="S3.T13" name="Intercept data in transit on the website endpoint" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 website endpoint is serving HTTP only. An attacker can intercept HTTP traffic to steal data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Low 3.1" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C47" mitigation="100"/>
                    <countermeasure ref="S3.C48" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W34">
                  <countermeasures>
                    <countermeasure ref="S3.C141" mitigation="100"/>
                    <countermeasure ref="S3.C142" mitigation="100"/>
                    <countermeasure ref="S3.C143" mitigation="100"/>
                    <countermeasure ref="S3.C144" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C141" mitigation="100"/>
                <countermeasure ref="S3.C142" mitigation="100"/>
                <countermeasure ref="S3.C143" mitigation="100"/>
                <countermeasure ref="S3.C144" mitigation="100"/>
                <countermeasure ref="S3.C47" mitigation="100"/>
                <countermeasure ref="S3.C48" mitigation="50"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="hotlinking" name="Hotlinking" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T22" name="Hotlinking content from S3 bucket" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;S3 charges for hosting and data transfer out. An attacker can hotlink your content hosted on S3 on another page to avoid paying the S3 charges (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/how-to-prevent-hotlinking-by-using-aws-waf-amazon-cloudfront-and-referer-checking/" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C118" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C47" mitigation="100"/>
                    <countermeasure ref="S3.C48" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C118" mitigation="100"/>
                <countermeasure ref="S3.C47" mitigation="100"/>
                <countermeasure ref="S3.C48" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Financial Drain"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="inventory" name="Inventory" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T42" name="Exfiltrate data via inventory" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Inventory sends the object names (i.e. keys) to any configured S3 bucket. An attacker can use the name of objects (1KB) to exfiltrate data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketInventory"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.C45" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W29">
                  <countermeasures>
                    <countermeasure ref="S3.C136" mitigation="100"/>
                    <countermeasure ref="S3.C96" mitigation="100"/>
                    <countermeasure ref="S3.C97" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C136" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C45" mitigation="100"/>
                <countermeasure ref="S3.C96" mitigation="100"/>
                <countermeasure ref="S3.C97" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="notification" name="Notification" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T41" name="Exfiltrate data via event notification" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Event notification sends the key to any configured SQS, SNS or Lambda (cross- account), or EventBridge (same account). An attacker can use the name of objects (1KB) to exfiltrate data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.C45" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W28">
                  <countermeasures>
                    <countermeasure ref="S3.C135" mitigation="100"/>
                    <countermeasure ref="S3.C94" mitigation="100"/>
                    <countermeasure ref="S3.C95" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C135" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C45" mitigation="100"/>
                <countermeasure ref="S3.C94" mitigation="100"/>
                <countermeasure ref="S3.C95" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="replication" name="Replication" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T49" name="Affect data protection by removing replication" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Replication can be used as a level of integrity protection and backup. An attacker can remove replication to affect the data protection. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutReplicationConfiguration"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Low 2.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
            <threat ref="S3.T2" name="Unauthorised access to data via bucket replication" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Replication allows you to replicate objects, their metadata and change ownership. The configuration focuses on new objects only (old objects replication requires &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/storage/replicating-existing-objects-between-s3-buckets/" target="_blank"&gt;a ticket to AWS Support&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). An attacker can configure replication on a bucket to replicate objects (or its metadata or tagging) in a bucket they control to exfiltrate data. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C118" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="33"/>
                    <countermeasure ref="S3.C33" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W27">
                  <countermeasures>
                    <countermeasure ref="S3.C116" mitigation="100"/>
                    <countermeasure ref="S3.C117" mitigation="100"/>
                    <countermeasure ref="S3.C134" mitigation="100"/>
                    <countermeasure ref="S3.C138" mitigation="100"/>
                    <countermeasure ref="S3.C86" mitigation="100"/>
                    <countermeasure ref="S3.C87" mitigation="100"/>
                    <countermeasure ref="S3.C88" mitigation="100"/>
                    <countermeasure ref="S3.C89" mitigation="100"/>
                    <countermeasure ref="S3.C90" mitigation="100"/>
                    <countermeasure ref="S3.C91" mitigation="100"/>
                    <countermeasure ref="S3.C92" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C116" mitigation="100"/>
                <countermeasure ref="S3.C117" mitigation="100"/>
                <countermeasure ref="S3.C118" mitigation="100"/>
                <countermeasure ref="S3.C134" mitigation="100"/>
                <countermeasure ref="S3.C138" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="33"/>
                <countermeasure ref="S3.C33" mitigation="33"/>
                <countermeasure ref="S3.C86" mitigation="100"/>
                <countermeasure ref="S3.C87" mitigation="100"/>
                <countermeasure ref="S3.C88" mitigation="100"/>
                <countermeasure ref="S3.C89" mitigation="100"/>
                <countermeasure ref="S3.C90" mitigation="100"/>
                <countermeasure ref="S3.C91" mitigation="100"/>
                <countermeasure ref="S3.C92" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="unauthorised-object-restore" name="Unauthorised Object Restore" desc="" library="">
          <threats>
            <threat ref="S3.T26" name="Unauthorised object restore into an unauthorised bucket" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Objects can be stored in S3 Glacier. An attacker can restore an object to an unauthorised&amp;nbsp;S3 bucket to collect or exfiltrate data. &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "s3:RestoreObject"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font size="4"&gt;&lt;font face="OpenSans"&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 4.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="cd19e902-2847-4a11-ac88-df27d4495661" diagramComponentId="8161f0c7-9d1e-4404-a102-ddfb99347714" ref="fa6e5955-9e01-403f-bb93-e9d4a305b2eb" name="Access Point (Internal)" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W17" name="Block direct public access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:31:30.636">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W33" name="Restrict access point access to VPC when in use" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:32.787">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="1" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C53" name="Enable S3 Block Public Access on all S3 access points" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C54]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Enable S3 Block Public Access on all S3 access points (including multi-region), with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="page"&gt; 
   &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Create a public bucket and try to access via access point one of its objects without proper authentication (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html#access-control-block-public-access-policy-status-access-points" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;)&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;change the ACL of an existing object to public and try to access via access point one of its objects&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;they should be denied.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:58:22.993">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C104" name="Maintain a list of authorized access between VPC, S3 access point and S3." issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized access between VPC, S3 access point and S3. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized access between VPC and S3 access point &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:52.631">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C33" name="Monitor that only authorised AWS accounts to provide KMS keys are used for each AWS account" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C31]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized AWS accounts to provide KMS keys are used for each AWS account (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-aws-kms- key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:49:05.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C54" name="Verify S3 Block Public Access is enabled on all S3 access points" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify S3 Block Public Access is enabled on all S3 access points (including multi-region), with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove S3 Block Public Access of&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;an access point&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;a multi-region access point&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;it should be detected&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:00:43.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-point" name="Access point" desc="" library="">
          <threats>
            <threat ref="S3.T54" name="Grant unauthorised access to a bucket by changing/deleting access point policy" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Access point policy can enable access to objects owned by the bucket. An attacker (or someone by negligence) can change the access point policy and make the content accessible. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OR": ["s3:PutAccessPointPolicy", "s3:DeleteAccessPointPolicy"]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Medium 6.8" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C53" mitigation="100"/>
                    <countermeasure ref="S3.C54" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C104" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C104" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C53" mitigation="100"/>
                <countermeasure ref="S3.C54" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T28" name="Unauthorised collection of data by swapping access point" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Access points can be deleted and recreated with the same name, and therefore the same ARN. An attacker can delete an access point and recreate the same, on a bucket (in the same account) it controls to collect/modify data; or making it accessible from the Internet. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;"AND": ["s3:CreateAccessPoint", "s3:DeleteAccessPoint"]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.6" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0009" url="https://attack.mitre.org/tactics/TA0009"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="fd3f1ad8-7269-4d19-857d-e24650802675" diagramComponentId="c2fb26e8-875a-4c7f-839d-9820e6fc17bc" ref="60e6cfa5-331e-4d69-86e3-de3e46c03830" name="WebSite Endpoint" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTP"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="40578297-513a-47d9-a207-7714ba38121f" diagramComponentId="3075d39b-a97d-45cf-b7ea-1ba4719779a7" ref="39feed16-7135-4dfe-a1e9-97746a264b70" name="Public / Accelerate End Point (HTTP/S)" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTP"/>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W26" name="Block all requests not using HTTP authorization header, if not explicitly authorized" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:33:34.456">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W07" name="Lack of Monitoring" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:39:20.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W30" name="Limit access from only authorized VPCs" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:28:39.262">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W06" name="S3 Data Events Unprotected" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:50:27.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W5" name="S3 endpoints accessible through corporate perimeter" state="0" impact="25" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:37:25.902">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W1" name="Unauthorised TLS version(s) from IAM entities you control access" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:39:46.769">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W3" name="Unencrypted access via HTTP not tracked or monitored" state="0" impact="25" issueId="" issueLink="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor and investigate that all requests made with HTTP (e.g via CloudTrail S3 data events with the lack of additionalEventData.CipherSuite) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:08:01.246">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W4" name="Unencrypted requests to S3 bucket you control are allowed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:16:35.085">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C84" name="Block all requests not using HTTP authorization header" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Block all requests not using HTTP authorization header, i.e. presign via query strings or POST (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) (e.g. using an SCP and S3 policy on all buckets with deny on "StringNotEquals":{"s3:authType": "REST-HEADER"}). Note it blocks uploads via the console, as well. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request with a non-HTTP authorization header, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:34:16.270">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C1" name="Block all unencrypted requests and unauthorised TLS version(s) from IAM entities you control" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;[S3.C1, depends on S3.C119, assured by S3.C2]&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;&lt;br&gt; &lt;/span&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block all unencrypted requests and &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;TLS version(s) from IAM entities you control&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;e.g.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;by denying all unencrypted request with the condition "aws:SecureTransport" = False,&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;or by using "s3:TlsVersion" !=&lt;/span&gt;&lt;/font&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; font-style: italic"&gt;authorized TLS version(s)&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;, using an SCP on your AWS Organization root node&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make an unencrypted S3 API call, it should be denied. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T10:40:32.604">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C6" name="Block all unencrypted requests to S3 bucket you control" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[S3.C6, depends on S3.C119, assured by S3.C7]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block all unencrypted requests to S3 bucket you control (e.g. by denying all requests with the condition "aws:SecureTransport" = False, or by using "s3:TlsVersion" != &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;authorized TLS version(s)&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, on the S3 bucket policy) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:21:35.185">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C8" name="Block S3 endpoints in your corporate perimeter security to the Internet" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Block S3 endpoints (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/general/latest/gr/s3.html" target="_blank"&gt;DNS&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-find-ip-address-ranges/" target="_blank"&gt;IP ranges&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) in your corporate perimeter security to the Internet (e.g. firewalls, or cloud interception proxy like &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://kivera.io/" target="_blank"&gt;Kivera&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) including via Internet Gateway, to force usage of VPC endpoints. It will block data-plane transfer.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Note: AWS console stays functional as it proxies non- data-plane requests (via "console.aws.amazon.com"). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:33:20.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C10" name="Enable GuardDuty Monitoring" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Enable and monitor &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html" target="_blank"&gt;S3 protection in Amazon GuardDuty&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;in all AWS accounts in all Regions, and protect it using GuardDuty ThreatModel. Ensure findings are investigated (e.g. using Amazon Detective). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Guard Duty Policy Findings" url="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html"/>
          </references>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the GuardDuty ThreatModel and the evidence of its application for enabling, monitoring, investigation and protecting S3 protection &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:40:34.220">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C98" name="For each S3 bucket, maintain a list of VPC(s), authorized to access it." issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each S3 bucket, maintain a list of VPC(s), authorized to access it. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For each S3 bucket, request the list of authorized VPC to access it, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:29:00.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C99" name="Limit the access to authorised VPC" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C98, assured by S3.C100]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to only those VPC(s) (e.g. using S3 bucket statement, deny if the condition "aws:SourceVpce", or if the bucket policy size is beyond the limit, use this condition on access point) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to the bucket outside an authorized VPC, it should be denied&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:01:37.327">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C119" name="Maintain a list of authorised version(s) of TLS/SSL" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Maintain a list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;version(s) of TLS/SSL per bucket (or per account/OU/Org) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:03:03.954">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C4" name="Monitor and investigate that all requests made with HTTP" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Monitor and investigate that all requests made with HTTP (e.g via CloudTrail S3 data events with the lack of additionalEventData.CipherSuite) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make an unencrypted AWS API call from one of your VPC with VPC endpoint, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:08:55.331">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C85" name="Monitor and investigate that all requests not using HTTP authorization header" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor and investigate that all requests not using HTTP authorization header (e.g via CloudTrail S3 with the additionalEventData.AuthenticationMethod different from "AuthHeader") &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
        &lt;p&gt;&lt;/p&gt; 
        &lt;ol&gt; 
         &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;a presigned AWS API call&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;a POST request&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
        &lt;/ol&gt;it should be detected.&amp;nbsp; 
        &lt;p&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:36:08.288">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C100" name="Verify all buckets include a control to limit access to only authorized VPC(s)" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets include a control to limit access to only authorized VPC(s) (e.g. using the AWS Config rule &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-grantee-check.html" target="_blank"&gt;S3_BUCKET_POLICY_GRANTEE_CHECK&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove the control limiting access to only authorized VPC(s), it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:04:50.232">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C7" name="Verify all S3 bucket policies block unencrypted traffic" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all S3 bucket policies block unencrypted traffic (e.g. using the AWS Config rule: &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-ssl-requests-only.html" target="_blank"&gt;S3_BUCKET_SSL_REQUESTS_ONLY&lt;/a&gt;&lt;/span&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;) and &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;version(s) of TLS. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:23:48.398">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C2" name="Verify control blocking unencrypted requests" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Verify the control blocking unencrypted requests and unauthorised&amp;nbsp;TLS version(s) from IAM entities you control (e.g. an SCP on your AWS Organisations root node) is properly implemented &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T10:57:59.265">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="compromised-iam-access" name="Compromised IAM Access" desc="" library="">
          <threats>
            <threat ref="S3.T39" name="Exfiltrate data by using of a compromised IAM access from Internet" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;IAM credentials can be compromised (directly or using &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ShareObjectPreSignedURL.html" target="_blank"&gt;pre-signed URL&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). An attacker can use a compromised but authorized IAM credential to download your object from an internal bucket via the public endpoint (using or not their own VPC endpoint). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS Medium 6.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W26">
                  <countermeasures>
                    <countermeasure ref="S3.C84" mitigation="100"/>
                    <countermeasure ref="S3.C85" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C84" mitigation="100"/>
                <countermeasure ref="S3.C85" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="data-intransit-intercept" name="Data Intransit Intercept" desc="" library="">
          <threats>
            <threat ref="S3.T34" name="Intercept data in transit to an internal bucket" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 allows communication over HTTP.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;An attacker can intercept the traffic you send on an internal bucket, in order to read or modify the data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:any"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 4.6" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:P/AC:H/PR:N/UI:R/S:U/C:H/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W1">
                  <countermeasures>
                    <countermeasure ref="S3.C1" mitigation="100"/>
                    <countermeasure ref="S3.C119" mitigation="25"/>
                    <countermeasure ref="S3.C2" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W3">
                  <countermeasures>
                    <countermeasure ref="S3.C4" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W4">
                  <countermeasures>
                    <countermeasure ref="S3.C119" mitigation="25"/>
                    <countermeasure ref="S3.C6" mitigation="50"/>
                    <countermeasure ref="S3.C7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W5">
                  <countermeasures>
                    <countermeasure ref="S3.C8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C1" mitigation="100"/>
                <countermeasure ref="S3.C119" mitigation="25"/>
                <countermeasure ref="S3.C2" mitigation="100"/>
                <countermeasure ref="S3.C4" mitigation="100"/>
                <countermeasure ref="S3.C6" mitigation="50"/>
                <countermeasure ref="S3.C7" mitigation="25"/>
                <countermeasure ref="S3.C8" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="reduce-bucket-security" name="Reduce Bucket Security" desc="" library="">
          <threats>
            <threat ref="S3.T53" name="Reduce bucket security by modify the account public access block" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Account public access block protect all buckets of an AWS account from leakage (e.g. object ACL set to public). An attacker can remove this protection by modifying the account public access block.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutAccountPublicAccessBlock"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="75" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0008" url="https://attack.mitre.org/tactics/TA0008"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C10" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C10" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="04b8f64c-2230-4ea3-9f0f-d8fe18d81c4f" diagramComponentId="344781be-1c35-4caa-869c-19eb56b4a613" ref="b704684f-718d-4da4-9129-0c5a07c4cce1" name="S3.VPC.Endpoint (global)" desc="" library="CS-Default" parentComponentRef="5af42def-e4a8-4508-9a2b-7fa03c8da273" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="5ae710d9-f7f3-445b-8ccd-e4958c8b9cc9" diagramComponentId="639e625c-f1f8-4f7e-8d77-3dc9a0e227b5" ref="8b59bc8e-6949-4302-b597-e78f5d7c3bc0" name="S3.VPC.Endpoint (Gateway)" desc="" library="CS-Default" parentComponentRef="5af42def-e4a8-4508-9a2b-7fa03c8da273" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W12" name="Unlimited/MOnitored access via S3 VPC Endpoints" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:27:26.782">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C124" name="S3 VPC Endpoints covered by VPC endpoint controls" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Ensure all S3 VPC endpoints (Interface and Gateway) are covered by the VPC endpoints controls &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring all S3 VPC endpoints (Interface and Gateway) are covered by the VPC endpoints controls, and its records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:46:40.619">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ungoverned-end-point" name="Ungoverned End Point" desc="" library="">
          <threats>
            <threat ref="S3.T45" name="Exfiltrate data via ungoverned S3 endpoint" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 VPC endpoints can be either Interface or Gateway. An attacker can create a second endpoint to create an ungoverned exfiltration vector. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "ec2:CreateVpcEndpoint"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS Low 1.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0005" url="https://attack.mitre.org/tactics/TA0005"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W12">
                  <countermeasures>
                    <countermeasure ref="S3.C124" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C124" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="5e66b6d1-4fc1-4c00-afe1-395688d710ce" diagramComponentId="bb48391a-4490-4e39-ae5a-d2d17fb0b78b" ref="fbcdc126-9d9a-4faa-891b-0a8f736efadc" name="Lambda" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-lambda">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="e56ca9a8-0e30-432b-9ee7-b077b003db36" diagramComponentId="0b4166ba-adfe-46df-8a8c-542fefecd14b" ref="2eeb3b27-e8a5-4dee-8740-69dc127f33b6" name="S3 Control" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-s3-control">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="0ba4fc2f-96cc-4e08-b433-ace11814c733" diagramComponentId="a613c69a-98e8-4229-8695-aad76ff24a67" ref="1e4d368d-4700-498a-9f8f-c26b084e0c19" name="Public End Point" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTP"/>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W21" name="Encrypt or tokenize critical data" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:04:32.743">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W33" name="Restrict access point access to VPC when in use" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:32.787">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W06" name="S3 Data Events Unprotected" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:50:27.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="1" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W08" name="Using External Buckets" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:05:31.276">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C72" name="Aligned with your data governance" issueId="" issueLink="" platform="" cost="2" risk="44" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Aligned with your data governance, encrypt on the client side - or tokenize - appropriate data &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the governance and mechanism(s) used to protect data (e.g. encrypt or tokenize critical data on the client side &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:05:08.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C12" name="Allow only authorised ACL" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Allow only authorized ACL on objects for bucket you don't control (e.g. using IAM and VPC endpoint policy with the &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#acl-specific-condition-keys" target="_blank"&gt;ACL conditions&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Put an object with an unauthorized ACL, it should be denied. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:11:13.489">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C108" name="Block all traffic from Internet-configured S3 access point" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C111]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block all traffic from Internet-configured S3 access point (e.g. on the bucket policy, using a deny statement with the condition "StringNotEquals": {"s3:AccessPointNetworkOrigin": "VPC"}) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an internet-facing access point and try to access a bucket, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:32:45.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C112" name="Block object access to S3 bucket not via an AP" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C104]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block any &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html#access-points-service-api-support" target="_blank"&gt;object-related operations&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;access to S3 bucket not through access point (i.e. using a deny IAM policy statement with the condition "ArnNotLike" {"s3:DataAccessPointArn": "arn:aws:s3:&lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;Region&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;:&lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;AccountId&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;:accesspoint/*"}) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Access any S3 bucket using the S3 public endpoint, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:39:10.426">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C8" name="Block S3 endpoints in your corporate perimeter security to the Internet" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Block S3 endpoints (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/general/latest/gr/s3.html" target="_blank"&gt;DNS&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-find-ip-address-ranges/" target="_blank"&gt;IP ranges&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) in your corporate perimeter security to the Internet (e.g. firewalls, or cloud interception proxy like &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://kivera.io/" target="_blank"&gt;Kivera&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) including via Internet Gateway, to force usage of VPC endpoints. It will block data-plane transfer.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Note: AWS console stays functional as it proxies non- data-plane requests (via "console.aws.amazon.com"). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:33:20.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C107" name="Block the creation of non-VPC S3 access point" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Block the creation "s3:CreateAccessPoint" of non-VPC S3 access point (e.g. using the condition "StringNotEquals": {"s3:AccessPointNetworkOrigin": "VPC"}) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do a request to create an internet-based access point, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:29:12.755">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C106" name="Deny all IAM principals" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C110]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket policy, deny all IAM principals not using an authorized S3 access point(s) using the condition "s3:DataAccessPointAccount" or preferably "s3:DataAccessPointArn" &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Query the bucket outside S3 access point, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:27:13.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C21" name="Enable VPC DNS query logging" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Enable &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-query-logs.html" target="_blank"&gt;VPC DNS query logging&lt;/a&gt; &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in all VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the mechanism to enable VPC DNS query logging in all VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:36:35.127">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C105" name="Limit access via the S3 access point" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C104, assured by S3.C109]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit access via the S3 access point by using in VPC endpoint and/or bucket policy the condition "s3:DataAccessPointAccount" or preferably "s3:DataAccessPointArn" in an allow statement to reduce the length of allowlist bucket name in VPC endpoint/bucket policy. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do a request on an unauthorized access point or bucket, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:25:27.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C104" name="Maintain a list of authorized access between VPC, S3 access point and S3." issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized access between VPC, S3 access point and S3. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized access between VPC and S3 access point &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:52.631">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C13" name="Monitor external buckets to ensure only those authorised are used" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Monitor that only &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;external buckets are used (e.g. via CloudTrail S3 data events in resources[].accountId and resources[].ARN). Both account ID and bucket name must be verified. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:31:57.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C33" name="Monitor that only authorised AWS accounts to provide KMS keys are used for each AWS account" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C31]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized AWS accounts to provide KMS keys are used for each AWS account (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-aws-kms- key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:49:05.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C11" name="Track all buckets you do not control that host your objects" issueId="" issueLink="" platform="" cost="1" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Track all buckets you don't control hosting your objects, define their authorised&amp;nbsp;data classification, identify their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), and get assured for the protection (e.g. through contractual agreement, verified by assurance programs, or using this ThreatModel). &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the list of all authorized external buckets authorized to host your objects, their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), their data classification and the mechanism used to ensure the security of those buckets &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:06:31.436">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C111" name="Verify all S3 access points are VPC attached" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all S3 access points are VPC attached &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an internet-based access point, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:37:09.390">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C109" name="Verify only access points are used in the resource-level statement in VPC endpoints" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify only access points are used in the resource-level statement in VPC endpoints &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a VPC endpoint giving access to an S3 bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:34:11.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C110" name="Verify S3 bucket policies deny non-authorized S3 access points" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;Ve&lt;span style="font-family: OpenSans; background-color: rgb(255, 255, 255);"&gt;rify S3 bucket policies deny non-authorized S3 access points&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove/modify the deny on the bucket policy, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:35:50.535">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="other" name="Other" desc="" library="">
          <threats>
            <threat ref="S3.T10" name="Exfiltrate data by using the public endpoint to upload data in an attacker bucket, using external credentials" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;AWS authenticates per AWS account. An attacker can bring its own credentials to exfiltrate data to external S3 buckets through the S3 public endpoint. It can be a non-authenticated user as well. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Medium 6.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C104" mitigation="100"/>
                    <countermeasure ref="S3.C105" mitigation="100"/>
                    <countermeasure ref="S3.C108" mitigation="100"/>
                    <countermeasure ref="S3.C109" mitigation="100"/>
                    <countermeasure ref="S3.C111" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C104" mitigation="100"/>
                <countermeasure ref="S3.C105" mitigation="100"/>
                <countermeasure ref="S3.C108" mitigation="100"/>
                <countermeasure ref="S3.C109" mitigation="100"/>
                <countermeasure ref="S3.C111" mitigation="100"/>
                <countermeasure ref="S3.C8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="s3-allows-iam-entities-to-upload-data-in-a-bucket-in-other-aws-accounts" name="S3 allows IAM Entities to upload data in a bucket in other AWS Accounts" desc="" library="">
          <threats>
            <threat ref="S3.T7" name="Exfiltrate data to an attacker bucket via public endpoint" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 allows IAM entities to upload data in a bucket in other AWS accounts, if they have the IAM permissions. An attacker can use one of your IAM entities to upload data to one of their buckets. If the attacker does not control object ACL, it can use the name of objects (1KB). &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"AND": ["s3:PutObject", {&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"OPTIONAL": "s3:PutObjectAcl" }]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 5.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W08">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="75"/>
                    <countermeasure ref="S3.C13" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C104" mitigation="100"/>
                    <countermeasure ref="S3.C105" mitigation="100"/>
                    <countermeasure ref="S3.C106" mitigation="100"/>
                    <countermeasure ref="S3.C107" mitigation="100"/>
                    <countermeasure ref="S3.C108" mitigation="100"/>
                    <countermeasure ref="S3.C109" mitigation="100"/>
                    <countermeasure ref="S3.C110" mitigation="100"/>
                    <countermeasure ref="S3.C111" mitigation="100"/>
                    <countermeasure ref="S3.C112" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C104" mitigation="100"/>
                <countermeasure ref="S3.C105" mitigation="100"/>
                <countermeasure ref="S3.C106" mitigation="100"/>
                <countermeasure ref="S3.C107" mitigation="100"/>
                <countermeasure ref="S3.C108" mitigation="100"/>
                <countermeasure ref="S3.C109" mitigation="100"/>
                <countermeasure ref="S3.C11" mitigation="75"/>
                <countermeasure ref="S3.C110" mitigation="100"/>
                <countermeasure ref="S3.C111" mitigation="100"/>
                <countermeasure ref="S3.C112" mitigation="100"/>
                <countermeasure ref="S3.C13" mitigation="25"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C8" mitigation="50"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="892cace5-45ae-4d6a-9fc9-1623a0828fca" diagramComponentId="277dd606-a594-4489-96bb-b4d355e25dc4" ref="c0b52751-5bda-40bf-a71b-e7d9e2676555" name="S3 Control" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-s3-control">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W34" name="Control IAM roles used for Batch" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:49:42.111">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C139" name="Ensure only an authorized IAM role is attached on each Batch job" issueId="" issueLink="" platform="" cost="1" risk="27" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C120, assured by S3.C123]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only an authorized IAM role is attached on each Batch job &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring only an authorized IAM role is attached on each Batch job, and the evidence of its execution for all new {resource} &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:51:45.256">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C122" name="Limit access to authorized IAM roles used for Batch job" issueId="" issueLink="" platform="" cost="1" risk="27" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C120]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit access to authorized IAM roles used for Batch job, using the IAM ThreatModel (e.g. trust policy, and "iam:PassRole") &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt; &lt;/p&gt; 
   &lt;div class="page"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the IAM ThreatModel and the evidence of its application to the IAM roles used for Batch job&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:55:01.872">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C121" name="Limit the access to only required resources/permissions of each authorized IAM role configured for Batch jobs" issueId="" issueLink="" platform="" cost="1" risk="27" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C120]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to only required resources/permissions (e.g. source/destination bucket, Lambda functions) of each authorized IAM role configured for Batch jobs &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the access to only required resources/permissions for each Batch IAM role, and how they aligned to the replication requirements &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:53:32.297">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C120" name="Maintain a list of IAM roles used for Batch job" issueId="" issueLink="" platform="" cost="1" risk="27" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of IAM roles used for Batch job, ideally dedicated (e.g. using change management process on infrastructure-as-code) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of all IAM roles configured for Batch job &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:50:09.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C123" name="Verify only the authorized IAM role is configured for each Batch job" issueId="" issueLink="" platform="" cost="2" risk="27" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify only the authorized IAM role is configured for each Batch job &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:56:21.302">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="batch" name="Batch" desc="" library="">
          <threats>
            <threat ref="S3.T44" name="Exfiltrate, modify or delete objects using Batch" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 Batch Operations require an IAM role (with proper trust policy), then can run operations including copy, or replace/delete object tags. An attacker can use Batch copy or modify objects to exfiltrate or change the access management of an object (if relying on tag). &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"AND": ["s3:CreateJob", "iam:PassRole"]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Medium 6.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:C/C:H/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W34">
                  <countermeasures>
                    <countermeasure ref="S3.C120" mitigation="100"/>
                    <countermeasure ref="S3.C121" mitigation="100"/>
                    <countermeasure ref="S3.C122" mitigation="100"/>
                    <countermeasure ref="S3.C123" mitigation="100"/>
                    <countermeasure ref="S3.C139" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C120" mitigation="100"/>
                <countermeasure ref="S3.C121" mitigation="100"/>
                <countermeasure ref="S3.C122" mitigation="100"/>
                <countermeasure ref="S3.C123" mitigation="100"/>
                <countermeasure ref="S3.C139" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="63f85e74-ee59-4002-840b-e149f98b1d25" diagramComponentId="43c7205e-92be-4d9f-8917-155b5bf4231a" ref="71f62ca2-8263-458e-86d1-8cda6683ae8d" name="S3 Control Public Endpoint (HTTP/S)" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTP"/>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W35" name="Disabling ACLs for all buckets" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:28:29.178">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W07" name="Lack of Monitoring" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:39:20.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C10" name="Enable GuardDuty Monitoring" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Enable and monitor &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html" target="_blank"&gt;S3 protection in Amazon GuardDuty&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;in all AWS accounts in all Regions, and protect it using GuardDuty ThreatModel. Ensure findings are investigated (e.g. using Amazon Detective). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Guard Duty Policy Findings" url="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html"/>
          </references>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the GuardDuty ThreatModel and the evidence of its application for enabling, monitoring, investigation and protecting S3 protection &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:40:34.220">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C152" name="Ensure bucket ACL and object ACL are disabled on each bucket" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C154]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure bucket ACL and object ACL are disabled on each bucket &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring bucket ACL and object ACL are disabled on each bucket&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;its records of execution for all new buckets&lt;/li&gt; 
     &lt;li&gt;plan to move any older buckets&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:28:55.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C153" name="Prevent the creation of buckets with ACL enabled" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Prevent the creation of buckets with ACL enabled (e.g. by using a SCP and/or an IAM policy on "s3:CreateBucket" with a deny statement on "s3:x-amz-object- ownership":"BucketOwnerEnforced").&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Note it does not block someone to enable ACL afterwards via PutPutBucketOwnershipControls. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket to enable ACL, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:30:33.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C154" name="Verify bucket ACL and object ACL are disabled on each bucket" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify bucket ACL and object ACL are disabled on each bucket &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create/modify a bucket to enable ACL, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:31:51.253">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="reduce-bucket-security" name="Reduce Bucket Security" desc="" library="">
          <threats>
            <threat ref="S3.T53" name="Reduce bucket security by modify the account public access block" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Account public access block protect all buckets of an AWS account from leakage (e.g. object ACL set to public). An attacker can remove this protection by modifying the account public access block.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutAccountPublicAccessBlock"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="75" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0008" url="https://attack.mitre.org/tactics/TA0008"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C10" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W35">
                  <countermeasures>
                    <countermeasure ref="S3.C152" mitigation="100"/>
                    <countermeasure ref="S3.C153" mitigation="100"/>
                    <countermeasure ref="S3.C154" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C10" mitigation="100"/>
                <countermeasure ref="S3.C152" mitigation="100"/>
                <countermeasure ref="S3.C153" mitigation="100"/>
                <countermeasure ref="S3.C154" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
            <threat ref="S3.T52" name="Reduce bucket security by modify the bucket public access block" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket public access block protect individual buckets from leakage (e.g. object ACL set to public). An attacker can remove this protection by modifying the bucket public access block. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketPublicAccessBlock"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="75" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.9" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0008" url="https://attack.mitre.org/tactics/TA0008"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C10" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W35">
                  <countermeasures>
                    <countermeasure ref="S3.C152" mitigation="100"/>
                    <countermeasure ref="S3.C153" mitigation="100"/>
                    <countermeasure ref="S3.C154" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C10" mitigation="100"/>
                <countermeasure ref="S3.C152" mitigation="100"/>
                <countermeasure ref="S3.C153" mitigation="100"/>
                <countermeasure ref="S3.C154" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="09f66c32-3a7f-495a-adaa-c5559ad5c141" diagramComponentId="8602b6c6-8636-4590-ab88-9856f5512039" ref="dc08e016-c014-4dbc-9597-95c9b2196450" name="Multi-Region Access Point" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W17" name="Block direct public access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:31:30.636">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W33" name="Restrict access point access to VPC when in use" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:32.787">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C106" name="Deny all IAM principals" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C110]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket policy, deny all IAM principals not using an authorized S3 access point(s) using the condition "s3:DataAccessPointAccount" or preferably "s3:DataAccessPointArn" &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Query the bucket outside S3 access point, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:27:13.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C53" name="Enable S3 Block Public Access on all S3 access points" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C54]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Enable S3 Block Public Access on all S3 access points (including multi-region), with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="page"&gt; 
   &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
    &lt;div class="layoutArea"&gt; 
     &lt;div class="column"&gt; 
      &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Create a public bucket and try to access via access point one of its objects without proper authentication (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html#access-control-block-public-access-policy-status-access-points" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;)&lt;/span&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;change the ACL of an existing object to public and try to access via access point one of its objects&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;they should be denied.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:58:22.993">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C105" name="Limit access via the S3 access point" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C104, assured by S3.C109]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit access via the S3 access point by using in VPC endpoint and/or bucket policy the condition "s3:DataAccessPointAccount" or preferably "s3:DataAccessPointArn" in an allow statement to reduce the length of allowlist bucket name in VPC endpoint/bucket policy. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do a request on an unauthorized access point or bucket, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:25:27.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C104" name="Maintain a list of authorized access between VPC, S3 access point and S3." issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized access between VPC, S3 access point and S3. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized access between VPC and S3 access point &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:52.631">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C109" name="Verify only access points are used in the resource-level statement in VPC endpoints" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify only access points are used in the resource-level statement in VPC endpoints &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a VPC endpoint giving access to an S3 bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:34:11.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C54" name="Verify S3 Block Public Access is enabled on all S3 access points" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify S3 Block Public Access is enabled on all S3 access points (including multi-region), with BlockPublicAcls, IgnorePublicAcls, BlockPublicPolicy, and RestrictPublicBuckets set to true. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove S3 Block Public Access of&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;an access point&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;a multi-region access point&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;it should be detected&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:00:43.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C110" name="Verify S3 bucket policies deny non-authorized S3 access points" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;Ve&lt;span style="font-family: OpenSans; background-color: rgb(255, 255, 255);"&gt;rify S3 bucket policies deny non-authorized S3 access points&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove/modify the deny on the bucket policy, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:35:50.535">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="unauthorised-access" name="Unauthorised Access" desc="" library="">
          <threats>
            <threat ref="S3.T56" name="Gain unauthorised access to buckets trusting all Multi-Region Access Points" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Buckets used by Multi-Region Access Points can be configured to delegate their access to any MRAP using the condition "s3:DataAccessPointAccount". An attacker can create a MRAP, add any misconfigured bucket and gain access to it. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"AND": ["s3:CreateMultiRegionAccessPoint", "s3:PutMultiRegionAccessPointPolicy"]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:C/C:N/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C106" mitigation="100"/>
                    <countermeasure ref="S3.C110" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C106" mitigation="100"/>
                <countermeasure ref="S3.C110" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T55" name="Grant unauthorised access to buckets by changing the Multi-Region Access Point policy" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Multi-Region Access Point policy can enable access to objects owned by the bucket. An attacker (or someone by negligence) can change the Multi-Region Access Point policy and make the content accessible. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutMultiRegionAccessPointPolicy"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="75" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Medium 6.8" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0008" url="https://attack.mitre.org/tactics/TA0008"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W17">
                  <countermeasures>
                    <countermeasure ref="S3.C53" mitigation="100"/>
                    <countermeasure ref="S3.C54" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C104" mitigation="100"/>
                    <countermeasure ref="S3.C105" mitigation="100"/>
                    <countermeasure ref="S3.C109" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C104" mitigation="100"/>
                <countermeasure ref="S3.C105" mitigation="100"/>
                <countermeasure ref="S3.C109" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="20"/>
                <countermeasure ref="S3.C53" mitigation="100"/>
                <countermeasure ref="S3.C54" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="326f493e-a7ef-4dee-8ec2-7b76e72b630c" diagramComponentId="654e6b20-71c0-4ed3-adaa-2c563da1bd58" ref="5f6c8642-529d-4a62-ba26-e600b681d49a" name="AWS Services (Compatible with Access Point)" desc="such as CloudFormation, S3 etc" library="" parentComponentRef="" componentDefinitionRef="toc-aws-services">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="ea8b301f-ae65-4949-8f94-5c5efe13c27e" diagramComponentId="7a7529b9-a163-4898-980f-00fb8c2d59ec" ref="6c03c684-3e0e-4bac-8786-28e63567806b" name="Bucket (External)" desc="Bucket sub-resources" library="trustoncloud-s3" parentComponentRef="" componentDefinitionRef="toc-bucket">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W21" name="Encrypt or tokenize critical data" state="0" impact="25" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:04:32.743">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W16" name="Enforce Good Coding Practice" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:01:59.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W07" name="Lack of Monitoring" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:39:20.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Limit the access to the IAM actions required to execute the threats" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W10" name="Manage all external buckets" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:09:20.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W08" name="Manage External Buckets" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:05:31.276">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W32" name="Protect and/or claim your domains and trademarks/copyrights" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:21:06.278">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W33" name="Restrict access point access to VPC when in use" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:32.787">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W06" name="S3 Data Events Unprotected" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:50:27.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W5" name="S3 endpoints accessible through corporate perimeter" state="0" impact="25" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:37:25.902">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W1" name="Unauthorised TLS version(s) from IAM entities you control access" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:39:46.769">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W2" name="Unauthorised TLS version(s) from VPC endpoints you control provide access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:42:10.110">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W3" name="Unencrypted access via HTTP not tracked or monitored" state="0" impact="25" issueId="" issueLink="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor and investigate that all requests made with HTTP (e.g via CloudTrail S3 data events with the lack of additionalEventData.CipherSuite) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:08:01.246">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W12" name="Unlimited/MOnitored access via S3 VPC Endpoints" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:27:26.782">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C72" name="Aligned with your data governance" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Aligned with your data governance, encrypt on the client side - or tokenize - appropriate data &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the governance and mechanism(s) used to protect data (e.g. encrypt or tokenize critical data on the client side &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:05:08.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C5" name="A statement exists on all your VPC endpoint policy denying all requests" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify a statement exists on all your VPC endpoint policy denying all requests with the condition "aws:SecureTransport" = False &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create/remove the statement on a VPC endpoint policy denying 1) all unencrypted requests or 2) unauthorized TLS version(s), it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:47:05.860">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C1" name="Block all unencrypted requests and unauthorised TLS version(s) from IAM entities you control" issueId="" issueLink="" platform="" cost="0" risk="44" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;[S3.C1, depends on S3.C119, assured by S3.C2]&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;&lt;br&gt; &lt;/span&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block all unencrypted requests and &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;TLS version(s) from IAM entities you control&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;e.g.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;by denying all unencrypted request with the condition "aws:SecureTransport" = False,&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;or by using "s3:TlsVersion" !=&lt;/span&gt;&lt;/font&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; font-style: italic"&gt;authorized TLS version(s)&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;, using an SCP on your AWS Organization root node&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make an unencrypted S3 API call, it should be denied. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T10:40:32.604">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C3" name="Block all unencrypted requests and unauthorised TLS version(s) from VPC endpoints you control" issueId="" issueLink="" platform="" cost="0" risk="44" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[S3.C3, depends on S3.C119, assured by S3.C5]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;font face="OpenSans"&gt;Block all unencrypted requests and unauthorised&amp;nbsp;TLS version(s) from VPC endpoints you control (e.g. by denying all requests with the condition "aws:SecureTransport" = False, or by using "s3:TlsVersion" != &lt;/font&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;authorized TLS version(s)&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, on the VPC endpoint policy) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make an unencrypted AWS API call from one of your VPC with VPC endpoint, it should be denied.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:28:45.782">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C8" name="Block S3 endpoints in your corporate perimeter security to the Internet" issueId="" issueLink="" platform="" cost="0" risk="38" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Block S3 endpoints (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/general/latest/gr/s3.html" target="_blank"&gt;DNS&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-find-ip-address-ranges/" target="_blank"&gt;IP ranges&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) in your corporate perimeter security to the Internet (e.g. firewalls, or cloud interception proxy like &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://kivera.io/" target="_blank"&gt;Kivera&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) including via Internet Gateway, to force usage of VPC endpoints. It will block data-plane transfer.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Note: AWS console stays functional as it proxies non- data-plane requests (via "console.aws.amazon.com"). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:33:20.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C19" name="block Unauthorised IAM entity" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Block any IAM entity not belonging to an authorized AWS Organizations, OU and/or AWS account(s) to call S3 from your VPCs by adding a deny statement on S3 VPC endpoint policy of each VPC, with the condition using "aws:PrincipalOrgPaths" (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;ref&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) including the full Org ID, as those are globally unique. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each VPC, do an API call with an IAM entity which is not part of its authorized AWS Organizations path(s), it should be denied. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:32:43.892">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C10" name="Enable GuardDuty Monitoring" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Enable and monitor &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html" target="_blank"&gt;S3 protection in Amazon GuardDuty&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;in all AWS accounts in all Regions, and protect it using GuardDuty ThreatModel. Ensure findings are investigated (e.g. using Amazon Detective). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Guard Duty Policy Findings" url="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html"/>
          </references>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the GuardDuty ThreatModel and the evidence of its application for enabling, monitoring, investigation and protecting S3 protection &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:40:34.220">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C118" name="Enable Macie" issueId="" issueLink="" platform="" cost="0" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Enable &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/macie/latest/user/findings-types.html#findings-policy-types" target="_blank"&gt;S3 policy findings in Amazon Macie&lt;/a&gt; &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in all AWS accounts in all Regions, and protect it using Macie ThreatModel&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Macie Policy Findings" url="https://docs.aws.amazon.com/macie/latest/user/findings-types.html#findings-policy-types"/>
          </references>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:43:23.044">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C21" name="Enable VPC DNS query logging" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Enable &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-query-logs.html" target="_blank"&gt;VPC DNS query logging&lt;/a&gt; &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in all VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the mechanism to enable VPC DNS query logging in all VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:36:35.127">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C46" name="Ensure all S3 buckets interacted with are in the correct AWS account" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Ensure all S3 buckets interacted with are in the correct AWS account (e.g. using the condition in all compatible S3 requests: x-amz-expected-bucket-owner and x-amz-source-expected- bucket-owner) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:04:34.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C23" name="Limit access to only authorised S3 bucket" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Limit the access to only authorized S3 bucket(s) or their AWS account(s) from each VPC (e.g. using the condition key "s3:ResourceAccount" on the VPC endpoint policy, alternatively use specific resource-level statement for each bucket, or if the VPC endpoint policy size is beyond the limit and more granular control on VPC is required, use access points) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request to an unauthorized bucket from one of your VPC, it should be denied &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:41:03.157">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C105" name="Limit access via the S3 access point" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C104, assured by S3.C109]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit access via the S3 access point by using in VPC endpoint and/or bucket policy the condition "s3:DataAccessPointAccount" or preferably "s3:DataAccessPointArn" in an allow statement to reduce the length of allowlist bucket name in VPC endpoint/bucket policy. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Do a request on an unauthorized access point or bucket, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:25:27.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C119" name="Maintain a list of authorised version(s) of TLS/SSL" issueId="" issueLink="" platform="" cost="0" risk="44" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Maintain a list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;version(s) of TLS/SSL per bucket (or per account/OU/Org) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T11:03:03.954">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C104" name="Maintain a list of authorized access between VPC, S3 access point and S3." issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized access between VPC, S3 access point and S3. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized access between VPC and S3 access point &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:23:52.631">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C17" name="Maintain comprehensive list of those accessing S3" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each VPC, maintain a list of AWS Organizations, OU and/or AWS account(s), where IAM entities are authorized to access S3 &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For each VPC, request the list of AWS Organizations, OU and/or AWS account(s), where IAM entities are authorized to access S3, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:28:18.658">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C22" name="Maintain list of authorised S3 and S3 Access points" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized S3 and S3 access point (and their respective AWS accounts) to be access for each VPC &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the list of authorized S3 and S3 access point to be access for each VPC, its review process, and its review records &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:37:59.110">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C4" name="Monitor and investigate that all requests made with HTTP" issueId="" issueLink="" platform="" cost="0" risk="44" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Monitor and investigate that all requests made with HTTP (e.g via CloudTrail S3 data events with the lack of additionalEventData.CipherSuite) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Detective" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make an unencrypted AWS API call from one of your VPC with VPC endpoint, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:08:55.331">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C13" name="Monitor external buckets to ensure only those authorised are used" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Monitor that only &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;external buckets are used (e.g. via CloudTrail S3 data events in resources[].accountId and resources[].ARN). Both account ID and bucket name must be verified. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:31:57.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C33" name="Monitor that only authorised AWS accounts to provide KMS keys are used for each AWS account" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C31]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized AWS accounts to provide KMS keys are used for each AWS account (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-aws-kms- key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:49:05.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C25" name="Monitor VPC DNS query log" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[depends on S3.C21,S3.C22]&lt;br&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;Monitor VPC DNS query logs that only authorised&amp;nbsp;S3 bucket and S3 access points are being queried in each VPC (e.g. using VPC DNS query logging), and protect it using Route53 ThreatModel &lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a DNS query to an unauthorized 1) S3 bucket and 2) S3 access points, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:44:11.731">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C103" name="Protect and/or claim your domains and trademarks/copyrights" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Protect and/or claim your domains and trademarks/copyrights (by creating your trademark buckets, and using the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/terms/#notice-and-procedure-for-making-claims-of-copyright-infringement" target="_blank"&gt;copyright infringement process&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;from AWS) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the process by protecting and/or claiming your domains and trademarks/copyright &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:21:54.195">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C15" name="Request access via S3 access point" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request access via S3 access point on bucket you don't own, if compatible with your interaction with the bucket (e.g. not through not-compatible AWS service) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the documented reason access point was not implemented in the use case &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:46:33.300">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C14" name="Scan all data uploaded to external buckets" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Scan all data before uploading to an external bucket to ensure the classification of the data is aligned with the bucket classification (e.g. using Macie). &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;the mechanism ensuring all data are scanned for proper data classification before upload to an external bucket are configured&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;its records of execution for all object upload flows&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;plan to move any older object upload flows &lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:43:09.473">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C18" name="Secure with VPC Threat Model" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each VPC with an IAM entity allowed to use S3, secure them with the VPC ThreatModel (e.g. &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpce-gateway.html" target="_blank"&gt;modification of VPC endpoints, VPC endpoint policy, routing table, Security Groups&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:31:49.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C11" name="Track all buckets you do not control that host your objects" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Track all buckets you don't control hosting your objects, define their authorised&amp;nbsp;data classification, identify their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), and get assured for the protection (e.g. through contractual agreement, verified by assurance programs, or using this ThreatModel). &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Request the list of all authorized external buckets authorized to host your objects, their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), their data classification and the mechanism used to ensure the security of those buckets &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:06:31.436">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C29" name="Use unguessable naming convention" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Use unguessable naming convention for the email addresses of your AWS accounts (e.g. add a + sign and a random string to redirect the email in the same mailbox) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Review naming convention for root account email and their implementation &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:25:18.936">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C30" name="Use unguessable naming convention for your IAM users and IAM roles" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Use unguessable naming convention for your IAM users and IAM roles (e.g. add a random string) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Review naming convention for IAM users/role and their implementation &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:26:35.176">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C2" name="Verify control blocking unencrypted requests" issueId="" issueLink="" platform="" cost="2" risk="44" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Verify the control blocking unencrypted requests and unauthorised&amp;nbsp;TLS version(s) from IAM entities you control (e.g. an SCP on your AWS Organisations root node) is properly implemented &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T10:57:59.265">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C109" name="Verify only access points are used in the resource-level statement in VPC endpoints" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify only access points are used in the resource-level statement in VPC endpoints &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a VPC endpoint giving access to an S3 bucket, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:34:11.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C20" name="Verify S3 VPC endpoints blocking unauthorised IAM" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all S3 VPC endpoint are blocking any IAM entity not belonging to an authorized AWS Organizations, OU and/or AWS account(s) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the policy statement blocking any IAM entity not belonging to an authorized AWS Organizations, OU and/or AWS account(s) from the VPC endpoint, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:34:57.678">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C24" name="Verify that all VPC are limited to authorised S3 buckets" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify all VPC are limited to limit access to only authorized S3 bucket(s) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the control limiting access to only authorized S3 bucket(s), it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:42:32.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="bucket-tag" name="Bucket Tag" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T18" name="Exfiltrate data by using tags" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Objects and buckets can have tags. An attacker can use those features to exfiltrate data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"AND": [{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OR": ["GetObjectTagging", "s3:GetObjectVersionTagging"] }, {&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OR": ["s3:PutObjectTagging", "s3:PutObjectVersionTagging"] }]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Low 3.3" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="bucket-versioning" name="Bucket Versioning" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T48" name="Affect data protection by removing versioning" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Versioning can be used as a first level of integrity protection. An attacker can suspend versioning to affect data protection of a bucket. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutBucketVersioning"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Low 2.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses/>
              <countermeasures/>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="other" name="Other" desc="" library="">
          <threats>
            <threat ref="S3.T23" name="Phishing using trademarks" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;S3 provides URLs to buckets using the bucket name (i.e. "&lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;mybucket&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;.s3.amazonaws.com"). An attacker can create a bucket with the name of your trademark to phish users. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS (3.1) Low 3.1" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W32">
                  <countermeasures>
                    <countermeasure ref="S3.C103" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C103" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T19" name="Recon of AWS root account emails using email ACL grantee feature" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;S3 allows you to add root account emails in ACL (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#specifying-grantee" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;), and as well resolve the given canonical ID into an AWS account ID (via a bucket policy, which automatically resolves a canonical ID into an ARN). An attacker can do trial-and- error to discover existing AWS root account emails and related AWS account ID (even if you do not use the region where the feature is available); and use this information to launch another attack (e.g. phishing). &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS (3.1) Low 2.0" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:P/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="S3.C29" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
            <threat ref="S3.T32" name="Recon on information about a bucket" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Error messages can give some information about specific buckets. An attacker who knows the bucket name can find its AWS account and AWS Region. To find the AWS Region, use "aws s3 presign bucket-name/whatever" the error message will give you the region if not in the right region. To find the account, look at the call in CloudTrail (with S3 data enabled) under the resource section. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.3" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses/>
              <countermeasures/>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
            <threat ref="S3.T24" name="Recon on valid AWS account or IAM principals" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;AWS provides error messages in S3 bucket policy that can be used for basic recon. An attacker can discover whether an AWS account with a specific AWS account ID or AWS IAM principals exists, by modifying the S3 policy to grant some rights to the said AWS account/IAM principal.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="1" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="CVSS (3.1) Low 2.0" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:P/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="S3.C30" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="s3-allows-http" name="S3 allows HTTP" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T12" name="Intercept data in transit to an external bucket" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 allows communication over HTTP. An attacker can intercept the traffic you send on an external bucket, in order to read or modify the data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "s3:any"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 4.6" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:P/AC:H/PR:N/UI:R/S:U/C:H/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W1">
                  <countermeasures>
                    <countermeasure ref="S3.C1" mitigation="50"/>
                    <countermeasure ref="S3.C119" mitigation="25"/>
                    <countermeasure ref="S3.C2" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W2">
                  <countermeasures>
                    <countermeasure ref="S3.C119" mitigation="25"/>
                    <countermeasure ref="S3.C3" mitigation="50"/>
                    <countermeasure ref="S3.C5" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W3">
                  <countermeasures>
                    <countermeasure ref="S3.C4" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W5">
                  <countermeasures>
                    <countermeasure ref="S3.C8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C1" mitigation="50"/>
                <countermeasure ref="S3.C119" mitigation="25"/>
                <countermeasure ref="S3.C2" mitigation="25"/>
                <countermeasure ref="S3.C3" mitigation="50"/>
                <countermeasure ref="S3.C4" mitigation="100"/>
                <countermeasure ref="S3.C5" mitigation="25"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C8" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="upload-download" name="Upload/Download" desc="" library="trustoncloud-s3">
          <threats>
            <threat ref="S3.T9" name="Exfiltrate data by uploading it to an attacker bucket using a non-authenticated user or an unauthorised external IAM entity via one of your S3 VPC endpoints" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;VPC endpoints for S3 allow any entity to connect from a VPC to any S3 bucket without Internet Gateway. An attacker can exfiltrate data to an external S3 bucket via one of your VPC endpoints, using a non-authenticated user or its own external IAM entity. Note that some external IAM entities might be authorised, if provided by one of your business partners. &lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium (6.2)" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C15" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W12">
                  <countermeasures>
                    <countermeasure ref="S3.C17" mitigation="15"/>
                    <countermeasure ref="S3.C18" mitigation="10"/>
                    <countermeasure ref="S3.C19" mitigation="15"/>
                    <countermeasure ref="S3.C20" mitigation="10"/>
                    <countermeasure ref="S3.C21" mitigation="100"/>
                    <countermeasure ref="S3.C22" mitigation="10"/>
                    <countermeasure ref="S3.C23" mitigation="10"/>
                    <countermeasure ref="S3.C24" mitigation="10"/>
                    <countermeasure ref="S3.C25" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W33">
                  <countermeasures>
                    <countermeasure ref="S3.C104" mitigation="100"/>
                    <countermeasure ref="S3.C105" mitigation="100"/>
                    <countermeasure ref="S3.C109" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C104" mitigation="100"/>
                <countermeasure ref="S3.C105" mitigation="100"/>
                <countermeasure ref="S3.C109" mitigation="100"/>
                <countermeasure ref="S3.C15" mitigation="100"/>
                <countermeasure ref="S3.C17" mitigation="15"/>
                <countermeasure ref="S3.C18" mitigation="10"/>
                <countermeasure ref="S3.C19" mitigation="15"/>
                <countermeasure ref="S3.C20" mitigation="10"/>
                <countermeasure ref="S3.C21" mitigation="100"/>
                <countermeasure ref="S3.C22" mitigation="10"/>
                <countermeasure ref="S3.C23" mitigation="10"/>
                <countermeasure ref="S3.C24" mitigation="10"/>
                <countermeasure ref="S3.C25" mitigation="10"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T3" name="Exfiltrate your data hosted on an external bucket, by using of a compromised IAM access from Internet" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt; &lt;/p&gt; 
   &lt;div class="page"&gt; 
    &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
     &lt;div class="layoutArea"&gt; 
      &lt;div class="column"&gt; 
       &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;IAM credentials can be compromised. An attacker can use a compromised but &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;credential to download your object from an external bucket via the public endpoint (using or not their own VPC endpoint).&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
       &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
       &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 14.6667px;"&gt;IAM Access&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
       &lt;p&gt; &lt;/p&gt; 
       &lt;div class="page"&gt; 
        &lt;div class="section"&gt; 
         &lt;div class="layoutArea"&gt; 
          &lt;div class="column"&gt; 
           &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;{&lt;/span&gt;&lt;/p&gt; 
           &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;&lt;br&gt; "UNIQUE": "s3:GetObject" &lt;/span&gt;&lt;/p&gt; 
           &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;}&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="75"/>
              <references>
                <reference name="Medium (6.7)" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N"/>
                <reference name="Mitre TA0010" url="https://attack.mitre.org/versions/v10/tactics/TA0010/"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C10" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W08">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.C46" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C10" mitigation="100"/>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C46" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T5" name="Unauthorised upload of a private object in an accessible bucket (e.g. public) you do not own" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 buckets can be public for a legitimate reason. An attacker (or someone by negligence) can upload sensitive data in an accessible bucket (e.g. public) you do not own to make it accessible to exfiltrate it. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "s3:PutObject"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 5.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W08">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C12" mitigation="100"/>
                    <countermeasure ref="S3.C14" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C12" mitigation="100"/>
                <countermeasure ref="S3.C14" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
            <threat ref="S3.T31" name="Upload in an authorised external bucket, but in an incorrect AWS account" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Bucket names are globally unique. An attacker can take over a legitimate external bucket, and deceive you into sending it to their bucket. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "s3:PutObject"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS Medium 4.0" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:H/UI:R/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C13" mitigation="100"/>
                    <countermeasure ref="S3.C15" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C13" mitigation="100"/>
                <countermeasure ref="S3.C15" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="457f3b67-aaa0-4e8c-b278-5f73194ae1d7" diagramComponentId="0a8a59de-ac89-44b6-986b-c4df0776c6f6" ref="5c0e78e3-5d42-4695-80a7-ffc3559da647" name="Lambda" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-lambda">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="4c109202-3667-47c2-b3d4-471ca1064955" diagramComponentId="199be801-85e1-43e8-8f19-bd7f778bf956" ref="58272f47-8e1d-4655-9bfe-77c893b60676" name="Object (Internal)" desc="Your Object + Version(s) or Ownership-given Object" library="" parentComponentRef="" componentDefinitionRef="toc-object">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W16" name="Enforce Good Coding Practice" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:01:59.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W18" name="Identify and ensure the protection all internal buckets hosting your objects" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:15:44.727">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W30" name="Limit access from only authorized VPCs" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:28:39.262">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W20" name="Protect primary data against loss" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:51:09.805">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="1" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W23" name="Use S3 Object Lock to protect data integrity" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:09:15.017">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C71" name="Backup primary data in a secure location under a different security authority" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[depends on S3.C58]&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Backup primary data in a secure location under a different security authority (e.g. in an &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;AWS data bunker account &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;via replication) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Recover" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism used to backup primary data in a location which have different security authority, its records of execution, and records of restoration testing &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:57:48.291">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C98" name="For each S3 bucket, maintain a list of VPC(s), authorized to access it." issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each S3 bucket, maintain a list of VPC(s), authorized to access it. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For each S3 bucket, request the list of authorized VPC to access it, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:29:00.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C74" name="Implement the authorized default S3 Object Lock" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C58, assured by S3.C75]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Implement the authorized default S3 Object Lock on each bucket (note: Amazon S3 evaluates and applies bucket policies before applying bucket default S3 Object Lock settings) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Upload an object without appropriate S3 Object Lock, it should have the S3 Object Lock automatically. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:10:05.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C99" name="Limit the access to authorised VPC" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C98, assured by S3.C100]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to only those VPC(s) (e.g. using S3 bucket statement, deny if the condition "aws:SourceVpce", or if the bucket policy size is beyond the limit, use this condition on access point) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to the bucket outside an authorized VPC, it should be denied&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:01:37.327">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C33" name="Monitor that only authorised AWS accounts to provide KMS keys are used for each AWS account" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C31]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized AWS accounts to provide KMS keys are used for each AWS account (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-aws-kms- key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:49:05.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C58" name="Track all buckets you control and define data classification" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Track all buckets you control, define their authorized data classification, identify whether the hosted data is primary (i.e. source of truth, for example logs, backups, forensic data, raw data, etc.) or an input/output of a process (e.g. file-processing, software package, etc.), their WORM requirements (e.g. SEC 17a-4, CTCC, etc.), if they are production/non-production (preferably done at account-level), their storage class. You may use tags, Infra-as-code, AWS Glue Data Catalog or external management tool like &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://finraos.github.io/herd/" target="_blank"&gt;FINRA herd&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of all buckets you control, define their authorized data classification, identify whether the data is primary and the mechanism and records to ensure the accuracy of those metadata &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:16:31.129">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C75" name="Verify all buckets have the correct default S3 Object Lock configuration" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all buckets have the correct default S3 Object Lock configuration &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket either&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;without S3 Object Lock&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;with an incorrect default S3 Object Lock&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;/ol&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;it should be detected.&lt;/span&gt; 
   &lt;p&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T13:12:01.260">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C100" name="Verify all buckets include a control to limit access to only authorized VPC(s)" issueId="" issueLink="" platform="" cost="2" risk="46" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets include a control to limit access to only authorized VPC(s) (e.g. using the AWS Config rule &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-grantee-check.html" target="_blank"&gt;S3_BUCKET_POLICY_GRANTEE_CHECK&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove the control limiting access to only authorized VPC(s), it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:04:50.232">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C44" name="When using etaf properly account for definitions" issueId="" issueLink="" platform="" cost="0" risk="20" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;if etag is used, make sure properly account for its different definitions (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;ref&lt;/span&gt;&lt;/font&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;)&lt;/font&gt;&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the process ensuring etag different definitions are properly accounted for &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:12:23.068">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="bucket" name="Bucket" desc="" library="">
          <threats>
            <threat ref="S3.T27" name="Abuse MD5 etag" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Etags includes the MD5 of the file but not consistently and can be used by developers to verify the integrity of a file. An attacker can affect an upload function to change the etag of a file, in order to disrupt a workflow downstream. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="1" integrity="25" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS (3.1) Low 1.8" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:N/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0040" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.C44" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C44" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="lifecycle" name="Lifecycle" desc="" library="">
          <threats>
            <threat ref="S3.T25" name="Delete objects by using lifecycle" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="layoutArea"&gt; 
  &lt;div class="column"&gt; 
   &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Lifecycle allows you to delete objects after its configured expiry. An attacker can use a lifecycle configuration to destroy data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"UNIQUE": "s3:PutLifecycleConfiguration"&lt;/font&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.5" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W18">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W20">
                  <countermeasures>
                    <countermeasure ref="S3.C71" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W23">
                  <countermeasures>
                    <countermeasure ref="S3.C58" mitigation="100"/>
                    <countermeasure ref="S3.C74" mitigation="100"/>
                    <countermeasure ref="S3.C75" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C58" mitigation="100"/>
                <countermeasure ref="S3.C71" mitigation="100"/>
                <countermeasure ref="S3.C74" mitigation="100"/>
                <countermeasure ref="S3.C75" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="object-tagging" name="Object Tagging" desc="" library="">
          <threats>
            <threat ref="S3.T33" name="Gain access by modifying or deleting important object tags" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Tags can be used for various reasons, including security classification or access management (via ABAC). An attacker can change the tagging of an object to another value enabling them to execute another attack. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;"OR": ["s3:PutObjectTagging", "s3:DeleteObjectTagging"]&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="2"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS (3.1) Medium 4.4" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0004" url="https://attack.mitre.org/tactics/TA0004"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Launch Another Attack"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a4b0d342-0db2-42f8-bd94-66020b038784" diagramComponentId="092d0066-d6d5-4d30-a8d9-f9b9e6cf3f2c" ref="4fbd9cc8-722a-4ec7-9203-88c6e6950ab3" name="Access Point (External)" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="409be338-42a1-4521-98db-7a6a0c349a15" diagramComponentId="c584b381-9809-4808-83d2-41adb19a6519" ref="c65332f8-25a0-40e5-8efd-51089727567b" name="CloudTrail" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-cloudwatch">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="c8aeedab-0b58-443a-98d2-8ddb5c2f9e2d" diagramComponentId="8f9c139c-6c66-4626-81ec-045cb73e776b" ref="65b675ef-666a-47dc-8921-e5f861b0725c" name="AWS Services" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-group">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W10" name="Manage all external buckets" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:09:20.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W06" name="S3 Data Events Unprotected" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:50:27.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W11" name="Threats on all AWS Services accessing S3 not quantified" state="0" impact="100" issueId="" issueLink="">
          <desc>Many AWS Services access and utilise S3, you need to ensure that you understand the risk assocaited with these services and the buckets that they utilise</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:23:00.903">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W14" name="Unauthorised AWS accounts Accessing KMS Keys" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:42:22.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="25" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C32" name="Block requests with unauthorised AWS account providing the KMS key " issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Block requests with &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;unauthorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS account providing the KMS key (e.g. using an SCP, bucket policy and VPC endpoint deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-aws-kms-key-id" is not a KMS key from an authorized AWS accounts) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a request encrypted with a KMS key from unauthorized AWS account, it should be denied&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:45:21.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C16b" name="Enforce AWS Services usage in VPC only (where possible)" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;span style="font-family: OpenSans; font-size: 14.6667px;"&gt;Enforce usage in VPC only, whenever possible.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:24:39.967">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C31" name="Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized AWS accounts to provide KMS keys for S3 for each AWS account &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;AWS accounts to provide KMS keys for S3 for each AWS account, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:43:03.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C13" name="Monitor external buckets to ensure only those authorised are used" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Monitor that only &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;external buckets are used (e.g. via CloudTrail S3 data events in resources[].accountId and resources[].ARN). Both account ID and bucket name must be verified. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:31:57.627">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C33" name="Monitor that only authorised AWS accounts to provide KMS keys are used for each AWS account" issueId="" issueLink="" platform="" cost="0" risk="20" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C31]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized AWS accounts to provide KMS keys are used for each AWS account (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-aws-kms- key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to an unauthorized bucket, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T09:49:05.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C16a" name="Threat Model all AWS Services" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Analyse and protect all AWS services accessing S3 (e.g. via ThreatModel).&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:24:04.569">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C11" name="Track all buckets you do not control that host your objects" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Track all buckets you don't control hosting your objects, define their authorised&amp;nbsp;data classification, identify their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), and get assured for the protection (e.g. through contractual agreement, verified by assurance programs, or using this ThreatModel). &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:06:31.436">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="38" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="services-with-iam-roles-will-give-ownership-to-the-target-aws-account" name="Services with IAM roles will give ownership to the target AWS account" desc="" library="">
          <threats>
            <threat ref="S3.T21" name="Exfiltrate data stored on S3 via AWS services" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Number of AWS services are using S3 for storage, including storing in cross- account S3 buckets. Services with IAM roles (e.g. SageMaker) will give ownership to the target AWS account, hence removing the ownership protection. An attacker can use those services to exfiltrate data. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;IAM Access&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;{&lt;/span&gt;&lt;/p&gt; 
        &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt; "OPTIONAL": "s3:PutObjectAcl" &lt;/span&gt;&lt;/p&gt; 
        &lt;p&gt;&lt;span style="font-size: 7.000000pt; font-family: 'OpenSans'"&gt;}&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium (5.8)" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W06">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C13" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W11">
                  <countermeasures>
                    <countermeasure ref="S3.C16a" mitigation="100"/>
                    <countermeasure ref="S3.C16b" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W14">
                  <countermeasures>
                    <countermeasure ref="S3.C31" mitigation="100"/>
                    <countermeasure ref="S3.C32" mitigation="100"/>
                    <countermeasure ref="S3.C33" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C13" mitigation="100"/>
                <countermeasure ref="S3.C16a" mitigation="100"/>
                <countermeasure ref="S3.C16b" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C31" mitigation="100"/>
                <countermeasure ref="S3.C32" mitigation="100"/>
                <countermeasure ref="S3.C33" mitigation="100"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="d450e8b7-62e4-4573-93ca-ae234607ce2d" diagramComponentId="428cc1b6-0061-48f6-b195-26254fc644fb" ref="59864655-18b5-4fea-80c8-f143d976ffd3" name="Bucket (External 2)" desc="Bucket sub-resources" library="" parentComponentRef="" componentDefinitionRef="toc-bucket">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="837bcee4-1038-4dc9-a347-2bc320a2a86f" diagramComponentId="7c138b17-c11f-4180-8d86-f8e7baf0af73" ref="8e40199d-9ef5-4be3-b0f6-e13d23891389" name="Bucket Logs" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-bucket-logs">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="7cc1ce24-f264-4a45-bede-c0505084ea40" diagramComponentId="1d981048-7257-4a48-806b-c464d27d901b" ref="3a143026-546a-4fee-b34d-a7cff051c31a" name="Object Lambda Access Point (associated with one AP at a time" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-endpoint">
      <tags>
        <tag tag="HTTPS"/>
      </tags>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W34" name="Enforce only authorized Object Lambda access point and associated access" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:57:46.715">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C126" name="Create only Authorised Lambda functions" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C125, assured by S3.C127]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized Lambda function for each Object Lambda access point, its associated access point, its associated GET request(s), and payload are created &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring only authorized Lambda function for each Object Lambda access point, its associated access point, its associated GET request(s), and payload, and the evidence of its execution &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:00:55.512">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C132" name="Ensure CloudWatch is enabled for all Object Lambda access points" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[assured by S3.C133]&lt;br&gt; &lt;/font&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Ensure CloudWatch is enabled for all Object Lambda access points&lt;/font&gt;&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring CloudWatch is enabled for all Object Lambda access points, and its records of execution &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:12:18.336">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C128" name="Ensure Lambda functions configured on Object Lambda access point are secured using Lambda ThreatModel" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Ensure Lambda functions configured on Object Lambda access point are secured using Lambda ThreatModel &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring Lambda ThreatModel and its application for Lambda functions associated to Object Lambda access point, and its records of execution &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:05:07.379">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C130" name="Ensure only authorized cross-account IAM entities are allowed in the Object Lambda access point policy" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C129, assured by S3.C131]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure only authorized cross-account IAM entities are allowed in the Object Lambda access point policy &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism ensuring only cross-account IAM entities are allowed in the Object Lambda access point policy, and the evidence of its execution &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:09:29.026">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C125" name="Maintain a list of authorized Lambda function for each Object Lambda access point" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of authorized Lambda function for each Object Lambda access point, its associated access point, its associated GET request(s), and payload &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized Lambda function for each Object Lambda access point, its associated access point, its associated GET request(s), and payload, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:58:16.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C129" name="Maintain a list of cross-account access on each Object Lambda access point" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of cross-account access on each Object Lambda access point &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized cross-account access for each Object Lambda access point, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:06:38.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C133" name="Verify CloudWatch is enabled for all Object Lambda access points" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify CloudWatch is enabled for all Object Lambda access points &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create an Object Lambda access point without CloudWatch enabled, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:13:38.119">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C127" name="Verify existance of  authorized Lambda function only on defined objects" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify only the authorized Lambda function are configured on each Object Lambda access point, its associated access point, its associated GET request(s), and payload &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Attach&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;an unauthorized Lambda function on an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;an unauthorized Object Lambda access point to an access point&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;an authorized Lambda function with an unauthorized GET request on an Object Lambda access point,&lt;/li&gt; 
     &lt;li&gt;an authorized Lambda function with an unauthorized payload&lt;/li&gt; 
    &lt;/ol&gt;it should be detected. 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:02:36.386">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C131" name="Verify only the authorized cross-account IAM entities are allowed in the Object Lambda access point policy" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify only the authorized cross-account IAM entities are allowed in the Object Lambda access point policy&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Add&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;span style="font-size: large; font-family: OpenSans;"&gt;an unauthorized cross-account IAM entity on an Object Lambda access point policy, it should be detected.&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:10:43.626">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="connection-hijack" name="Connection HiJack" desc="" library="">
          <threats>
            <threat ref="S3.T46" name="Hijack connection with an Object Lambda" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div&gt; 
 &lt;div class="page"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Object Lambda are invoked between the access point and the object. An attacker can configure a Lambda to modify, snoop or exfiltrate data.&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; &lt;font size="2"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt; 
&lt;/div&gt; 
&lt;div&gt; &lt;font size="2"&gt;{&lt;/font&gt; 
&lt;/div&gt; 
&lt;div&gt; &lt;font size="2"&gt;"OR": ["s3:CreateAccessPointForObjectLambda", "s3:PutAccessPointConfigurationForObjectLambda"]&lt;/font&gt; 
&lt;/div&gt; 
&lt;div&gt; &lt;font size="2"&gt;}&lt;/font&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CVSS (3.1) Medium 5.7" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK TA0010" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W34">
                  <countermeasures>
                    <countermeasure ref="S3.C125" mitigation="100"/>
                    <countermeasure ref="S3.C126" mitigation="100"/>
                    <countermeasure ref="S3.C127" mitigation="100"/>
                    <countermeasure ref="S3.C128" mitigation="100"/>
                    <countermeasure ref="S3.C129" mitigation="100"/>
                    <countermeasure ref="S3.C130" mitigation="100"/>
                    <countermeasure ref="S3.C131" mitigation="100"/>
                    <countermeasure ref="S3.C132" mitigation="100"/>
                    <countermeasure ref="S3.C133" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C125" mitigation="100"/>
                <countermeasure ref="S3.C126" mitigation="100"/>
                <countermeasure ref="S3.C127" mitigation="100"/>
                <countermeasure ref="S3.C128" mitigation="100"/>
                <countermeasure ref="S3.C129" mitigation="100"/>
                <countermeasure ref="S3.C130" mitigation="100"/>
                <countermeasure ref="S3.C131" mitigation="100"/>
                <countermeasure ref="S3.C132" mitigation="100"/>
                <countermeasure ref="S3.C133" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="bcfa2fcc-9a88-4182-bc80-f995f3e2a735" diagramComponentId="4079182b-397e-4b9f-b082-6d43f925f0df" ref="f0ca29d3-e38d-4d3c-99d1-3315dfe419b5" name="Object (External)" desc="Your Object + Version(s) or Ownership-given Object" library="" parentComponentRef="" componentDefinitionRef="toc-object">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W15" name="Changes to make an object public via object ACL" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:35:06.560">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W35" name="Disabling ACLs for all buckets" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:28:29.178">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W16" name="Enforce Good Coding Practice" state="0" impact="75" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:01:59.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W07" name="Lack of Monitoring" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T16:39:20.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W10" name="Manage all external buckets" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:09:20.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C12" name="Allow only authorised ACL" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Allow only authorized ACL on objects for bucket you don't control (e.g. using IAM and VPC endpoint policy with the &lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#acl-specific-condition-keys" target="_blank"&gt;ACL conditions&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;) &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Put an object with an unauthorized ACL, it should be denied. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T09:11:13.489">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C114" name="Block the PubObject with any ACL operation" issueId="" issueLink="" platform="" cost="2" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For all external bucket with bucket-owner-full-control ACL requirement but without S3 Object Ownership handover, block the PutObject with any ACL (e.g. using IAM or SCP and a deny on the condition "StringLike": {"s3:x-amz-acl": "*"}).&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;It should be called via PutObjectAcl. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to an external bucket with bucket-owner- full-control ACL requirement but without S3 Object Ownership handover requirement, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:17:52.753">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C34" name="Deny requests to change object ACL to public" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C36]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Deny requests to change object ACL to public (e.g. using an SCP, S3 bucket policy and VPC endpoint policy blocking&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;PutObjectAcl for "s3:x-amz-grant-read", "s3:x-amz-grant- read-acp", "s3:x-amz-grant-write-acp", "s3:x-amz-grant-full- control" on the following predefined groups "http://acs.amazonaws.com/groups/global/AllUsers" and "http://acs.amazonaws.com/groups/global/AuthenticatedUsers")&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a call to create a public ObjectACL, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:36:13.184">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C9" name="Enable CloudTrail S3 data events" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;font size="4"&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;Enable&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events" target="_blank"&gt;CloudTrail S3 data events&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color: rgb(255, 255, 255); font-family: OpenSans;"&gt;in relevant AWS accounts, Regions and buckets (e.g. production, with sensitive data, etc.). Make it available for security analysis, and protect it using CloudTrail ThreatModel&lt;/span&gt;&lt;/font&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the CloudTrail ThreatModel and the evidence of its application for enabling and protecting S3 data events &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T13:51:38.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C152" name="Ensure bucket ACL and object ACL are disabled on each bucket" issueId="" issueLink="" platform="" cost="1" risk="30" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C154]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Ensure bucket ACL and object ACL are disabled on each bucket &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;the mechanism ensuring bucket ACL and object ACL are disabled on each bucket&lt;/font&gt;&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;its records of execution for all new buckets&lt;/li&gt; 
     &lt;li&gt;plan to move any older buckets&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:28:55.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C37" name="Monitor and investigate anonymous requests to objects" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor and investigate anonymous requests to objects (e.g. using CloudTrail S3 data events with userIdentity.accountId=ANONYMOUS_PRINCIPAL) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make an anonymous call, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:41:11.922">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C35" name="Monitor ObjectACL change" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Monitor ObjectACL changed (or tentatively changed) to public using CloudTrail S3 data events&lt;/font&gt;&lt;br&gt; &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Make a call to create a public ObjectACL, it should be detected &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:38:01.416">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C115" name="Monitor PutObject does not include ACL" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For all external bucket with bucket-owner-full-control ACL requirement but without S3 Object Ownership handover, monitor that the PutObject do not include the ACL operation &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to an external bucket with bucket-owner- full-control ACL requirement but without S3 Object Ownership handover requirement, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:20:13.275">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C113" name="Object Transmission Do not use built in Object ACL operation" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C11]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;When transmitting an object to an external bucket with bucket-owner-full-control ACL requirement but without S3 Object Ownership handover, use 2 separate APIs (PutObject and PutObjectAcl), instead of the built-in object ACL operation in PutObject. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the process on ensuring that PutObject requests on external bucket with bucket-owner-full-control ACL requirement but without S3 Object Ownership handover use 2 separate APIs&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T16:28:17.125">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C153" name="Prevent the creation of buckets with ACL enabled" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Prevent the creation of buckets with ACL enabled (e.g. by using a SCP and/or an IAM policy on "s3:CreateBucket" with a deny statement on "s3:x-amz-object- ownership":"BucketOwnerEnforced").&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Note it does not block someone to enable ACL afterwards via PutPutBucketOwnershipControls. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket to enable ACL, it should be denied. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:30:33.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C11" name="Track all buckets you do not control that host your objects" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4" style=""&gt;&lt;font face="OpenSans"&gt;Track all buckets you don't control hosting your objects, define their authorised&amp;nbsp;data classification, identify their respective owners (and AWS account ID), their ObjectACL requirements (including S3 Object Ownership), and get assured for the protection (e.g. through contractual agreement, verified by assurance programs, or using this ThreatModel). &lt;/font&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-18T17:06:31.436">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C154" name="Verify bucket ACL and object ACL are disabled on each bucket" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify bucket ACL and object ACL are disabled on each bucket &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create/modify a bucket to enable ACL, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T17:31:51.253">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C36" name="Verify the control blocking change" issueId="" issueLink="" platform="" cost="2" risk="42" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Verify the control blocking change ObjectACL to public (e.g. an SCP and VPC endpoint policy) is properly implemented &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Remove the control blocking changes of ObjectACL to public, it should be detected. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T15:39:38.608">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="object-acl-must-be-explicitly-denied" name="Object ACL must be explicitly denied" desc="" library="">
          <threats>
            <threat ref="S3.T6" name="Unauthorised modification of an object to become public or accessible in a private bucket you do not own by changing object ACL" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Bucket authority only prevails on object ACL when the object access is explicitly denied (&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-auth-workflow-object-operation.html" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;). An attacker (or someone by negligence) can change the object ACL to make it public or accessible for themselves. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;IAM Access&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;"UNIQUE": "s3:PutObjectAcl"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans" size="4"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="25" integrity="75" availability="1" easeOfExploitation="25"/>
              <references>
                <reference name="CVSS Medium 5.2" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N"/>
                <reference name="Mitre ATT&amp;CK" url="https://attack.mitre.org/tactics/TA0010"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W07">
                  <countermeasures>
                    <countermeasure ref="S3.C9" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C12" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W15">
                  <countermeasures>
                    <countermeasure ref="S3.C34" mitigation="25"/>
                    <countermeasure ref="S3.C35" mitigation="25"/>
                    <countermeasure ref="S3.C36" mitigation="25"/>
                    <countermeasure ref="S3.C37" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W35">
                  <countermeasures>
                    <countermeasure ref="S3.C152" mitigation="100"/>
                    <countermeasure ref="S3.C153" mitigation="100"/>
                    <countermeasure ref="S3.C154" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C12" mitigation="100"/>
                <countermeasure ref="S3.C152" mitigation="100"/>
                <countermeasure ref="S3.C153" mitigation="100"/>
                <countermeasure ref="S3.C154" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C34" mitigation="25"/>
                <countermeasure ref="S3.C35" mitigation="25"/>
                <countermeasure ref="S3.C36" mitigation="25"/>
                <countermeasure ref="S3.C37" mitigation="25"/>
                <countermeasure ref="S3.C9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="upload-download" name="Upload/Download" desc="" library="">
          <threats>
            <threat ref="S3.T43" name="Loss of ownership of an object" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;S3 Object Ownership enables a bucket receiver to convert a bucket-owner-full- control ACL into an ownership transfer (for new object); additionally a bucket can convert all the objects to be owned by the bucket owner. An attacker can modify the receiver bucket to remove your object ACL control on an object, and remove your access to this object. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium (6.3)" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK" url="https://attack.mitre.org/tactics/TA0040"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W10">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C114" mitigation="100"/>
                    <countermeasure ref="S3.C115" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W16">
                  <countermeasures>
                    <countermeasure ref="S3.C11" mitigation="100"/>
                    <countermeasure ref="S3.C113" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W35">
                  <countermeasures>
                    <countermeasure ref="S3.C152" mitigation="100"/>
                    <countermeasure ref="S3.C153" mitigation="100"/>
                    <countermeasure ref="S3.C154" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C11" mitigation="100"/>
                <countermeasure ref="S3.C113" mitigation="100"/>
                <countermeasure ref="S3.C114" mitigation="100"/>
                <countermeasure ref="S3.C115" mitigation="100"/>
                <countermeasure ref="S3.C152" mitigation="100"/>
                <countermeasure ref="S3.C153" mitigation="100"/>
                <countermeasure ref="S3.C154" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Manipulation"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="85ad9939-9fa0-4da8-8bc1-4800ae6a029b" diagramComponentId="29eb8f36-1017-4078-a6e1-4015a23cefb4" ref="ef3b3701-16a1-4e27-bbe5-061d83393080" name="AWS Services (with/without IAM)" desc="with IAM (eg CloudFront, CloudTrail, CM Logs)&#10;without IAM (eg Transcribe, Forecast, etc)" library="" parentComponentRef="" componentDefinitionRef="toc-aws-services">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="S3.W21" name="Encrypt or tokenize critical data" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:04:32.743">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W19" name="Enforce Encryption at rest" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:32:47.384">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W30" name="Limit access from only authorized VPCs" state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:28:39.262">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W11" name="Threats on all AWS Services accessing S3 not quantified" state="0" impact="100" issueId="" issueLink="">
          <desc>Many AWS Services access and utilise S3, you need to ensure that you understand the risk assocaited with these services and the buckets that they utilise</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:23:00.903">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="S3.W13" name="Unlimited IAM access" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:25:19.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="S3.C72" name="Aligned with your data governance" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Aligned with your data governance, encrypt on the client side - or tokenize - appropriate data &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the governance and mechanism(s) used to protect data (e.g. encrypt or tokenize critical data on the client side &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T12:05:08.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C66" name="Block PutObject requests with unauthorized KMS key on each bucket" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C61, assured by S3.C67]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Block PutObject requests with unauthorized KMS key on each bucket (e.g. using an S3 bucket policy deny statement on PutObject if the condition if exists "s3:x-amz-server-side- encryption-aws-kms-key-id" is not an authorized KMS key) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request encrypted with an unauthorized KMS key, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:51:15.683">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C16b" name="Enforce AWS Services usage in VPC only (where possible)" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;span style="font-family: OpenSans; font-size: 14.6667px;"&gt;Enforce usage in VPC only, whenever possible.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:24:39.967">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C140" name="Ensure all objects on S3 buckets are encrypted with an authorized KMS key" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;[assured by S3.C62]&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Ensure all objects on S3 buckets are encrypted with an authorized KMS key &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the mechanism (including training, or utility) ensuring only authorized KMS key are used for any objects stored in S3 &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:46:02.342">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C146" name="For buckets (or paths) requiring SSE-C, block PutObject requests with unauthorized encryption" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C145, assured by S3.C147]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;For buckets (or paths) requiring SSE-C, block PutObject requests with unauthorized encryption (e.g. using an S3 bucket policy deny statement on PutObject if the condition "s3:x-amz-server-side-encryption-customer- algorithm"="AES265" is not present) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to a bucket (or path) requiring SSE-C without the proper encryption, it should be denied &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:17:34.204">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C148" name="For buckets (or paths) requiring SSE-C, monitor that only authorized encryption" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C145]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;For buckets (or paths) requiring SSE-C, monitor that only authorized encryption is used on each bucket or path (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;requestParameter.bucketName &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server-side-encryption-customer- algorithm&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to a bucket (or path) requiring SSE-C without the proper encryption, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:22:36.849">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C147" name="For buckets (or paths) requiring SSE-C, verify all buckets block PutObject requests with unauthorized encryption" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For buckets (or paths) requiring SSE-C, verify all buckets block PutObject requests with unauthorized encryption &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket requiring SSE-C not blocking PutObject requests with unauthorized encryption, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:19:12.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C98" name="For each S3 bucket, maintain a list of VPC(s), authorized to access it." issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;For each S3 bucket, maintain a list of VPC(s), authorized to access it. &lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;For each S3 bucket, request the list of authorized VPC to access it, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T14:29:00.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C99" name="Limit the access to authorised VPC" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C98, assured by S3.C100]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to only those VPC(s) (e.g. using S3 bucket statement, deny if the condition "aws:SourceVpce", or if the bucket policy size is beyond the limit, use this condition on access point) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Preventative" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value="High"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request to the bucket outside an authorized VPC, it should be denied&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:01:37.327">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C26" name="Limit the access to the IAM actions" issueId="" issueLink="" platform="" cost="2" risk="43" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Limit the access to the IAM actions required to execute the threats using AWS IAM and/or SCP, following the IAM Operating Model and using the IAM ThreatModel. Use the &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/security/tighten-s3-permissions-iam-users-and-roles-using-access-history-s3-actions/" target="_blank"&gt;IAM Access Advisor &lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to review the usage of non-object-related S3 actions. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Protect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;span style="font-size: 11pt;"&gt;Request the list of &lt;/span&gt;&lt;span style="font-size: 14.6667px;"&gt;authorised&lt;/span&gt;&lt;span style="font-size: 11pt;"&gt;&amp;nbsp;IAM principals that have the permissions required to execute the threat actions, its review process, and its review records &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T14:26:18.970">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C61" name="Maintain a list of authorized KMS key(s) for each bucket," issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt; &lt;/p&gt; 
    &lt;div class="page"&gt; 
     &lt;div class="section"&gt; 
      &lt;div class="layoutArea"&gt; 
       &lt;div class="column"&gt; 
        &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Maintain a list of authorized KMS key(s) for each bucket, and their default encryption key. You might simplify by using only 1 key per bucket, ideally dedicated. Note that S3 server access log bucket does not support KMS encryption (&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'; color: rgb(6.670000%, 33.300000%, 80.000000%)"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-how-to-set-up" target="_blank"&gt;ref&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;).&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of authorized KMS key(s) for each bucket, its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T17:33:43.973">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C145" name="Maintain a list of buckets" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Maintain a list of buckets (or paths) required to be encrypted with server-side encryption with customer- provided keys (SSE-C) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Directive" supportedStandardRef="COSO"/>
            <standard ref="Identify" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value="Very Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Request the list of buckets (or paths) required to be encrypted with server-side encryption with customer- provided keys (SSE-C), its review process, and its review records &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:11:10.798">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C68" name="Monitor that only authorized KMS key(s) are used on each bucket" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[depends on S3.C61]&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;Monitor that only authorized KMS key(s) are used on each bucket (using CloudTrail S3 data events in &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;requestParameter.bucketName &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;and &lt;/span&gt;&lt;span style="font-family: OpenSans; font-style: italic;"&gt;response.x-amz-server- side-encryption-aws-kms-key-id&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
            <standard ref="Detective" supportedStandardRef="COSO"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Low"/>
            <customField ref="CF.CM2.Impact" value="Low"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Make a request encrypted with an unauthorized KMS key, it should be detected &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T11:09:37.867">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C16a" name="Threat Model all AWS Services" issueId="" issueLink="" platform="" cost="0" risk="0" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Analyse and protect all AWS services accessing S3 (e.g. via ThreatModel).&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T13:24:04.569">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C27" name="Use AWS IAM to provide permissions to a principal of the same AWS Account" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;[assured by S3.C28]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;br&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;In S3 bucket/access point/Object Lambda access point policy, do not allow IAM principals of the same AWS account. Only AWS IAM should be used to provide permissions to a principal of the same AWS account. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value=""/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:20:30.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C67" name="Verify all buckets block PutObject requests with an unauthorized KMS key" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets block PutObject requests with an unauthorized KMS key (e.g. using the Config rule:&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-not-more-permissive.html" target="_blank"&gt;S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, note that a&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;new rule needs be deployed for each configuration, then the resource tracked by name or tag; alternatively you might use&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-server-side-encryption-enabled.html" target="_blank"&gt;S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED&lt;/a&gt; &lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;to ensure a limited coverage)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Very High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Create a bucket not blocking PutObject requests with an unauthorized KMS key, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:53:44.706">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C100" name="Verify all buckets include a control to limit access to only authorized VPC(s)" issueId="" issueLink="" platform="" cost="2" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all buckets include a control to limit access to only authorized VPC(s) (e.g. using the AWS Config rule &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-grantee-check.html" target="_blank"&gt;S3_BUCKET_POLICY_GRANTEE_CHECK&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="High"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Remove the control limiting access to only authorized VPC(s), it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T16:04:50.232">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C62" name="Verify all objects on S3 buckets are encrypted with an authorized KMS key" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;font size="4"&gt;&lt;span style="font-family: OpenSans;"&gt;Verify all objects on S3 buckets are encrypted with an authorized KMS key (e.g. using S3 inventory, see &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://aws.amazon.com/blogs/storage/encrypting-objects-with-amazon-s3-batch-operations/" target="_blank"&gt;blog&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;, or &lt;/span&gt;&lt;span style="font-family: OpenSans; color: rgb(17, 85, 204);"&gt;&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_basics_metrics_recommendations.html#storage_lens_basics_metrics_types" target="_blank"&gt;S3 Storage Lens&lt;/a&gt;&lt;/span&gt;&lt;span style="font-family: OpenSans;"&gt;) &lt;/span&gt;&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value="Medium"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Upload an encrypted data using an unauthorized KMS key, it should be detected. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-25T10:48:04.211">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="S3.C28" name="Verify all S3 Bucket/Access Point/Object Lambda access point policies" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="ddoughty" library="" source="MANUAL" edited="false" stateChangeSource="">
          <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Verify all S3 bucket/access point/Object Lambda access point policies do not allow an IAM principal of the same AWS account (e.g. using the Config rule S3_BUCKET_POLICY_GRANTEE_CHECK for bucket policy) &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="" supportedStandardRef="PCI-DSS-v3.2.1"/>
            <standard ref="Assurance" supportedStandardRef="COSO"/>
            <standard ref="Detect" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="CF.CM1.Priority" value="Medium"/>
            <customField ref="CF.CM2.Impact" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;Add an allow statement for an IAM principal of the same account in&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;a bucket policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an access point policy&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="font-size: 11.000000pt; font-family: 'OpenSans'"&gt;in an Object Lambda access point&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt;&lt;span style="font-family: OpenSans; font-size: 11pt;"&gt;it should be detected.&lt;/span&gt; 
    &lt;p&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-21T16:29:30.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="aws-services-access-s3-to-execute-own-functions" name="AWS Services access S3 to execute own functions" desc="" library="">
          <threats>
            <threat ref="S3.T30" name="Use AWS services to access data on S3" state="Expose" source="MANUAL" edited="false" owner="ddoughty" library="" editable="true">
              <desc>&lt;div class="page"&gt; 
 &lt;div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%)"&gt; 
  &lt;div class="layoutArea"&gt; 
   &lt;div class="column"&gt; 
    &lt;p&gt;&lt;span style="font-family: OpenSans;"&gt;&lt;font size="4"&gt;Number of AWS services can access S3 to execute their own functions. An attacker can use them to collect data, using their service role or service-linked roles. &lt;/font&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;&lt;b&gt;IAM Access&lt;/b&gt;&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;{&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;"UNIQUE": "iam:PassRole"&lt;/font&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;font face="OpenSans"&gt;}&lt;/font&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="1" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="CVSS Medium 4.4" url="https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"/>
                <reference name="Mitre ATT&amp;CK" url="https://attack.mitre.org/tactics/TA0009"/>
              </references>
              <weaknesses>
                <weakness ref="S3.W11">
                  <countermeasures>
                    <countermeasure ref="S3.C16a" mitigation="100"/>
                    <countermeasure ref="S3.C16b" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W13">
                  <countermeasures>
                    <countermeasure ref="S3.C26" mitigation="100"/>
                    <countermeasure ref="S3.C27" mitigation="100"/>
                    <countermeasure ref="S3.C28" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W19">
                  <countermeasures>
                    <countermeasure ref="S3.C140" mitigation="100"/>
                    <countermeasure ref="S3.C145" mitigation="100"/>
                    <countermeasure ref="S3.C146" mitigation="100"/>
                    <countermeasure ref="S3.C147" mitigation="100"/>
                    <countermeasure ref="S3.C148" mitigation="100"/>
                    <countermeasure ref="S3.C61" mitigation="100"/>
                    <countermeasure ref="S3.C62" mitigation="100"/>
                    <countermeasure ref="S3.C66" mitigation="100"/>
                    <countermeasure ref="S3.C67" mitigation="100"/>
                    <countermeasure ref="S3.C68" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W21">
                  <countermeasures>
                    <countermeasure ref="S3.C72" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="S3.W30">
                  <countermeasures>
                    <countermeasure ref="S3.C100" mitigation="100"/>
                    <countermeasure ref="S3.C98" mitigation="100"/>
                    <countermeasure ref="S3.C99" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="S3.C100" mitigation="100"/>
                <countermeasure ref="S3.C140" mitigation="100"/>
                <countermeasure ref="S3.C145" mitigation="100"/>
                <countermeasure ref="S3.C146" mitigation="100"/>
                <countermeasure ref="S3.C147" mitigation="100"/>
                <countermeasure ref="S3.C148" mitigation="100"/>
                <countermeasure ref="S3.C16a" mitigation="100"/>
                <countermeasure ref="S3.C16b" mitigation="100"/>
                <countermeasure ref="S3.C26" mitigation="100"/>
                <countermeasure ref="S3.C27" mitigation="100"/>
                <countermeasure ref="S3.C28" mitigation="100"/>
                <countermeasure ref="S3.C61" mitigation="100"/>
                <countermeasure ref="S3.C62" mitigation="100"/>
                <countermeasure ref="S3.C66" mitigation="100"/>
                <countermeasure ref="S3.C67" mitigation="100"/>
                <countermeasure ref="S3.C68" mitigation="100"/>
                <countermeasure ref="S3.C72" mitigation="100"/>
                <countermeasure ref="S3.C98" mitigation="100"/>
                <countermeasure ref="S3.C99" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="CF1.T1.Goal" value="Data Theft"/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="af9f0d35-ee4b-4177-abd1-d67f238aad25" diagramComponentId="505145e7-4940-4df1-8235-e5011999b6f2" ref="4c8fe4da-8091-4785-b4c1-9f547e92034d" name="KMS" desc="" library="" parentComponentRef="" componentDefinitionRef="toc-kms">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
  <threadFixScans/>
</project>
