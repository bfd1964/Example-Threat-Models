<?xml version="1.0" encoding="UTF-8"?>
<project ref="java-application-back-end" name="Java Application Back End" isSyncing="false" tags="" modelUpdated="2022-04-14 09:42:29" workflowState="remediation-and-mitigation" locked="false">
  <desc>This is a java ADO</desc>
  <diagram draft="false">
    <schema>PG14R3JhcGhNb2RlbCBpckRyYXdpb1ZlcnNpb249IjMuMi4wIiBncmlkPSIwIiBwYWdlPSIwIj4KICA8cm9vdD4KICAgIDxteENlbGwgaWQ9IjAiLz4KICAgIDxteENlbGwgaWQ9IjEiIHBhcmVudD0iMCIvPgogICAgPG14Q2VsbCBpZD0iMiIgdmFsdWU9IlB1YmxpYyBDbG91ZCIgc3R5bGU9ImlyLnJlZj1iNjFkNjkxMS0zMzhkLTQ2YTgtOWYzOS04ZGNkMjRhYmZlOTE7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtyZWN1cnNpdmVSZXNpemU9MDtodG1sPTE7dmVydGljYWxBbGlnbj10b3A7YWxpZ249bGVmdDtkYXNoZWQ9MTtzdHJva2VXaWR0aD0xO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7c3Ryb2tlQ29sb3I9Izc1NzVFQjtmaWxsQ29sb3I9I0YwRjBGRjtmaWxsT3BhY2l0eT0zMDtmb250Q29sb3I9IzU2NTFFMDtjb25uZWN0YWJsZT0wO2NvbnRhaW5lcj0xO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1UUlVTVFpPTkU7IiBwYXJlbnQ9IjEiIHZlcnRleD0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHg9Ii0zMzguMCIgeT0iNTIuMCIgd2lkdGg9IjEyMjguMCIgaGVpZ2h0PSI2NzguMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjMxIiB2YWx1ZT0ibXkgd2ViIGFwcGxpY2F0aW9uIC0mZ3Q7IFBvc3RncmVTUUwiIHN0eWxlPSJpci5yZWY9MGEyNWY3MTItZTdjOS00NDUxLTllYmItZTY4NjFiNTRkZDYzO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjsiIHBhcmVudD0iMiIgc291cmNlPSIyOSIgdGFyZ2V0PSIzMCIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjciIHZhbHVlPSJTQU1MIFNTTyBJbXBsbWVudGF0aW9uIiBzdHlsZT0icm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9c2FtbC1zc28taW1wbG1lbnRhdGlvbjtpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJSFpwWlhkQ2IzZzlJakFnTUNBeElERWlJR1pwYkd3OUltNXZibVVpUGlZamVHRTdQR05wY21Oc1pTQmplRDBpTUM0MUlpQmplVDBpTUM0MUlpQnlQU0l3TGpVaUlHWnBiR3c5SW5WeWJDZ2pjR0ZwYm5Rd1gzSmhaR2xoYkNraUx6NG1JM2hoT3p4d1lYUm9JR1pwYkd3dGNuVnNaVDBpWlhabGJtOWtaQ0lnWTJ4cGNDMXlkV3hsUFNKbGRtVnViMlJrSWlCa1BTSk5NQzQwT1RrNU9UVWdNQzR4TWpBd01UZERNQzQwTmpnMk1qZ2dNQzR4TWpBd01UY2dNQzQwTXpneE5EZ2dNQzR4TWpNNE1UY2dNQzQwTURnNU9USWdNQzR4TXpBNU9ETkRNQzR6T1RnNU9DQXdMakV6TXpRME15QXdMak00T1RFeU5TQXdMakV6TmpNd01TQXdMak0zT1RRME15QXdMakV6T1RVek4wTXdMak0yTnpRNU9TQXdMakUwTXpVeU9TQXdMak0xTlRneU1TQXdMakUwT0RBNU9TQXdMak0wTkRRek9TQXdMakUxTXpJeE1rTXdMak16TWpNMk1TQXdMakUxT0RZek55QXdMak15TURZeE9DQXdMakUyTkRZM05pQXdMak13T1RJME9TQXdMakUzTVRJNE5rTXdMak13TVRnME5pQXdMakUzTlRVNU1pQXdMakk1TkRZd01TQXdMakU0TURFMElEQXVNamczTlRJMklEQXVNVGcwT1RKRE1DNHlOekUwTXlBd0xqRTVOVGM1TlNBd0xqSTFOakl4TWlBd0xqSXdOemczSURBdU1qUXlJREF1TWpJeE1ERTRRekF1TWpNM01USWdNQzR5TWpVMU16UWdNQzR5TXpJek5UZ2dNQzR5TXpBeE56VWdNQzR5TWpjM01pQXdMakl6TkRrek9FTXdMakl4TXpjeE9TQXdMakkwT1RNeE9DQXdMakl3TURnME5pQXdMakkyTkRnd01pQXdMakU0T1RJME55QXdMakk0TVRJME9VTXdMakU0TmpBMU15QXdMakk0TlRjM055QXdMakU0TWprMU5pQXdMakk1TURNM055QXdMakUzT1RrMU9TQXdMakk1TlRBME4wTXdMakUzTWpReE1TQXdMak13Tmpnd09DQXdMakUyTlRRNU5DQXdMak14T1RBeE1pQXdMakUxT1RJMU5TQXdMak16TVRZeE1VTXdMakUxTnpJeU5pQXdMak16TlRjd09DQXdMakUxTlRJMk9TQXdMak16T1RnME55QXdMakUxTXpNNE5pQXdMak0wTkRBeU5rTXdMakUwTlRNMk5TQXdMak0yTVRneUlEQXVNVE00TmpjMElEQXVNemd3TXpRMElEQXVNVE16TkRRZ01DNHpPVGswTmpsRE1DNHhNekl6TXlBd0xqUXdNelV5TWlBd0xqRXpNVEk0TnlBd0xqUXdOell3TXlBd0xqRXpNRE13T1NBd0xqUXhNVGN3T1VNd0xqRXlOamcxTXlBd0xqUXlOakl6TVNBd0xqRXlOREl6TVNBd0xqUTBNVEEzTlNBd0xqRXlNalE1TlNBd0xqUTFOakU0T1VNd0xqRXlNVFUzTWlBd0xqUTJOREl6TXlBd0xqRXlNRGc1T1NBd0xqUTNNak0xTWlBd0xqRXlNRFE0TmlBd0xqUTRNRFUwUXpBdU1USXdORGcySURBdU5EZ3dOVFFnTUM0eE1qQTBPRFlnTUM0ME9EQTFOQ0F3TGpFeU1EUTROaUF3TGpRNE1EVTBRekF1TVRJd01qa2dNQzQwT0RRME1USWdNQzR4TWpBeE5UTWdNQzQwT0RneU9Ua2dNQzR4TWpBd056UWdNQzQwT1RJeVF6QXVNVEl3TURjMElEQXVORGt5TWlBd0xqRXlNREEzTkNBd0xqUTVNaklnTUM0eE1qQXdOelFnTUM0ME9USXlRekF1TVRJd01ESTFJREF1TkRrME5qTTNJREF1TVRFNU9UazVJREF1TkRrM01EYzVJREF1TVRFNU9UazFJREF1TkRrNU5USTNRekF1TVRFNU9UazFJREF1TkRrNU5qa2dNQzR4TVRrNU9UVWdNQzQwT1RrNE5UUWdNQzR4TVRrNU9UVWdNQzQxTURBd01UZERNQzR4TVRrNU9UVWdNQzQxTVRZMk16Z2dNQzR4TWpFd05qSWdNQzQxTXpNd01URWdNQzR4TWpNeE16SWdNQzQxTkRrd05qbERNQzR4TWpNMk1EWWdNQzQxTlRJM05TQXdMakV5TkRFek15QXdMalUxTmpReE5DQXdMakV5TkRjeE1pQXdMalUyTURBMk1VTXdMakV5TkRreU1TQXdMalUyTVRNM05DQXdMakV5TlRFek5pQXdMalUyTWpZNE5TQXdMakV5TlRNMU9DQXdMalUyTXprNU0wTXdMakV5T0RZNE5pQXdMalU0TXpZeU5DQXdMakV6TXpVeE9TQXdMall3TWpjME1pQXdMakV6T1Rjek5TQXdMall5TVRJeU5VTXdMakUwTURrMU9DQXdMall5TkRnMU9TQXdMakUwTWpJek15QXdMall5T0RRMk9DQXdMakUwTXpVMk1TQXdMall6TWpBMU1rTXdMakUxTURZM01pQXdMalkxTVRJMElEQXVNVFU1TWpnM0lEQXVOalk1TmprM0lEQXVNVFk1TWpZMElEQXVOamczTWpoRE1DNHhOekU1TnpRZ01DNDJPVEl3TlRZZ01DNHhOelEzT0RVZ01DNDJPVFkzTmpjZ01DNHhOemMyT1RNZ01DNDNNREUwTVRGRE1DNHlNall5T1RVZ01DNDNOemt3TWpjZ01DNHpNREl4TlRVZ01DNDRNemM0TXpFZ01DNHpPVEU0TmpNZ01DNDROalEwTVRGRE1DNHpPVFkxTkRFZ01DNDROalUzT1RjZ01DNDBNREV5TlRjZ01DNDROamN3T1RVZ01DNDBNRFl3TURnZ01DNDROamd6TURSRE1DNDBNekV3T0RrZ01DNDROelEyT0RZZ01DNDBOVGN4TmpZZ01DNDROemcxTnpJZ01DNDBPRE01TmlBd0xqZzNPVFk0TlVNd0xqUTROelUyTVNBd0xqZzNPVGd6TkNBd0xqUTVNVEUzTkNBd0xqZzNPVGt6TXlBd0xqUTVORGdnTUM0NE56azVPREpETUM0ME9UWTFNamtnTUM0NE9EQXdNRFVnTUM0ME9UZ3lOakVnTUM0NE9EQXdNVGNnTUM0ME9UazVPVFVnTUM0NE9EQXdNVGRETUM0MU1EWXlNak1nTUM0NE9EQXdNVGNnTUM0MU1USTBNVFVnTUM0NE56azROamNnTUM0MU1UZzFOeUF3TGpnM09UVTNNVU13TGpVeU1UQXpNU0F3TGpnM09UUTFNaUF3TGpVeU16UTROU0F3TGpnM09UTXhJREF1TlRJMU9UTTBJREF1T0RjNU1UUTFRekF1TlRNM01qUTRJREF1T0RjNE16Z3pJREF1TlRRNE5ESTNJREF1T0RjM01USTFJREF1TlRVNU5EUTVJREF1T0RjMU16a3pRekF1TlRZeU9UazNJREF1T0RjME9ETTFJREF1TlRZMk5USTRJREF1T0RjME1qSTVJREF1TlRjd01EUXpJREF1T0Rjek5UYzBRekF1TlRrd01qTWdNQzQ0TmprNE1USWdNQzQyTURrNE5UY2dNQzQ0TmpRME5UUWdNQzQyTWpnM09EWWdNQzQ0TlRjMk16WkRNQzQyTXpJek5qY2dNQzQ0TlRZek5EWWdNQzQyTXpVNU1qSWdNQzQ0TlRVd01EUWdNQzQyTXprME5UTWdNQzQ0TlRNMk1URkRNQzQyTmpJeE9URWdNQzQ0TkRRMk16WWdNQzQyT0RNNE5UWWdNQzQ0TXpNMU15QXdMamN3TkRJd01pQXdMamd5TURVME1VTXdMamN3TnpjeE55QXdMamd4T0RJNU5pQXdMamN4TVRFNU5DQXdMamd4TlRrNU5pQXdMamN4TkRZeU9TQXdMamd4TXpZMFF6QXVOekUxTVRBMElEQXVPREV6TXpFMUlEQXVOekUxTlRjM0lEQXVPREV5T1RnNElEQXVOekUyTURVZ01DNDRNVEkyTmpGRE1DNDNNVGd3TXpNZ01DNDRNVEV5T0RnZ01DNDNNakF3TURJZ01DNDRNRGs0T1RjZ01DNDNNakU1TlRjZ01DNDRNRGcwT0RoRE1DNDNNemN6T1RVZ01DNDNPVGN6TmlBd0xqYzFNVGsyTkNBd0xqYzROVEV3TWlBd0xqYzJOVFUwTWlBd0xqYzNNVGd6TlVNd0xqYzJPRGN5TlNBd0xqYzJPRGN5TlNBd0xqYzNNVGcxTkNBd0xqYzJOVFUxT1NBd0xqYzNORGt5TmlBd0xqYzJNak0wUXpBdU56ZzJNelEwSURBdU56VXdNemMzSURBdU56azJPVGc0SURBdU56TTNOamNnTUM0NE1EWTNPQ0F3TGpjeU5ETkRNQzQ0TURrNU9TQXdMamN4T1RreE55QXdMamd4TXpFd09DQXdMamN4TlRRMk1pQXdMamd4TmpFek1TQXdMamN4TURrMFF6QXVPREkwTlRRM0lEQXVOams0TXpVZ01DNDRNekl5TXpJZ01DNDJPRFV5TXlBd0xqZ3pPVEV5TXlBd0xqWTNNVFl6T1VNd0xqZzBNakE1TmlBd0xqWTJOVGMzTnlBd0xqZzBORGt5TVNBd0xqWTFPVGd5TnlBd0xqZzBOelU1TkNBd0xqWTFNemM1TkVNd0xqZzFNemsyTnlBd0xqWXpPVFF4SURBdU9EVTVORGN6SURBdU5qSTBOVFUxSURBdU9EWTBNRFEzSURBdU5qQTVNams0UXpBdU9EWTJOVEE1SURBdU5qQXhNRGcwSURBdU9EWTROekF4SURBdU5Ua3lOelUwSURBdU9EY3dOakV4SURBdU5UZzBNekUzUXpBdU9EYzBOelExSURBdU5UWTJNRGNnTUM0NE56YzFOalVnTUM0MU5EY3pNak1nTUM0NE56ZzVOamNnTUM0MU1qZ3hPRE5ETUM0NE56azJORGdnTUM0MU1UZzRPRFFnTUM0NE56azVPVFVnTUM0MU1EazBPVEVnTUM0NE56azVPVFVnTUM0MU1EQXdNVGRETUM0NE56azVPVFVnTUM0ME9EVTNNamdnTUM0NE56a3lNRGNnTUM0ME56RTJNak1nTUM0NE56YzJOeUF3TGpRMU56YzBNME13TGpnM05qa3lOQ0F3TGpRMU1UQXdOQ0F3TGpnM05qQXdNaUF3TGpRME5ETXhPU0F3TGpnM05Ea3dPU0F3TGpRek56WTVNVU13TGpnM01UTTNOeUF3TGpReE5qSTRNeUF3TGpnMk5qQTFOU0F3TGpNNU5UUTNPU0F3TGpnMU9URXdNeUF3TGpNM05UUXpOME13TGpnMU5UUTVOeUF3TGpNMk5UQXpPU0F3TGpnMU1UUTFNU0F3TGpNMU5EZzBOeUF3TGpnME5qazRPU0F3TGpNME5EZzRNa013TGpnME5UY3pPQ0F3TGpNME1qQTRPU0F3TGpnME5EUTFOU0F3TGpNek9UTXhNeUF3TGpnME16RXpPU0F3TGpNek5qVTFOa013TGpneU9UQTJOaUF3TGpNd056QTJOU0F3TGpneE1UTXdNaUF3TGpJM09UWTNNeUF3TGpjNU1EUTBOaUF3TGpJMU5EazNOME13TGpjNE9EYzROQ0F3TGpJMU16QXdPQ0F3TGpjNE56RXdNaUF3TGpJMU1UQTFOeUF3TGpjNE5UUXdNU0F3TGpJME9URXlORU13TGpjME5qUXpNeUF3TGpJd05EZ3pJREF1TmprM016RTNJREF1TVRZNU5qZ3lJREF1TmpReE5qZzRJREF1TVRRM016RXpRekF1TmpReE5qRXpJREF1TVRRM01qZ3pJREF1TmpReE5UTTRJREF1TVRRM01qVXpJREF1TmpReE5EWTBJREF1TVRRM01qSXpRekF1TmpFd056QXhJREF1TVRNME9EYzJJREF1TlRjM09UUTVJREF1TVRJMk5ETTJJREF1TlRRek9ESXlJREF1TVRJeU5URTNRekF1TlRNeE5qQTJJREF1TVRJeE1URTBJREF1TlRFNU1qRTBJREF1TVRJd01qa2dNQzQxTURZMk56UWdNQzR4TWpBd056UkRNQzQxTURZMk1Ea2dNQzR4TVRrME5EVWdNQzQxTURZMk1EY2dNQzR4TVRrME5EWWdNQzQxTURZMk1EVWdNQzR4TVRrME5EWk1NQzQxTURZMU56TWdNQzR4TVRrME5EbE1NQzQxTURZMU1ERWdNQzR4TVRrME5UZE1NQzQxTURZeU5qRWdNQzR4TVRrME9EWkRNQzQxTURZd05UZ2dNQzR4TVRrMU1TQXdMalV3TlRjMk9TQXdMakV4T1RVME9DQXdMalV3TlRNNU9DQXdMakV4T1RZd01VMHdMalExTVRneE5TQXdMakV6T0RVMU1VTXdMalExTnpnMU55QXdMakV6TlRReE5DQXdMalEyTXpVME55QXdMakV6TWpjNE15QXdMalEyT0Rnd05TQXdMakV6TURVM09VTXdMalExTWpZeU55QXdMakV6TVRreU5pQXdMalF6TmpjME5DQXdMakV6TkRNeE1pQXdMalF5TVRJeU5DQXdMakV6TnpZM01VTXdMalF6TVRRek1pQXdMakV6TnpZME5pQXdMalEwTVRZek5TQXdMakV6Tnprek9TQXdMalExTVRneE5TQXdMakV6T0RVMU1WcE5NQzQwTXpZMU56UWdNQzR4TkRjeE5UUkRNQzQwTVRneE9ESWdNQzR4TkRZMk1URWdNQzR6T1RrM05ERWdNQzR4TkRjeE1qSWdNQzR6T0RFek5EWWdNQzR4TkRnMk56aERNQzR6TmpVMk15QXdMakUxTXprNE15QXdMak0xTURNNE5pQXdMakUyTURNeE15QXdMak16TlRZNU5DQXdMakUyTnpVNE9VTXdMak0yTURZd05TQXdMakUyTkRjNU5pQXdMak00TlRjeE55QXdMakUyTXpreE5pQXdMalF4TURjNE9TQXdMakUyTkRrM01rTXdMalF4T1Rjek15QXdMakUxT0RBME5DQXdMalF5T0RNM09DQXdMakUxTWpFMU5TQXdMalF6TmpVM05DQXdMakUwTnpFMU5GcE5NQzR6T1RrM09UVWdNQzR4TnpNNU1EUkRNQzR6TnpBNE5Ea2dNQzR4TnpNek1qWWdNQzR6TkRFNE9UY2dNQzR4TnpVek56SWdNQzR6TVRNek1pQXdMakU0TURBd09FTXdMak14TWpreElEQXVNVGd3TWpnMklEQXVNekV5TkRJMUlEQXVNVGd3TmpFNUlEQXVNekV4T0RjZ01DNHhPREV3TURoRE1DNHpNRGs0TlRnZ01DNHhPREkwTVRZZ01DNHpNRFk1TWprZ01DNHhPRFExTlRFZ01DNHpNRE16TVRRZ01DNHhPRGMwTWpGRE1DNHlPVFl4T0RVZ01DNHhPVE13T0RJZ01DNHlPRFkwTURNZ01DNHlNREUxT1RZZ01DNHlOelUzTlRZZ01DNHlNVE13TWpkRE1DNHpNRFl5T1RFZ01DNHlNRFk1T0RjZ01DNHpNemMwTWpnZ01DNHlNRE01T1RNZ01DNHpOamcyTnpRZ01DNHlNRFF3T0RKRE1DNHpOemt5TURRZ01DNHhPVEkxTXlBd0xqTTRPVFkwTmlBd0xqRTRNalUwSURBdU16azVOemsxSURBdU1UY3pPVEEwV2swd0xqSTBOall6TmlBd0xqSXlPVE0yTlVNd0xqSTBPREF6T0NBd0xqSXlPRGs0TlNBd0xqSTBPVFEwTVNBd0xqSXlPRFl4TWlBd0xqSTFNRGcwTmlBd0xqSXlPREkwTlVNd0xqSTBNVGt5TXlBd0xqSXpPVGs1TlNBd0xqSXpNekExTkNBd0xqSTFNell3TkNBd0xqSXlOVEV4TlNBd0xqSTJPVEV3TkVNd0xqSXhPRE0wTmlBd0xqSTNNVEEzTWlBd0xqSXhNVFl5TkNBd0xqSTNNekl3TlNBd0xqSXdORGsxTkNBd0xqSTNOVFZETUM0eU1UYzFORGNnTUM0eU5UZzVOemNnTUM0eU16RTBPVGNnTUM0eU5ETTFORE1nTUM0eU5EWTJNellnTUM0eU1qa3pOalZhVFRBdU1UazFNakF6SURBdU1qZzRPVEEwUXpBdU1qQXpNalkwSURBdU1qZzFPRE0ySURBdU1qRXhOREV6SURBdU1qZ3pNREUzSURBdU1qRTVOak0zSURBdU1qZ3dORFE0UXpBdU1qRTBOVGNnTUM0eU9URTJNRFVnTUM0eU1UQXdNamtnTUM0ek1ETTJORElnTUM0eU1EWXlPRGtnTUM0ek1UWTFOamhETUM0eE9UUTNNeUF3TGpNeE9UUTVNU0F3TGpFNE16TXlOQ0F3TGpNeU1qa3hPU0F3TGpFM01qRXdOaUF3TGpNeU5qZzFNa013TGpFM09UQTFPU0F3TGpNeE16Y3hOU0F3TGpFNE5qYzNPQ0F3TGpNd01UQTBOU0F3TGpFNU5USXdNeUF3TGpJNE9Ea3dORnBOTUM0eU16RTFOalVnTUM0eU56WTVNVEpETUM0eU1qVTVOakVnTUM0eU9EZ3lPRFFnTUM0eU1qQTRPVFFnTUM0ek1EQTJOamdnTUM0eU1UWTNNVFFnTUM0ek1UUXdOemhETUM0eU5EUXlOVFVnTUM0ek1EYzRPRFFnTUM0eU56STFPU0F3TGpNd05EVXlNU0F3TGpNd01USTFJREF1TXpBME1EQTRRekF1TXpBNE1qVTJJREF1TWpnNU5qYzBJREF1TXpFMk1UY3pJREF1TWpjMU5EVXpJREF1TXpJMU1Ea3hJREF1TWpZeE5ESTFRekF1TWprek16YzFJREF1TWpZek1Ua3hJREF1TWpZeE9UazVJREF1TWpZNE16WTRJREF1TWpNeE5UWTFJREF1TWpjMk9URXlXazB3TGpFMk5UazJOU0F3TGpNek9EazVNa013TGpFM09ESXhNeUF3TGpNek5ETTBNU0F3TGpFNU1EY3hNU0F3TGpNek1ETXhOaUF3TGpJd016UXdPU0F3TGpNeU5qa3hPVU13TGpFNU9EZzBNU0F3TGpNME16ZzROaUF3TGpFNU5URTFOaUF3TGpNMk1ETTNNaUF3TGpFNU1qSTJOU0F3TGpNM05qTTNORU13TGpFM09EYzRPU0F3TGpNNE1ERTJOQ0F3TGpFMk5UWXpOeUF3TGpNNE5EYzVPU0F3TGpFMU1qZzVNeUF3TGpNNU1ESTNPVU13TGpFMU16TTJOU0F3TGpNNE56TXlOU0F3TGpFMU16Z3pOaUF3TGpNNE5EVXlPU0F3TGpFMU5ESTVOaUF3TGpNNE1Ua3dOa013TGpFMU5UWTNJREF1TXpjME1EZ2dNQzR4TlRZNU5EY2dNQzR6TmpjNE1EUWdNQzR4TlRjNE9DQXdMak0yTXpRNU5FTXdMakUxT0RNME5pQXdMak0yTVRNek9TQXdMakUxT0RjeU5TQXdMak0xT1RZM055QXdMakUxT0RrNE55QXdMak0xT0RVMU9FTXdMakUxT1RFeE9DQXdMak0xTnprNU9TQXdMakUxT1RJeE9TQXdMak0xTnpVM05TQXdMakUxT1RJNE55QXdMak0xTnpJNU5Fd3dMakUxT1RNMk5DQXdMak0xTmprNE1Vd3dMakUxT1RNNE1pQXdMak0xTmprd05rd3dMakUxT1RNNE5pQXdMak0xTmpnNE9Vd3dMakUxT0RBME5DQXdMak0xTmpVMVF6QXVNVFl3TlRNMklEQXVNelV3TmpFM0lEQXVNVFl6TVRjNElEQXVNelEwTnpZeklEQXVNVFkxT1RZMUlEQXVNek00T1RreVdrMHdMakUwTVRJeU55QXdMalF3TmpJek4wTXdMakV6TlRVeElEQXVOREk0TVRZNUlEQXVNVE14TnpVeElEQXVORFV3T0RreElEQXVNVE13TVRRNElEQXVORGMwTWpBMVF6QXVNVE15TXpNeElEQXVORGN5T0RNNUlEQXVNVE0wTlRNeElEQXVORGN4TlRBMElEQXVNVE0yTnpRNElEQXVORGN3TWtNd0xqRXpOamd3T0NBd0xqUTJNVEF6TlNBd0xqRXpOekUwTWlBd0xqUTFNakE1T1NBd0xqRXpOelkyTlNBd0xqUTBNelV5T1VNd0xqRXpPRFE0TmlBd0xqUXpNREE0T0NBd0xqRXpPVGMzTnlBd0xqUXhOelE0TnlBd0xqRTBNVEl5TnlBd0xqUXdOakl6TjFwTk1DNHhNelk0TURnZ01DNDBPREV3TVRWRE1DNHhNelF6TmpFZ01DNDBPREkxTWlBd0xqRXpNVGt6TnlBd0xqUTROREEyTmlBd0xqRXlPVFV6TnlBd0xqUTROVFkxTVVNd0xqRXlPVE0xTlNBd0xqUTVNRFF4TnlBd0xqRXlPVEkyTXlBd0xqUTVOVEl3TmlBd0xqRXlPVEkyTXlBd0xqVXdNREF4TjBNd0xqRXlPVEkyTXlBd0xqVXhOREkyT1NBd0xqRXpNREEyT0NBd0xqVXlPRE16TXlBd0xqRXpNVFl6TXlBd0xqVTBNakUyTjBNd0xqRXpORGt3TWlBd0xqVXpPVFkxTlNBd0xqRXpPREkwSURBdU5UTTNNalE0SURBdU1UUXhOalF6SURBdU5UTTBPVFEyUXpBdU1UTTROVFEwSURBdU5URTJPVFk0SURBdU1UTTNNVEkwSURBdU5EazROamM1SURBdU1UTTJPREE0SURBdU5EZ3hNREUxV2swd0xqRTROVFkzTlNBd0xqVXhNakU0T1VNd0xqRTNNekk0T1NBd0xqVXhOamc0TVNBd0xqRTJNVE01TmlBd0xqVXlNalkxTVNBd0xqRTFNREV6TmlBd0xqVXlPVFE1TmtNd0xqRTBOekk1TnlBd0xqVXhNVFUzSURBdU1UUTJNVEUwSURBdU5Ea3pNamd6SURBdU1UUTJNREUxSURBdU5EYzFOakF5UXpBdU1UVTRNVFV6SURBdU5EWTROemcwSURBdU1UY3dOems1SURBdU5EWXlPVEUxSURBdU1UZ3pPRFF5SURBdU5EVTRNREF5UXpBdU1UZ3pOREEzSURBdU5EYzJPVE16SURBdU1UZzBNRGc0SURBdU5EazBPVGs0SURBdU1UZzFOamMxSURBdU5URXlNVGc1V2swd0xqRTBNelUxSURBdU5UUTBPVE0zUXpBdU1UTTVPVFV6SURBdU5UUTNORGMxSURBdU1UTTJORE00SURBdU5UVXdNVE0zSURBdU1UTXpNREVnTUM0MU5USTVNakZETUM0eE16VTVNeUF3TGpVM016TTFPQ0F3TGpFME1EVXhOaUF3TGpVNU16STFOeUF3TGpFME5qWXlPQ0F3TGpZeE1qUTNOa013TGpFMU1USTBOU0F3TGpZd056QTNPQ0F3TGpFMU5qSXhOeUF3TGpZd01qRXhJREF1TVRZeE5UQXlJREF1TlRrM05UZERNQzR4TlRNeE9Ea2dNQzQxT0RFeU16TWdNQzR4TkRjME1UY2dNQzQxTmpNek5EVWdNQzR4TkRNMU5TQXdMalUwTkRrek4xcE5NQzR4TmpnNE9Ua2dNQzQxT1RFMk5EVkRNQzR4TmpBNU1qWWdNQzQxTnpVMU1EY2dNQzR4TlRVME5qSWdNQzQxTlRjM01qY2dNQzR4TlRFNE56Z2dNQzQxTXprek56SkRNQzR4TmpJNE5TQXdMalV6TWpRek5TQXdMakUzTkRRNU5TQXdMalV5TmpVM05pQXdMakU0TmpZMk5pQXdMalV5TVRnd01rTXdMakU0T0Rnek9TQXdMalUwTURnNE1pQXdMakU1TWpFeU1pQXdMalUxT0Rnek9TQXdMakU1TmpJeElEQXVOVGMxTmpZelF6QXVNVGcyTlRFMUlEQXVOVGd3TURBeUlEQXVNVGMzTXpZMUlEQXVOVGcxTXpJNElEQXVNVFk0T0RrNUlEQXVOVGt4TmpRMVdrMHdMakUyTmpBME15QXdMall3TlRrek1rTXdMakUyTVRNMU5pQXdMall4TURBM05DQXdMakUxTmprMU5pQXdMall4TkRVM05pQXdMakUxTWpnM09DQXdMall4T1RRek4wd3dMakUxTWpjME15QXdMall4T1RVNU9FTXdMakUxTXpVMk9TQXdMall5TVRNZ01DNHhOVFExTnpNZ01DNDJNak16TVRnZ01DNHhOVFUzTlRJZ01DNDJNalUyTURWRE1DNHhOVGsyTnpjZ01DNDJNek15TVRZZ01DNHhOalUxTXpZZ01DNDJORE0zT1RJZ01DNHhOek15TlRNZ01DNDJOVFUyTURaRE1DNHhOelEwT1RVZ01DNDJOVGMxTURnZ01DNHhOelUzT0RRZ01DNDJOVGswTXprZ01DNHhOemN4TWlBd0xqWTJNVE01TlVNd0xqRTNPVFl5TVNBd0xqWTFOalExSURBdU1UZ3lOamMwSURBdU5qVXhOemt5SURBdU1UZzJNamsxSURBdU5qUTNORGMzUXpBdU1UZzNNVFl4SURBdU5qUTJORFExSURBdU1UZzRNRFV5SURBdU5qUTFORFF4SURBdU1UZzRPVFkzSURBdU5qUTBORFkyUXpBdU1UZ3hOalkySURBdU5qTXlPRFEwSURBdU1UYzBNREl5SURBdU5qSXdNRFFnTUM0eE5qWXdORE1nTUM0Mk1EVTVNekphVFRBdU1UY3lNall6SURBdU5qY3pORGMzUXpBdU1UY3dNeklnTUM0Mk5qazRNVFVnTUM0eE5qZzBNemNnTUM0Mk5qWXhNVFVnTUM0eE5qWTJNVFVnTUM0Mk5qSXpPREZETUM0eE5qZzFPVEVnTUM0Mk5qVXpOamNnTUM0eE56QTJPRElnTUM0Mk5qZzBNamNnTUM0eE56STRPRGdnTUM0Mk56RTFNelpETUM0eE56STJOekVnTUM0Mk56SXhOemtnTUM0eE56STBOak1nTUM0Mk56STRNallnTUM0eE56SXlOak1nTUM0Mk56TTBOemRhVFRBdU1UYzRPVEUzSURBdU5qZzFORGM1UXpBdU1UYzVNVGd4SURBdU5qZ3pPVFUwSURBdU1UYzVORGc0SURBdU5qZ3lORFE1SURBdU1UYzVPRE0zSURBdU5qZ3dPVFkzUXpBdU1Ua3pPRGd6SURBdU5qazVNekV6SURBdU1qRXhOekkwSURBdU56RTROREV5SURBdU1qTXpNVGczSURBdU56TXpNalV6UXpBdU1qTXpPREk1SURBdU56TTNOREEySURBdU1qTTBPRGc1SURBdU56UXhOakl6SURBdU1qTTJNelE1SURBdU56UTFPRFEyUXpBdU1qTXlOakExSURBdU56UTBNemc1SURBdU1qSTVNalkzSURBdU56UXlPRFlnTUM0eU1qWTBOellnTUM0M05ERTBOalZETUM0eU1qTTJPRGtnTUM0M05EQXdOekVnTUM0eU1qRTBOamNnTUM0M016ZzRNakVnTUM0eU1UazVOVFVnTUM0M016YzVNamRETUM0eU1Ua3hPVGtnTUM0M016YzBPREVnTUM0eU1UZzJNakVnTUM0M016Y3hNalFnTUM0eU1UZ3lOQ0F3TGpjek5qZzRORXd3TGpJeE56azRNeUF3TGpjek5qY3lUREF1TWpFM09ERTVJREF1TnpNMk5qRTBUREF1TWpFM056SXpJREF1TnpNMk5UVXlUREF1TWpFM056QTFJREF1TnpNMk5UUkRNQzR5TVRjM01EVWdNQzQzTXpZMU5DQXdMakl4Tnpjd05pQXdMamN6TmpVMElEQXVNakUyTWpnMUlEQXVOek00TmpjeVF6QXVNakF5TXpReklEQXVOekl5TVRFMklEQXVNVGc1T0RJMElEQXVOekEwTXpJeUlEQXVNVGM0T1RFM0lEQXVOamcxTkRjNVdrMHdMakkwTnpnek5pQXdMamMwT1RVNE1rTXdMakkwTmpNNU1TQXdMamMwTmpRME5TQXdMakkwTlRFNU55QXdMamMwTXpNd05TQXdMakkwTkRJMk1TQXdMamMwTURFNU9VTXdMakkxTXpFNE15QXdMamMwTlRJd05pQXdMakkyTWpFM01TQXdMamMwT0RrMU15QXdMakkzTURFME5pQXdMamMxTVRjeE9FTXdMakkyTWpRMU9TQXdMamMxTVRjM0lEQXVNalUwTmpreUlEQXVOelV4TXlBd0xqSTBPRFk1T0NBd0xqYzBPVGd3TWtNd0xqSTBPRFF3T1NBd0xqYzBPVGN6SURBdU1qUTRNVEl5SURBdU56UTVOalUySURBdU1qUTNPRE0ySURBdU56UTVOVGd5V2swd0xqSTBNVGczT1NBd0xqY3lOemt6TTBNd0xqSTBPVFk0T0NBd0xqY3pNekF5TWlBd0xqSTFOemcyTkNBd0xqY3pOekF3TnlBd0xqSTJOVFV6TWlBd0xqYzBNREE1T0VNd0xqSTJORE0wSURBdU56TTVNRGcySURBdU1qWXpNVEUySURBdU56TTRNREl4SURBdU1qWXhPRFl4SURBdU56TTJPRGs0UXpBdU1qVTJNREEySURBdU56TXhOalU1SURBdU1qUTVORFlnTUM0M01qVXhOallnTUM0eU5ESXlORElnTUM0M01UY3hNVFpETUM0eU5ERTJPVGNnTUM0M01qQTFNakVnTUM0eU5ERTFOeUF3TGpjeU5ERTBNaUF3TGpJME1UZzNPU0F3TGpjeU56a3pNMXBOTUM0eE9ETXpNRGdnTUM0Mk56QXhOREZETUM0eE9UWXlNeklnTUM0Mk9EYzNOelVnTUM0eU1USTNNVEVnTUM0M01EWTBNVFFnTUM0eU16STFNVEVnTUM0M01qRXpNelJETUM0eU16STNNakVnTUM0M01UWTRPREVnTUM0eU16TTBOelFnTUM0M01USTFPRFFnTUM0eU16UTNPVFVnTUM0M01EZzFNekZETUM0eU1qSTRNelVnTUM0Mk9UUXlPVGNnTUM0eU1Ea3lOVFVnTUM0Mk56WXdNamNnTUM0eE9UUXhNamdnTUM0Mk5USTFOelpETUM0eE9UTTRPREVnTUM0Mk5USTROVGtnTUM0eE9UTTJNemNnTUM0Mk5UTXhORFlnTUM0eE9UTXpPVFVnTUM0Mk5UTTBNelJETUM0eE9Ea3hPVEVnTUM0Mk5UZzBORFFnTUM0eE9EVTRNamNnTUM0Mk5qUXdORGNnTUM0eE9ETXpNRGdnTUM0Mk56QXhOREZhVFRBdU1UazFPRFkwSURBdU5qTTRNREU0UXpBdU1UZzROamt5SURBdU5qSTJOVFEzSURBdU1UZ3hNVGMwSURBdU5qRXpPVEF6SURBdU1UY3pNekU0SURBdU5UazVPVFkyUXpBdU1UZ3hNVEEzSURBdU5UazBNRFF4SURBdU1UZzVOVFl5SURBdU5UZzVNREEwSURBdU1UazROVFV6SURBdU5UZzBPRFl6UXpBdU1qQXlOakl6SURBdU5qQXdNVEkwSURBdU1qQTNNelF4SURBdU5qRTBOREF5SURBdU1qRXlORFl4SURBdU5qSTNOamcyUXpBdU1qQTJORFUxSURBdU5qTXdORFUySURBdU1qQXdPRGt5SURBdU5qTXpPRGsySURBdU1UazFPRFkwSURBdU5qTTRNREU0V2swd0xqSXpPVEV4T0NBd0xqWTVPVEl6UXpBdU1qSTNPRFF6SURBdU5qZzFORGs1SURBdU1qRTFNRGNnTUM0Mk5qZ3dOakVnTUM0eU1EQTROamdnTUM0Mk5EVTVNakZETUM0eU1EVXpOVElnTUM0Mk5ESXhNVFFnTUM0eU1UQXpPRGNnTUM0Mk16ZzVNRGNnTUM0eU1UVTRPVGtnTUM0Mk16WXpNVFpETUM0eU1UY3hOVFlnTUM0Mk16a3pOekVnTUM0eU1UZzBNek1nTUM0Mk5ESXpOamtnTUM0eU1UazNNallnTUM0Mk5EVXpNVEZETUM0eU1qYzFOekVnTUM0Mk5qTXhOVGNnTUM0eU16WXdNVFVnTUM0Mk56ZzVNVFVnTUM0eU5EUXpNVGdnTUM0Mk9USTFOVGxETUM0eU5ETTJPRElnTUM0Mk9UTXlNaUF3TGpJME16QTJOaUF3TGpZNU16a3dOU0F3TGpJME1qUTNNU0F3TGpZNU5EWXhORU13TGpJME1USXpOaUF3TGpZNU5qQTROaUF3TGpJME1ERXhPU0F3TGpZNU56WXlOeUF3TGpJek9URXhPQ0F3TGpZNU9USXpXazB3TGpJM05UTXdNaUF3TGpjek5qRXpNa013TGpJM016QXpPQ0F3TGpjek5ETXpNaUF3TGpJM01EWXhOeUF3TGpjek1qSTVOU0F3TGpJMk9EQTBNU0F3TGpjeU9UazVNVU13TGpJMk1UVWdNQzQzTWpReE16Z2dNQzR5TlRNNU56UWdNQzQzTVRZMU56RWdNQzR5TkRVME9UZ2dNQzQzTURZM09UVkRNQzR5TkRZMU9EVWdNQzQzTURRMk1UY2dNQzR5TkRjNE9Ua2dNQzQzTURJMU9URWdNQzR5TkRrME16UWdNQzQzTURBM016WkRNQzR5TlRZMU56SWdNQzQzTVRFNE16VWdNQzR5TmpNME9EZ2dNQzQzTWpFek16RWdNQzR5TmprMk9UVWdNQzQzTWpreU1EaERNQzR5TnpFMk16Z2dNQzQzTXpFMk56VWdNQzR5TnpNMU1USWdNQzQzTXpNNU9ETWdNQzR5TnpVek1ESWdNQzQzTXpZeE16SmFUVEF1TVRRMk1EZ3pJREF1TkRZME9UVkRNQzR4TkRZeU1USWdNQzQwTlRjNE5ESWdNQzR4TkRZMU1ETWdNQzQwTlRBNE5qZ2dNQzR4TkRZNU1UWWdNQzQwTkRRd09UTkRNQzR4TkRjNE56Z2dNQzQwTWpnek5ETWdNQzR4TkRrME9UZ2dNQzQwTVRNM05UVWdNQzR4TlRFeU5UY2dNQzQwTURFeE9URkRNQzR4TmpNNU1qa2dNQzR6T1RVME5Ea2dNQzR4Tnpjd05EWWdNQzR6T1RBMU56Y2dNQzR4T1RBMU1UY2dNQzR6T0RZMU56bERNQzR4T0Rjd05qTWdNQzQwTURjNU1qZ2dNQzR4T0RVd01qSWdNQzQwTWpnek9USWdNQzR4T0RReE56VWdNQzQwTkRjNU5rTXdMakUzTVRBM05TQXdMalExTWpZNU5pQXdMakUxT0RNME5DQXdMalExT0RNMk1TQXdMakUwTmpBNE15QXdMalEyTkRrMVdrMHdMakl4TXpjek1pQXdMak15TkRNd05rTXdMakl3T1RBeE15QXdMak0wTVRJNElEQXVNakExTVRrZ01DNHpOVGMzTmpRZ01DNHlNREl4TnpRZ01DNHpOek0zTlRWRE1DNHlNall6T0RFZ01DNHpOamMzTlRZZ01DNHlOVEUxTkRrZ01DNHpOalEwTWpRZ01DNHlOemN5TVRRZ01DNHpOak0zTmpGRE1DNHlPREkyTXpjZ01DNHpORFk1TWpNZ01DNHlPRGt4TWlBd0xqTXpNREE0TnlBd0xqSTVOamd3TkNBd0xqTXhNek00TVVNd0xqSTJPRFU1TnlBd0xqTXhOREl3TXlBd0xqSTBNRGMxSURBdU16RTNPRFUwSURBdU1qRXpOek15SURBdU16STBNekEyV2swd0xqSXdNRE0yT1NBd0xqTTRNemd5TjBNd0xqRTVOamMzSURBdU5EQTFNREl4SURBdU1UazBOVGtnTUM0ME1qVXpNalVnTUM0eE9UTTJNRFlnTUM0ME5EUTNNekZETUM0eU1UVXlNeUF3TGpRek56Y3pOU0F3TGpJek56YzJPQ0F3TGpRek16SXdOaUF3TGpJMk1EYzNPQ0F3TGpRek1URTFPVU13TGpJMk5EQTFOeUF3TGpReE1UazNNaUF3TGpJMk9EUTVNeUF3TGpNNU1qVTJNeUF3TGpJM05ETXdOaUF3TGpNM016RXlPRU13TGpJME9EazFPQ0F3TGpNM05EQXlNU0F3TGpJeU5ERTFOaUF3TGpNM056VTVOQ0F3TGpJd01ETTJPU0F3TGpNNE16Z3lOMXBOTUM0eE9UTXlNRE1nTUM0ME5UUTJOakpETUM0eE9USTJNamNnTUM0ME56TTJOalFnTUM0eE9UTXhPVGNnTUM0ME9URTNOellnTUM0eE9UUTJPVFFnTUM0MU1EZzVPVEZETUM0eU1UTTBPRFlnTUM0MU1ESTNOeklnTUM0eU16TXlPVFlnTUM0ME9UZzVORElnTUM0eU5UTTJOaUF3TGpRNU56VXdNME13TGpJMU5EVXpNeUF3TGpRM09Ea3pNaUF3TGpJMU5qTXlNU0F3TGpRMU9Ua3dOQ0F3TGpJMU9USTFNaUF3TGpRME1EWXhPRU13TGpJek5qVTNPU0F3TGpRME1qZ3lNaUF3TGpJeE5EUXhNeUF3TGpRME56VXhNaUF3TGpFNU16SXdNeUF3TGpRMU5EWTJNbHBOTUM0eE9UVTJNallnTUM0MU1UZzFNVFZETUM0eE9UYzJPVElnTUM0MU16YzFNVGtnTUM0eU1EQTRPRElnTUM0MU5UVXpPRE1nTUM0eU1EUTRPRE1nTUM0MU56SXdPVGhETUM0eU1qQXlOaklnTUM0MU5qWXpNVFlnTUM0eU16WTRNamdnTUM0MU5qSTROalVnTUM0eU5UUXdOeklnTUM0MU5qRTNNamhETUM0eU5UTXdOVElnTUM0MU5EUXdPVElnTUM0eU5USTNNVElnTUM0MU1qVTNNalFnTUM0eU5UTXlPVGNnTUM0MU1EWTRNemxETUM0eU16TXpNaUF3TGpVd09ETTFNaUF3TGpJeE16a3pPU0F3TGpVeE1qSTFNaUF3TGpFNU5UWXlOaUF3TGpVeE9EVXhOVnBOTUM0eU1EY3hOemNnTUM0MU9ERXlNamRETUM0eU1URXlNamNnTUM0MU9UWTJNRE1nTUM0eU1UVTVORGdnTUM0Mk1UQTVOVFFnTUM0eU1qRXdOemNnTUM0Mk1qUXlOME13TGpJek1qZzFOU0F3TGpZeU1ETXhJREF1TWpRMU9UZzNJREF1TmpFNE5qRWdNQzR5TlRrNE9EZ2dNQzQyTVRreE1EZERNQzR5TlRnME5EUWdNQzQyTURrd09EWWdNQzR5TlRjeE5qVWdNQzQxT1RnMk56SWdNQzR5TlRZeE1UTWdNQzQxT0RjNU1qRkRNQzR5TlRVMU55QXdMalU0TWpNM01pQXdMakkxTlRBNE9DQXdMalUzTmpjek1pQXdMakkxTkRZM05TQXdMalUzTVRBd09FTXdMakl6Tnprek9TQXdMalUzTWpFME1pQXdMakl5TVRrek5TQXdMalUzTlRVMU9DQXdMakl3TnpFM055QXdMalU0TVRJeU4xcE5NQzR5TWpneU1URWdNQzQyTkRFMU9ERkRNQzR5TXpVMk5pQXdMalkxT0RVeU55QXdMakkwTXpZMU9DQXdMalkzTXpVek9DQXdMakkxTVRVek9DQXdMalk0TmpVNVF6QXVNalUzTWpneElEQXVOamd5T0RRMUlEQXVNall6T1RjM0lEQXVOamd3TkRVMElEQXVNamN4TWpVeklEQXVOamM1TXpsRE1DNHlOamMyT1RZZ01DNDJOalF4TkRnZ01DNHlOalF5TXpNZ01DNDJORGN3TXpnZ01DNHlOakV5T1RnZ01DNDJNamcwTkRKRE1DNHlORGM0TlRZZ01DNDJNamMzTnlBd0xqSXpOVFEwTmlBd0xqWXlPVEk0TnlBd0xqSXlORFV4TkNBd0xqWXpNamc1TlVNd0xqSXlOVGN5T1NBd0xqWXpOVGcwTlNBd0xqSXlOamsyTWlBd0xqWXpPRGMwTVNBd0xqSXlPREl4TVNBd0xqWTBNVFU0TVZwTk1DNHlOelk1TnpVZ01DNDNNak0wTnpKRE1DNHlPREExTmpJZ01DNDNNamd3TWpVZ01DNHlPRE01SURBdU56TXlNREUwSURBdU1qZzJPRGc1SURBdU56TTFORE0zUXpBdU1qZzBORGs0SURBdU56STRNVGt4SURBdU1qZ3hOamsySURBdU56RTVNVGMySURBdU1qYzROelEwSURBdU56QTROakkzUXpBdU1qYzNNREEySURBdU56QXlOREUySURBdU1qYzFNakUySURBdU5qazFOamN4SURBdU1qY3pOREk0SURBdU5qZzRORFJETUM0eU5qWTVNVGNnTUM0Mk9Ea3lOemtnTUM0eU5qRXhOellnTUM0Mk9URXpNellnTUM0eU5UWTBNeUF3TGpZNU5EUTNORU13TGpJMk16WTNPQ0F3TGpjd05UZzBNaUF3TGpJM01EY3dOU0F3TGpjeE5UVXhOU0F3TGpJM05qazNOU0F3TGpjeU16UTNNbHBOTUM0eU5qVTFNVFFnTUM0eU1qUTJOelZETUM0eU5UVTVPRFlnTUM0eU16WXhOVFFnTUM0eU5EWXlOQ0F3TGpJME9UZ3lNU0F3TGpJek56UXlNeUF3TGpJMk5UY3hPVU13TGpJMk9EQTJNaUF3TGpJMU56YzNNU0F3TGpJNU9UVTJOeUF3TGpJMU16RXpNeUF3TGpNek1UTTFPU0F3TGpJMU1UZzBOa3d3TGpNek1UYzRNeUF3TGpJMU1USXhOME13TGpNME1USTNJREF1TWpNM01UYzJJREF1TXpVd09EYzVJREF1TWpJME5qSXlJREF1TXpZd05EVTVJREF1TWpFek16azNRekF1TXpJNE5EVTVJREF1TWpFek9EY2dNQzR5T1RZMk1qWWdNQzR5TVRjMk5EVWdNQzR5TmpVMU1UUWdNQzR5TWpRMk56VmFUVEF1TXpneE1UWXlJREF1TWpBME1qZ3hRekF1TXpreU1qazNJREF1TVRreU5qSXlJREF1TkRBek1qWXpJREF1TVRneU56UTRJREF1TkRFek9DQXdMakUzTkRNNE9VTXdMalExTXpjNUlEQXVNVGMyTXpVNUlEQXVORGt6TmpRNUlEQXVNVGd6TXpVeUlEQXVOVE15TXpZMklEQXVNVGsxTkRVM1F6QXVOVEl5TWpnMklEQXVNakF6TXpNM0lEQXVOVEV4TnpJeElEQXVNakV5TkRrM0lEQXVOVEF3TnpZeUlEQXVNakl6TVRRM1F6QXVORFl4TlRJMklEQXVNakV4TnpFeklEQXVOREl4TXpBNUlEQXVNakExTkRVeElEQXVNemd4TVRZeUlEQXVNakEwTWpneFdrMHdMak0wTWpnd05pQXdMakkxTVRVeU9FTXdMak0xTWpjMU5DQXdMakl6TnpJeE5pQXdMak0yTWpnd05DQXdMakl5TkRVMk15QXdMak0zTWpjM015QXdMakl4TXpNM04wTXdMalF4TXpFME55QXdMakl4TXpnME9DQXdMalExTXpZM015QXdMakl4T1RVM0lEQXVORGt6TWpNNElEQXVNak13TmpNeVF6QXVORGd6TVRJeUlEQXVNalF3T1RNeklEQXVORGN5TmprNElEQXVNalV5TlRBeUlEQXVORFl5TURNMElEQXVNalkxTkRrMFF6QXVOREl5TnpBMElEQXVNalUxTlRVMUlEQXVNemd5TlRnMklEQXVNalV3T1RJMUlEQXVNelF5T0RBMklEQXVNalV4TlRJNFdrMHdMak14TVRZeU5TQXdMak13TXprME4wTXdMak14T0Rrd05DQXdMakk0T1RRMUlEQXVNekkzTVRRMElEQXVNamMxTURnMUlEQXVNek0yTkRReElEQXVNall3T1RNNVF6QXVNemMyTVRRZ01DNHlOVGszTlNBd0xqUXhOakkxTnlBd0xqSTJNemc0T1NBd0xqUTFOVFl5TVNBd0xqSTNNelEwTTBNd0xqUTBOVFF5SURBdU1qZzJNekE0SURBdU5ETTFNREUySURBdU16QXdORGd4SURBdU5ESTBORFkySURBdU16RTJNRGsxUXpBdU5ESXpPRFl6SURBdU16RTJPVGczSURBdU5ESXpNall6SURBdU16RTNPRGd6SURBdU5ESXlOalkxSURBdU16RTROemhETUM0ek9EVTROek1nTUM0ek1Ea3hNRElnTUM0ek5EZzFNamdnTUM0ek1EUXhOekVnTUM0ek1URTJNalVnTUM0ek1ETTVORGRhVFRBdU1qZzNNREEwSURBdU16WXpOak00UXpBdU1qa3lOVFkzSURBdU16UTJOelkwSURBdU1qazVNakl4SURBdU16STVPVEVnTUM0ek1EY3hNVFFnTUM0ek1UTXlNRGRETUM0ek5ETTJPRGNnTUM0ek1UTXdNelVnTUM0ek9EQTNOamdnTUM0ek1UYzFPVFlnTUM0ME1UY3pORElnTUM0ek1qWTVORGxETUM0ME1EY3dOREVnTUM0ek5ETXhNRFlnTUM0ek9UYzFPRGdnTUM0ek5UazVOelFnTUM0ek9EZzVNVFlnTUM0ek56Y3lOemxETUM0ek5UUTRPRFFnTUM0ek5qZ3lNRElnTUM0ek1qQTFOeklnTUM0ek5qTTJOVGdnTUM0eU9EY3dNRFFnTUM0ek5qTTJNemhhVFRBdU1qY3dNekEySURBdU5ETXdORFUwUXpBdU1qY3pOalV4SURBdU5ERXhOREVnTUM0eU56Z3hOakVnTUM0ek9USXhOallnTUM0eU9EUXdOVFVnTUM0ek56STVNVGRETUM0ek1UY3hOVEVnTUM0ek56STJORGdnTUM0ek5URXdOalFnTUM0ek56WTVNRE1nTUM0ek9EUTNOakVnTUM0ek9EVTNNak5ETUM0ek56WTFNRGNnTUM0ME1ESTRNVGNnTUM0ek5qZzVPVEVnTUM0ME1qQXlPRGNnTUM0ek5qSXhORGtnTUM0ME16YzROek5ETUM0ek16RTBPU0F3TGpRek1URXpOQ0F3TGpNd01EVTBOeUF3TGpReU9EWTNNaUF3TGpJM01ETXdOaUF3TGpRek1EUTFORnBOTUM0ek16a3hOemdnTUM0MU1EVXdNakpETUM0ek1UTTJNVFFnTUM0ME9UZzRNVElnTUM0eU9EYzVNeUF3TGpRNU5qRTBNeUF3TGpJMk1qazJNaUF3TGpRNU56QXhNME13TGpJMk16ZzJPU0F3TGpRM09ETXpOU0F3TGpJMk5UY3lJREF1TkRVNU1qRWdNQzR5TmpnM05Ea2dNQzQwTXprNE5ETkRNQzR5T1Rnek5EZ2dNQzQwTXpjNE9ESWdNQzR6TWpnMk9UY2dNQzQwTkRBeE1UY2dNQzR6TlRnNE1URWdNQzQwTkRZMk1ETkRNQzR6TlRFME9ETWdNQzQwTmpZeE1ETWdNQzR6TkRRNU5qZ2dNQzQwT0RVMk9UUWdNQzR6TXpreE56Z2dNQzQxTURVd01qSmFUVEF1TXpJeU1qa3lJREF1TlRZNE5qTkRNQzR6TURJek9EUWdNQzQxTmpNME16SWdNQzR5T0RJMU1EWWdNQzQxTmpBNU9UUWdNQzR5TmpNek16TWdNQzQxTmpFek5FTXdMakkyTWpNd05TQXdMalUwTXpZME55QXdMakkyTVRrM015QXdMalV5TlRJeklEQXVNall5TlRnMUlEQXVOVEEyTXpBNVF6QXVNamcyTnpZMElEQXVOVEExTXpjNElEQXVNekV4TmprM0lEQXVOVEEzT0RnNElEQXVNek0yTlRZNElEQXVOVEV6T0RneVF6QXVNek14TVRZM0lEQXVOVE15TlRNMklEQXVNekkyTkRNMUlEQXVOVFV3T0RreUlEQXVNekl5TWpreUlEQXVOVFk0TmpOYVRUQXVNalk1TXpVeElEQXVOakU1TnpjeVF6QXVNalkzT0RBM0lEQXVOakE1TWpjM0lEQXVNalkyTkRRMElEQXVOVGs0TXpNM0lEQXVNalkxTXpNM0lEQXVOVGczTURFNVF6QXVNalkwT0RFeElEQXVOVGd4TmpNeklEQXVNalkwTXpReUlEQXVOVGMyTVRZeklEQXVNall6T1RNNUlEQXVOVGN3TmpFMlF6QXVNamd5TVRjNUlEQXVOVGN3TWprM0lEQXVNekF4TVRVMElEQXVOVGN5TmpFM0lEQXVNekl3TWpNeElEQXVOVGMzTmpFeVF6QXVNekU0TlRNeElEQXVOVGcxTVRZeUlEQXVNekUyT1RNM0lEQXVOVGt5TlRnM0lEQXVNekUxTkRReklEQXVOVGs1T0RZeFF6QXVNekV6TXpZeUlEQXVOakV3TURBeElEQXVNekV4TkRjMElEQXVOakU1T0RVMElEQXVNekE1TnpZeklEQXVOakk1TXpVeFF6QXVNamsyTURVMUlEQXVOakkwTXpReUlEQXVNamd5TkRNeklEQXVOakl4TVRNeklEQXVNalk1TXpVeElEQXVOakU1TnpjeVdrMHdMakk0TURZeU1pQXdMalkzT0RjME9FTXdMakkzTnpFek5pQXdMalkyTXprMU5TQXdMakkzTXpjeU9DQXdMalkwTnpNek9DQXdMakkzTURneE5DQXdMall5T1RJMk5FTXdMakk0TWpnMU15QXdMall6TURjek1pQXdMakk1TlRReU9TQXdMall6TXpnMklEQXVNekE0TVRJM0lEQXVOak00TmpJNVF6QXVNekExTkRReElEQXVOalUwTWpBMUlEQXVNekF6TWpRZ01DNDJOamczTURrZ01DNHpNREUwTkRJZ01DNDJPREU0TVRGRE1DNHlPVFF6TkRjZ01DNDJOems0TURZZ01DNHlPRGN6TWpRZ01DNDJOemczTnpnZ01DNHlPREEyTWpJZ01DNDJOemczTkRoYVRUQXVNamsxTmpFeklEQXVOek15TWprNFF6QXVNamt6TWpneElEQXVOekkxTWpFMklEQXVNamt3TlRRNElEQXVOekUyTkRFNElEQXVNamczTmpjZ01DNDNNRFl4TTBNd0xqSTROakV3TlNBd0xqY3dNRFV6TnlBd0xqSTRORFE1TnlBd0xqWTVORFV3TmlBd0xqSTRNamc0TnlBd0xqWTRPREEzTVVNd0xqSTRNell5TlNBd0xqWTRPREV3TXlBd0xqSTRORE0zSURBdU5qZzRNVFE1SURBdU1qZzFNVEl5SURBdU5qZzRNakE0UXpBdU1qZzVPVGc1SURBdU5qZzROVGswSURBdU1qazFNRFU0SURBdU5qZzVOVFUzSURBdU16QXdNakF6SURBdU5qa3hNVEEwUXpBdU1qazVNek0zSURBdU5qazNOemt5SURBdU1qazROVGd6SURBdU56QTBNRFE1SURBdU1qazNPVEk0SURBdU56QTVPREkwUXpBdU1qazJPVFVnTUM0M01UZzBORFFnTUM0eU9UWXhPVElnTUM0M01qVTVPVElnTUM0eU9UVTJNVE1nTUM0M016SXlPVGhhVFRBdU5ESTFNakF5SURBdU1UWTFOemt6UXpBdU5ETTFNelEwSURBdU1UVTROVFFnTUM0ME5EUTVOallnTUM0eE5USTJPRGtnTUM0ME5UTTRNVElnTUM0eE5EYzVOelJETUM0ME9UTXhNeUF3TGpFMU1EVTFNaUF3TGpVek1qQTROU0F3TGpFMU56azROQ0F3TGpVMk9UY3pOaUF3TGpFM01ETTJOVU13TGpVMk1EZzVPU0F3TGpFM05UTXlNeUF3TGpVMU1UUXlPU0F3TGpFNE1UTXpOQ0F3TGpVME1UUXlNU0F3TGpFNE9EWXlNVU13TGpVd016VXdOaUF3TGpFM05qRTVOQ0F3TGpRMk5EUTFPQ0F3TGpFMk9EWXhNaUF3TGpReU5USXdNaUF3TGpFMk5UYzVNMXBOTUM0MU9Ua3hPRGdnTUM0eE5UWTBOemRETUM0MU5qUXpNRFlnTUM0eE5EUXdPRGNnTUM0MU1qZ3hNamdnTUM0eE16WXdOVGNnTUM0ME9URTBNaUF3TGpFek1qTXdNME13TGpRNE5UWTBNaUF3TGpFek5EQXdOaUF3TGpRM09EUTVPU0F3TGpFek5qUTNNaUF3TGpRM01ESTVPQ0F3TGpFME1EQXhOa013TGpVd056a3hOQ0F3TGpFME16Y3hPU0F3TGpVME5UQTVOeUF3TGpFMU1UZ3hPU0F3TGpVNE1UQTFJREF1TVRZME5EQXhRekF1TlRnM05UTTFJREF1TVRZeE1qQTBJREF1TlRrek5UazNJREF1TVRVNE5UazVJREF1TlRrNU1UZzRJREF1TVRVMk5EYzNXazB3TGpVM016TXlNU0F3TGpnMk16UTVPRU13TGpVNU16TTFOU0F3TGpnMU9UUTNPU0F3TGpZeE1qZ3dOU0F3TGpnMU16ZzBOU0F3TGpZek1UVXlPU0F3TGpnME5qY3pOME13TGpZek1qUXhJREF1T0RReU9URTBJREF1TmpNek1qRWdNQzQ0TXprd056RWdNQzQyTXpNNU1qa2dNQzQ0TXpVeU1VTXdMall4TnpVNElEQXVPRE0zTnpneklEQXVOVGs1TVRZM0lEQXVPRE01TmpnM0lEQXVOVGM0T0RZeklEQXVPRFF3TXpJeFF6QXVOVGMzTkRNeUlEQXVPRFE0TVRZeklEQXVOVGMxTlRnMklEQXVPRFUxT0RrNElEQXVOVGN6TXpJeElEQXVPRFl6TkRrNFdrMHdMalU0TURNMk15QXdMamd6TURrNU9FTXdMall3TURnek1pQXdMamd6TURJM09DQXdMall4T1RJNU1pQXdMamd5T0RJME5pQXdMall6TlRVMU5pQXdMamd5TlRVMlF6QXVOak00TURjNUlEQXVPREE0T0RNNUlEQXVOak01TVRJMElEQXVOemt4T0RJMElEQXVOak00TnpFMElEQXVOemMwTnpGRE1DNDJNakF6TURnZ01DNDNOemt4TXpNZ01DNDJNREV6TWprZ01DNDNPREl5TXprZ01DNDFPREl4T1RVZ01DNDNPRFF5T0RaRE1DNDFPRE13T1RZZ01DNDRNREF3TmpNZ01DNDFPREkwT1RnZ01DNDRNVFUzTURVZ01DNDFPREF6TmpNZ01DNDRNekE1T1RoYVRUQXVOalF4T1RZZ01DNDROREkxT1RWRE1DNDJOREkxT0RJZ01DNDRNemsxT1RNZ01DNDJORE14TlRZZ01DNDRNelkxTnprZ01DNDJORE0yT0RJZ01DNDRNek0xTlRaRE1DNDJOVEUxT0RjZ01DNDRNekl4TVRnZ01DNDJOVGc1TkRjZ01DNDRNekExTXpjZ01DNDJOalUzTXpjZ01DNDRNamc0T1RSRE1DNDJOamswT1RjZ01DNDRNamM1T0RVZ01DNDJOek13T0RJZ01DNDRNamN3TlRZZ01DNDJOelkwT0RrZ01DNDRNall4TWpKRE1DNDJOalV6TVRNZ01DNDRNekl4T0RNZ01DNDJOVE0zT1RFZ01DNDRNemMyT0RjZ01DNDJOREU1TmlBd0xqZzBNalU1TlZwTk1DNDNNRFF5TWpnZ01DNDRNRGN5TmtNd0xqY3dORFk1TlNBd0xqZ3dOekEzTnlBd0xqY3dOVEUxTVNBd0xqZ3dOamc1TmlBd0xqY3dOVFU1TmlBd0xqZ3dOamN4T0VNd0xqY3dOekEwTkNBd0xqYzRPRE0xT1NBd0xqY3dOamt5TlNBd0xqYzJPVGN3TWlBd0xqY3dOVEkyTkNBd0xqYzFNRGswTWtNd0xqWTROekkzTmlBd0xqYzFPVGs0TWlBd0xqWTJOemszTXlBd0xqYzJOekF3TlNBd0xqWTBOemt6T0NBd0xqYzNNak0yT0VNd0xqWTBPRFEzT0NBd0xqYzRPVFkzSURBdU5qUTNOVGMzSURBdU9EQTJPRGt5SURBdU5qUTFNakEySURBdU9ESXpPRFExUXpBdU5qVXhOek14SURBdU9ESXlOakF6SURBdU5qVTNPRFV6SURBdU9ESXhNalkySURBdU5qWXpOVFU0SURBdU9ERTVPRGcyUXpBdU5qZ3hNamt5SURBdU9ERTFOVGsySURBdU5qazBPVGt6SURBdU9ERXdPRGd6SURBdU56QTBNakk0SURBdU9EQTNNalphVFRBdU5UY3lPVE0ySURBdU56ZzFNVGswUXpBdU5UY3pOemczSURBdU9EQXdOemMwSURBdU5UY3pNVEl5SURBdU9ERTJNVGsySURBdU5UY3dPVEVnTUM0NE16RXlNek5ETUM0MU5UTXlOVE1nTUM0NE16RTBPU0F3TGpVek5ESXdOQ0F3TGpnek1EYzFOeUF3TGpVeE16ZzNOaUF3TGpneU9EWTBOa013TGpVeE5qRTFOQ0F3TGpneE5UTTBPU0F3TGpVeE5qYzFOQ0F3TGpnd01UVTFNeUF3TGpVeE5UY3pOaUF3TGpjNE56VXpOVU13TGpVek5EWXhOU0F3TGpjNE56VTVOeUF3TGpVMU16Z3hPU0F3TGpjNE5qa3dNU0F3TGpVM01qa3pOaUF3TGpjNE5URTVORnBOTUM0MU1EWXpPVFFnTUM0M09EYzBORFJETUM0MU1EYzBNeUF3TGpnd01URTROQ0F3TGpVd05qZ3pNeUF3TGpneE5EWTJNU0F3TGpVd05EVTNNU0F3TGpneU56VTROME13TGpRNE16RXdOaUF3TGpneU5Ea3hPU0F3TGpRMk1qazNPU0F3TGpneU1EZzJOeUF3TGpRME5ETTNJREF1T0RFMU9UZzRRekF1TkRRMk16UXhJREF1T0RBMU9UTXlJREF1TkRRMk5UazJJREF1TnprMU1UZzBJREF1TkRRMU1qSTVJREF1TnpnME1EZERNQzQwTlRjMk56Y2dNQzQzT0RVeU1TQXdMalEzTURVMU1pQXdMamM0TmpFeU9DQXdMalE0TXpjd015QXdMamM0Tmpjek0wTXdMalE1TVRFNE15QXdMamM0TnpBM055QXdMalE1T0RjMU5TQXdMamM0TnpNeUlEQXVOVEEyTXprMElEQXVOemczTkRRMFdrMHdMalV3TWpZM09TQXdMamd6TmpZNVF6QXVORGd4TURnNElEQXVPRE16T1RjeUlEQXVORFl3T0RNMElEQXVPREk1T0RneklEQXVORFF5TURrZ01DNDRNalE1TnpKRE1DNDBNemt4T1RVZ01DNDRNelF4TmprZ01DNDBNelEzSURBdU9EUXlOalF4SURBdU5ESTROVEl5SURBdU9EVXdNVEF5UXpBdU5EUTVOak14SURBdU9EVTVOVEkySURBdU5EWTVOVGMwSURBdU9EWTBOakE1SURBdU5EZzFPRE0zSURBdU9EWTNNekU1UXpBdU5EZzNOVFl4SURBdU9EWTNOakEzSURBdU5EZzVNalF6SURBdU9EWTNPRFkzSURBdU5Ea3dPRGdnTUM0NE5qZ3hNRE5ETUM0ME9UWXdPVFVnTUM0NE5UZ3lNamtnTUM0MU1EQXdNakVnTUM0NE5EYzJPVFVnTUM0MU1ESTJOemtnTUM0NE16WTJPVnBOTUM0MU1EQTNNakVnTUM0NE5qa3pNRFpETUM0MU1EVTNNRFVnTUM0NE5Ua3lPVGtnTUM0MU1EazBOak1nTUM0NE5EZzNNelFnTUM0MU1USXdNamtnTUM0NE16YzNOekpETUM0MU16STBNVFFnTUM0NE16azVNalFnTUM0MU5URTFOVElnTUM0NE5EQTNNVGNnTUM0MU5qa3pNemdnTUM0NE5EQTFNakpETUM0MU5qYzNNVFlnTUM0NE5EZzVOellnTUM0MU5qVTFPVE1nTUM0NE5UY3lPU0F3TGpVMk1qazJNeUF3TGpnMk5UUXlNME13TGpVME9ETTNNeUF3TGpnMk56a3hPU0F3TGpVek16UTVNeUF3TGpnMk9UVTJNeUF3TGpVeE9ETTNOU0F3TGpnM01ETXdNVU13TGpVeE56STBOaUF3TGpnM01ESTVNaUF3TGpVeE5UazVJREF1T0Rjd01qWTVJREF1TlRFME5qRTFJREF1T0Rjd01qSTNRekF1TlRFd09ESTVJREF1T0Rjd01URXhJREF1TlRBMk1UUXpJREF1T0RZNU9EUTNJREF1TlRBd056SXhJREF1T0RZNU16QTJXazB3TGpRME5UZzJOQ0F3TGpnMk5qZ3lOVU13TGpRek9EQTNPU0F3TGpnMk5ERTVNeUF3TGpRek1EQXdNeUF3TGpnMk1UQXlOU0F3TGpReU1UYzNNaUF3TGpnMU56SXhORU13TGpReU1ERTRJREF1T0RVNE5qYzRJREF1TkRFNE5USTRJREF1T0RZd01EWTNJREF1TkRFMk9ERTNJREF1T0RZeE16Z3hRekF1TkRJMk16WTBJREF1T0RZek5UWTVJREF1TkRNMk1EVXhJREF1T0RZMU16ZzVJREF1TkRRMU9EWTBJREF1T0RZMk9ESTFXazB3TGpReE1qY3lOU0F3TGpnMU1qYzVNVU13TGpReE1ESXhOeUF3TGpnMU5EZzBJREF1TkRBM05UUTFJREF1T0RVMk56QTRJREF1TkRBME56RTVJREF1T0RVNE16a3hRekF1TXpnNU5EWWdNQzQ0TlRRek5EVWdNQzR6TnpRMU9EY2dNQzQ0TkRrek5TQXdMak0yTURFMk9DQXdMamcwTXpRM05FTXdMak0yTURRNE5DQXdMamcwTWpZMk55QXdMak0yTURRNE5TQXdMamcwTWpZMk55QXdMak0yTURRNE5pQXdMamcwTWpZMk9Fd3dMak0yTURNMElEQXVPRFF5TmpBM1F6QXVNell3TWpjMUlEQXVPRFF5TlRjNUlEQXVNell3TVRnNUlEQXVPRFF5TlRReUlEQXVNell3TURnMUlEQXVPRFF5TkRrMVF6QXVNelU1T1RjMElEQXVPRFF5TkRRMklEQXVNelU1T0RReklEQXVPRFF5TXpnM0lEQXVNelU1TmpreElEQXVPRFF5TXpFMlF6QXVNelU1TURrNUlEQXVPRFF5TURReUlEQXVNelU0TVRrNElEQXVPRFF4TmlBd0xqTTFOekEwTkNBd0xqZzBNRGsyTmtNd0xqTTFORGN6TnlBd0xqZ3pPVFk1TnlBd0xqTTFNVFF5TWlBd0xqZ3pOelkxT0NBd0xqTTBOelUwT0NBd0xqZ3pORFl6T0VNd0xqTTBNVFEwTmlBd0xqZ3lPVGc0TWlBd0xqTXpNemswTlNBd0xqZ3lNalk0TkNBd0xqTXlOamM1TkNBd0xqZ3hNakl3TWtNd0xqTXpOREUxT0NBd0xqZ3hNakVnTUM0ek5ERXhNVEVnTUM0NE1UQTNOemNnTUM0ek5EY3pNVGdnTUM0NE1EZ3lNRGxETUM0ek5qQXlOalVnTUM0NE1UZzNPRGdnTUM0ek56VTJNVElnTUM0NE16QXlNREVnTUM0ek9UTXpOakVnTUM0NE5ERTJNVEpETUM0ek9UazRNemNnTUM0NE5EVTNOelVnTUM0ME1EWXpNVElnTUM0NE5EazBPRFVnTUM0ME1USTNNalVnTUM0NE5USTNPVEZhVFRBdU16SXhNRFV6SURBdU9EQXlOelEzVERBdU16SXdPVGd4SURBdU9EQXlOelF4UXpBdU16RXpOalV6SURBdU56ZzVOVEE1SURBdU16QTVNek01SURBdU56YzROekUzSURBdU16QTJPREF5SURBdU56Y3dOME13TGpNeE1ETXhNaUF3TGpjM05EUXpNeUF3TGpNeE5EWWdNQzQzTnpnNE1Ua2dNQzR6TVRrMk5qTWdNQzQzT0RNM01ESkRNQzR6TWpVeE9Ea2dNQzQzT0Rrd015QXdMak16TVRZME1TQXdMamM1TkRrMU1pQXdMak16T1RBeE9TQXdMamd3TVRJMk9FTXdMak16TXpZMU9DQXdMamd3TWpjMElEQXVNekkzTmpFMUlEQXVPREF6TWpZM0lEQXVNekl4TURVeklEQXVPREF5TnpRM1drMHdMak15TkRreU1pQXdMamN3TnpRek5rTXdMak14TmpVek9TQXdMamN4T1RZMk9TQXdMak13T1RVNE1TQXdMamN5T1RnMU9TQXdMak13TkRRMk5DQXdMamN6TnpNMk4wTXdMak13TlRBM015QXdMamN6TURNNE15QXdMak13TlRrek55QXdMamN5TVRRME15QXdMak13TnpFek55QXdMamN4TURnMk9VTXdMak13TnpjeUlEQXVOekExTnpNMklEQXVNekE0TXpneElEQXVOekF3TWpFNElEQXVNekE1TVRNZ01DNDJPVFF6TlRKRE1DNHpNVFV4TkRNZ01DNDJPVFk1TWpNZ01DNHpNakV4TlRrZ01DNDNNREF5T0RFZ01DNHpNalk1T0RFZ01DNDNNRFEwTXpKTU1DNHpNalE1TWpJZ01DNDNNRGMwTXpaYVRUQXVNek15TWpJMUlEQXVOamsyTnpnNVF6QXVNekkxTVRZMUlEQXVOamt4TnpjeElEQXVNekUzTnpreElEQXVOamczTnpneklEQXVNekV3TXpneklEQXVOamcwT0RRMVF6QXVNekV5TVRNMUlEQXVOamN4T1RNeElEQXVNekUwTWpnM0lEQXVOalUzTmpBeElEQXVNekUyT1RJZ01DNDJOREl4T0RkRE1DNHpNamszTVRJZ01DNDJORGMzTXpZZ01DNHpOREkxTXlBd0xqWTFORGt6TmlBd0xqTTFORGsxTlNBd0xqWTJNemMyT1VNd0xqTTBOamMxTXlBd0xqWTNOVFkxTWlBd0xqTXpPVEV4TnlBd0xqWTROamMxSURBdU16TXlNakkxSURBdU5qazJOemc1V2swd0xqTXlORFV5TWlBd0xqWXdNVGN5TlVNd0xqTXlNak15TXlBd0xqWXhNalF6TmlBd0xqTXlNRE0wTWlBd0xqWXlNamd5TkNBd0xqTXhPRFUxT1NBd0xqWXpNamd3T0VNd0xqTXpNall5TWlBd0xqWXpPRGN5TmlBd0xqTTBOalkzTWlBd0xqWTBOalV5TVNBd0xqTTJNREl5TWlBd0xqWTFOakUwTWtNd0xqTTNNREk0TkNBd0xqWTBNVFU0TXlBd0xqTTRNVEE1TnlBd0xqWXlOVGs1TVNBd0xqTTVNak0xT0NBd0xqWXdPVGd6TVVNd0xqTTNNVGc0TXlBd0xqVTVOalUwTlNBd0xqTTFNRFV5TVNBd0xqVTROalkyTnlBd0xqTXlPVEUyTVNBd0xqVTRNREUwTlVNd0xqTXlOelV4TnlBd0xqVTROelEySURBdU16STFPVGN6SURBdU5UazBOall4SURBdU16STBOVEl5SURBdU5qQXhOekkxV2swd0xqTTVOelkxTWlBd0xqWXdNakkwUXpBdU16YzJNalU1SURBdU5UZzRNelV5SURBdU16VXpOemczSURBdU5UYzNPVGMzSURBdU16TXhNakl5SURBdU5UY3hNVFEzUXpBdU16TTFNemM0SURBdU5UVXpNekkzSURBdU16UXdNVEkySURBdU5UTTBPVEF4SURBdU16UTFOVFEzSURBdU5URTJNVGs0UXpBdU16YzBOamc0SURBdU5USTBNakV5SURBdU5EQXpOakV4SURBdU5UTTNNREkxSURBdU5ETXhJREF1TlRVME56QXpRekF1TkRFNU5qa3hJREF1TlRjd056TXpJREF1TkRBNE5EZzRJREF1TlRnMk56RXpJREF1TXprM05qVXlJREF1TmpBeU1qUmFUVEF1TkRNMk16UXpJREF1TlRRM01UTTJRekF1TkRBNE1UY3pJREF1TlRJNE9USTVJREF1TXpjNE16RTRJREF1TlRFMU5qWTNJREF1TXpRNE1UVTJJREF1TlRBM016VkRNQzR6TlRNNU9EUWdNQzQwT0RjNU1qRWdNQzR6TmpBMU5EVWdNQzQwTmpneU5Ea2dNQzR6TmpjNU1qWWdNQzQwTkRnMk9UZERNQzQwTURRek5qRWdNQzQwTlRjMk1ERWdNQzQwTkRBek1EY2dNQzQwTnpJM05pQXdMalEzTkRBeE1pQXdMalE1TkRJM05VTXdMalEyTVRZeE55QXdMalV4TVRVd09TQXdMalEwT0RrMElEQXVOVEk1TXpFMElEQXVORE0yTXpReklEQXVOVFEzTVRNMldrMHdMalEzT1RRek15QXdMalE0TmpjMVF6QXVORFExTVRJM0lEQXVORFkwTnprM0lEQXVOREE0TkRjNUlEQXVORFE1TWpNMUlEQXVNemN4TWpZMklEQXVORFF3TURBMVF6QXVNemM0TVRBeklEQXVOREl5TlRFMklEQXVNemcxTmpFeElEQXVOREExTVRZMklEQXVNemt6T0RVeUlEQXVNemc0TWpFMVF6QXVORE0wTVRVMUlEQXVNems1TnpZMElEQXVORGMwTURFMUlEQXVOREUzT0RZMklEQXVOVEV4TmpVNElEQXVORFF5TlRreFF6QXVOVEF4TXpZMElEQXVORFUyTlRBNUlEQXVORGt3TlRNMElEQXVORGN4TXpZMElEQXVORGM1TkRNeklEQXVORGcyTnpWYVRUQXVOVEUzTVRneUlEQXVORE0xTVRRMFF6QXVORGM1TVRneUlEQXVOREV3TVRRZ01DNDBNemc0TmpZZ01DNHpPVEUzTURFZ01DNHpPVGd3TVRRZ01DNHpOems0TVRWRE1DNDBNRFkzTnpRZ01DNHpOakkwTmpNZ01DNDBNVFl6TWpjZ01DNHpORFUxT0RNZ01DNDBNalkzTkRJZ01DNHpNamswTmpKRE1DNDBOekExT1RJZ01DNHpOREUyT1RRZ01DNDFNVE0xT0RVZ01DNHpOakE0TlRjZ01DNDFOVE01TmlBd0xqTTROekExTWtNd0xqVTBNekUyT1NBd0xqUXdNRFl4T1NBd0xqVXpNRFk1T0NBd0xqUXhOamszTlNBd0xqVXhOekU0TWlBd0xqUXpOVEUwTkZwTk1DNDFOVGszT0RrZ01DNHpOemszT1RSRE1DNDFNVGt5T1RNZ01DNHpOVE0wTVRnZ01DNDBOell4TlRJZ01DNHpNek01TmpZZ01DNDBNekl3T0RrZ01DNHpNakV6TmpkTU1DNDBNekl4TkRZZ01DNHpNakV5T0RSRE1DNDBORE0wTmpnZ01DNHpNRFExTWpjZ01DNDBOVFEyTURRZ01DNHlPRGswTnpRZ01DNDBOalUwTnpjZ01DNHlOelU1TlRORE1DNDFNVEV5T0RRZ01DNHlPRGd4TmpjZ01DNDFOVFU1TXpFZ01DNHpNRGMzTnpNZ01DNDFPVGMxTlRRZ01DNHpNelE1TURsRE1DNDFPRFE1T1RrZ01DNHpORGt6TXpJZ01DNDFOekl5T0RNZ01DNHpOalF6T0RVZ01DNDFOVGszT0RrZ01DNHpOemszT1RSYVRUQXVOakF6TnpFMUlEQXVNekkzT0RZMlF6QXVOVFl5TVRjMklEQXVNekF3TmpJMElEQXVOVEUzTmpReElEQXVNamd3TnpReklEQXVORGN4T1RBeUlEQXVNalk0TVRBMFF6QXVORGd5TmpreklEQXVNalUxTVRVeklEQXVORGt6TWpBMklEQXVNalF6TnpBMklEQXVOVEF6TXpZMUlEQXVNak16TlRnM1F6QXVOVFE0TXpjeUlEQXVNalEzTWpjZ01DNDFPVEl3TURJZ01DNHlOamM1TXpNZ01DNDJNekkxT1RnZ01DNHlPVFUzTURoRE1DNDJNak15TXpVZ01DNHpNRFU1TWlBd0xqWXhNelUwTlNBd0xqTXhOalk0TkNBd0xqWXdNemN4TlNBd0xqTXlOemcyTmxwTk1DNDJNemc1TkRFZ01DNHlPRGc0TWpGRE1DNDFPVGczTURZZ01DNHlOakV4TXpFZ01DNDFOVFUxTVRZZ01DNHlOREF6TURnZ01DNDFNVEE1TXlBd0xqSXlOakl6TTBNd0xqVXlNakUwTmlBd0xqSXhOVFU1TXlBd0xqVXpNamc1TVNBd0xqSXdOalUzT1NBd0xqVTBNekExTnlBd0xqRTVPRGswUXpBdU5UZzFOalV4SURBdU1qRXpNemM1SURBdU5qSTJOek15SURBdU1qTTBNRGcySURBdU5qWTBPVE14SURBdU1qWXhNVGcwUXpBdU5qVTJOelE0SURBdU1qWTVOelF6SURBdU5qUTRNREkxSURBdU1qYzRPVGs0SURBdU5qTTRPVFF4SURBdU1qZzRPREl4V2swd0xqWTNNVFF5SURBdU1qVTBOREkxUXpBdU5qTTBNREExSURBdU1qSTNOekl6SURBdU5Ua3pPRFlnTUM0eU1EY3dOVE1nTUM0MU5USXlNallnTUM0eE9USXpNRFZETUM0MU5qSXpNellnTUM0eE9EVXlOeklnTUM0MU56RTNPVFFnTUM0eE56azJNaklnTUM0MU9EQTBPRElnTUM0eE56VXdPRE5ETUM0MU9EQTROemdnTUM0eE56UTROellnTUM0MU9ERXlOek1nTUM0eE56UTJOeklnTUM0MU9ERTJOalVnTUM0eE56UTBOME13TGpZeU1EVTFNU0F3TGpFNE9EUTBPQ0F3TGpZMU56a3hOeUF3TGpJd056YzVPU0F3TGpZNU1qY3dNeUF3TGpJek1qWXpNa013TGpZNE5qVXpOQ0F3TGpJek9EZzJOU0F3TGpZM09UWTRPU0F3TGpJME5UZzFOQ0F3TGpZM01qTXhPU0F3TGpJMU16UTVNMHd3TGpZM01UUXlJREF1TWpVME5ESTFXazB3TGpZNU9UTXlOQ0F3TGpJeU5UazNNVU13TGpZMk5qQXhPQ0F3TGpJd01qQXlPQ0F3TGpZek1ETTRPU0F3TGpFNE16QXpOU0F3TGpVNU16TXpNaUF3TGpFMk9EZzVNME13TGpZd01EVTJJREF1TVRZMU56RWdNQzQyTURjd09UY2dNQzR4TmpNek5ERWdNQzQyTVRJNE5UTWdNQzR4TmpFMU9FTXdMalkwTnpBMU5TQXdMakUzTkRrNE9DQXdMalkzT1RnNE9TQXdMakU1TWpZNE5TQXdMamN4TURZeE1TQXdMakl4TkRjMU5FTXdMamN3TnpJNU1TQXdMakl4T0RBeU5pQXdMamN3TXpVd09TQXdMakl5TVRjNElEQXVOams1TXpJMElEQXVNakkxT1RjeFdrMHdMamN4TnpNeU55QXdMakl3T0RFMk9FTXdMalk0T1RFM01TQXdMakU0TnpjNE5pQXdMalkxT1RJM055QXdMakUzTVRBeU5DQXdMall5T0RFNU5pQXdMakUxTnpneE5VTXdMall6TWpFeE1pQXdMakUxTnpFeE1pQXdMall6TlRJd09DQXdMakUxTmpjM05pQXdMall6TnpRd01pQXdMakUxTmpZeE9FTXdMall6T0RNeE9DQXdMakUxTmpVMU1pQXdMall6T1RBM055QXdMakUxTmpVeE55QXdMall6T1RZM015QXdMakUxTmpRNU9VTXdMalkyT1RNek1pQXdMakUyT0RVM01TQXdMalk1TnpBM055QXdMakU0TkRNM01pQXdMamN5TWpNeU15QXdMakl3TXpNeU1VTXdMamN5TURrM01pQXdMakl3TkRZeU5DQXdMamN4T1RJNU9DQXdMakl3TmpJME5pQXdMamN4TnpNeU55QXdMakl3T0RFMk9GcE5NQzQxTlRFd016Z2dNQzR4TXpJM04wTXdMalUzTWpFMU1TQXdMakV6TnpZek9TQXdMalU1TWprMU1pQXdMakUwTXprM01pQXdMall4TXpJNU15QXdMakUxTVRjNE4wTXdMall4TmpJM01pQXdMakUxTURrME1pQXdMall4T1RBME5DQXdMakUxTURJMU1pQXdMall5TVRVNU5TQXdMakUwT1RZNE9FTXdMalU1T0RrNUlEQXVNVFF4T0RReklEQXVOVGMxTXpreUlEQXVNVE0yTVRJMElEQXVOVFV4TURNNElEQXVNVE15TnpkYVRUQXVNakk0TnpVMUlEQXVOelV5TnpRMVF6QXVNak15TkRneElEQXVOelUwTXpVMUlEQXVNak0yTnpJMklEQXVOelUxT1RjMklEQXVNalF4TXpRZ01DNDNOVGN6TnpoRE1DNHlORE00TmprZ01DNDNOakl5TWpjZ01DNHlORFk1TVRjZ01DNDNOamN3TURjZ01DNHlOVEEwTmpFZ01DNDNOekUyTWpOTU1DNHlORGcwSURBdU56Y3lNekZETUM0eU5ERTJNVElnTUM0M05qWXdNelFnTUM0eU16VXdOVGdnTUM0M05UazFNRGdnTUM0eU1qZzNOVFVnTUM0M05USTNORFZhVFRBdU1qVXpOalkzSURBdU56WXdNVEpETUM0eU5qSXpNeklnTUM0M05qRXlORE1nTUM0eU56SXhOaklnTUM0M05qRXhNVElnTUM0eU9EQXlOekVnTUM0M05qQTJOakpETUM0eU9ERXhPVGdnTUM0M05qQTJNVEVnTUM0eU9ESXhNRGNnTUM0M05qQTFOVFVnTUM0eU9ESTVPVFFnTUM0M05qQTBPVFZETUM0eU9EQTFNU0F3TGpjMk1UUTVPU0F3TGpJM056VXhOaUF3TGpjMk1qWXdOQ0F3TGpJM016a3hOQ0F3TGpjMk16Z3dOVXd3TGpJMU9UZ3lJREF1TnpZNE5UQXpRekF1TWpVM05UWXpJREF1TnpZMU56WXlJREF1TWpVMU5URXhJREF1TnpZeU9UVTVJREF1TWpVek5qWTNJREF1TnpZd01USmFUVEF1TWpjMk9EUTFJREF1TnpjeU5UazRRekF1TWpneU1ESTNJREF1Tnpjd09EY2dNQzR5T0RZeU1USWdNQzQzTmpreU5qY2dNQzR5T0RrMU9Ea2dNQzQzTmpjM056TkRNQzR5T0RneE16RWdNQzQzTnpJNE16Y2dNQzR5T0RZME5Ua2dNQzQzTnpnNU1qVWdNQzR5T0RRM09EY2dNQzQzT0RVMk1UTk1NQzR5T0RNM09EY2dNQzQzT0RrMk1VTXdMakk0TURBMU1pQXdMamM0TnpJME9DQXdMakkzTmpNM015QXdMamM0TkRVMk9TQXdMakkzTWpnd01TQXdMamM0TVRVM01rTXdMakkzTURZME9TQXdMamMzT1RjMk5pQXdMakkyT0RZd05DQXdMamMzTnprd01pQXdMakkyTmpZMk55QXdMamMzTlRrNVREQXVNamMyT0RRMUlEQXVOemN5TlRrNFdrMHdMakkxTmpreElEQXVOemM1TWpRelREQXVNalUyTXpNeklEQXVOemM1TkRNMVF6QXVNalUzT1RZeUlEQXVOemd3T0RVM0lEQXVNalU1TmpBMElEQXVOemd5TWpZMUlEQXVNall4TWpVNUlEQXVOemd6TmpVNVF6QXVNalU1TnpVMElEQXVOemd5TWpFMUlEQXVNalU0TXpBMElEQXVOemd3TnpReElEQXVNalUyT1RFZ01DNDNOemt5TkROYVRUQXVNamszTnpjeElEQXVOemN5T0RjMlF6QXVNamsyTlRJeUlEQXVOemMzTWprNUlEQXVNamsxTVRVZ01DNDNPREl6TnpZZ01DNHlPVE0zTnpnZ01DNDNPRGM0TmpKTU1DNHlPVEl4TlRrZ01DNDNPVFF6TXpsRE1DNHlPVGM1TXpNZ01DNDNPVGN5TWpRZ01DNHpNRE0zTlRNZ01DNDNPVGt6TnpnZ01DNHpNRGswTkRRZ01DNDRNREE0TVVNd0xqTXdNelkzT1NBd0xqYzRPVFU1TWlBd0xqTXdNREExTWlBd0xqYzRNREl3T0NBd0xqSTVOemMzTVNBd0xqYzNNamczTmxwTk1DNHlPRGs0TmpFZ01DNDRNRE0xTWpoRE1DNHlPVGd6TXpRZ01DNDRNRGMxTlNBd0xqTXdOamsxTVNBd0xqZ3hNREU1SURBdU16RTFNamcxSURBdU9ERXhOREUxUXpBdU16RTVNakk1SURBdU9ERTNPVFk1SURBdU16SXpNemM1SURBdU9ESXpOVE00SURBdU16STNORGN4SURBdU9ESTRNalEwUXpBdU16RTBNekEzSURBdU9ESXhNekV4SURBdU16QXhOakV5SURBdU9ERXpOakE1SURBdU1qZzVORFEwSURBdU9EQTFNVGs0VERBdU1qZzVPRFl4SURBdU9EQXpOVEk0V2swd0xqSTRNVFF6TVNBd0xqYzVPVEF6TlVNd0xqSTRNREV4SURBdU56azRNalV4SURBdU1qYzROemsxSURBdU56azNORE16SURBdU1qYzNORGtnTUM0M09UWTFPRU13TGpJM09EYzJOU0F3TGpjNU56VXpPQ0F3TGpJNE1EQTBOU0F3TGpjNU9EUTROeUF3TGpJNE1UTXpNeUF3TGpjNU9UUXlPVXd3TGpJNE1UUXpNU0F3TGpjNU9UQXpOVnBOTUM0eU9EVTJOVFFnTUM0NE1ESTFORE5NTUM0eU9EWTFNellnTUM0NE1ETXhOamRETUM0eU9EY3dNaklnTUM0NE1ETTFNU0F3TGpJNE56VXdPQ0F3TGpnd016ZzFNU0F3TGpJNE56azVOaUF3TGpnd05ERTVNa013TGpJNE56STBOeUF3TGpnd016STNOeUF3TGpJNE5qTTRNeUF3TGpnd01qY3lPU0F3TGpJNE5UWTFOQ0F3TGpnd01qVTBNMXBOTUM0ME1UazRNamdnTUM0NE5EWkRNQzQwTVRJM016WWdNQzQ0TkRJME5qa2dNQzQwTURVMU5UUWdNQzQ0TXpnME16SWdNQzR6T1Rnek56TWdNQzQ0TXpNNE1UVkRNQzR6T0RJeU5Ea2dNQzQ0TWpNME5TQXdMak0yT0RFMU1pQXdMamd4TXpBNE55QXdMak0xTmpBNElEQXVPREF6TXpneFF6QXVNelU0TnpJeElEQXVPREF4TkRrNElEQXVNell4TVRReElEQXVOems1TXpFeElEQXVNell6TXlBd0xqYzVOamd4TmtNd0xqTTRNamc1TnlBd0xqZ3dOVGd4SURBdU5EQTJNelU0SURBdU9ERTBPVFlnTUM0ME16TXhNeklnTUM0NE1qSTFNekpETUM0ME16QTFNVFFnTUM0NE16QTJPVEVnTUM0ME1qWTFNRFVnTUM0NE16Z3dPU0F3TGpReU1URXhOU0F3TGpnME5EVXhORU13TGpReU1EWTVNeUF3TGpnME5UQXhOeUF3TGpReU1ESTJOQ0F3TGpnME5UVXhNaUF3TGpReE9UZ3lPQ0F3TGpnME5scE5NQzR6TkRnMU56Y2dNQzQzT1RjeU1UbERNQzR6TlRBM05EWWdNQzQzT1RVNU1TQXdMak0xTWpjeU15QXdMamM1TkRNNE55QXdMak0xTkRRNUlEQXVOemt5TmpZeVREQXVNelUwTkRVM0lEQXVOemt5TmpRMlF6QXVNelEwTXpFZ01DNDNPRGMzTXpFZ01DNHpNelV6TmpFZ01DNDNPREk1TkRJZ01DNHpNamMzTURRZ01DNDNOemcxTnpGRE1DNHpNek0yTXlBd0xqYzROREl5TXlBd0xqTTBNRFU0T0NBd0xqYzVNRFV4T1NBd0xqTTBPRFUzTnlBd0xqYzVOekl4T1ZwTk1DNDBNelUzTmpVZ01DNDNPRE14TlRORE1DNDBNemN5T1RJZ01DNDNPVE01TURZZ01DNDBNemN4TmpZZ01DNDRNRFF4TWpjZ01DNDBNelV6T1RrZ01DNDRNVE0xTkRGRE1DNDBNRGs0T1RjZ01DNDRNRFl6TVRNZ01DNHpPRGMwTmpFZ01DNDNPVGMyTWpnZ01DNHpOamcxT1RVZ01DNDNPRGt3TkRWRE1DNHpOekE1TVRnZ01DNDNPRFEyTVRrZ01DNHpOekkwTXpRZ01DNDNOemszT0RZZ01DNHpOek14TnprZ01DNDNOelEyT0RoRE1DNHpPVEUzTnpNZ01DNDNOemM0TURRZ01DNDBNVEk1TlRrZ01DNDNPREE0TWpRZ01DNDBNelUzTmpVZ01DNDNPRE14TlROYVRUQXVNelkwTURReklEQXVOemN6TVRFMFF6QXVNell6TkRJMElEQXVOemMzTkRreElEQXVNell5TVRJMElEQXVOemd4TlRJeklEQXVNell3TVRneElEQXVOemcxTVRFMlF6QXVNelU1TmpFMklEQXVOemcwT0RRMUlEQXVNelU1TURVMElEQXVOemcwTlRjMElEQXVNelU0TkRrM0lEQXVOemcwTXpBMFF6QXVNelF6T1RZMklEQXVOemMzTWpZMklEQXVNek14T1RZeElEQXVOemN3TlRBeUlEQXVNekl5TnpjZ01DNDNOalE1TURWRE1DNHpNekV3TWpnZ01DNDNOalkzTkNBd0xqTTBNVEEzTlNBd0xqYzJPRGcwTlNBd0xqTTFNalUzTmlBd0xqYzNNVEF4TjBNd0xqTTFOakkxTWlBd0xqYzNNVGN4TVNBd0xqTTJNREEzT0NBd0xqYzNNalF4TXlBd0xqTTJOREEwTXlBd0xqYzNNekV4TkZwTk1DNDFPREUwT1RjZ01DNDNOelV3TXpsRE1DNDFOemsxTkRZZ01DNDNOVFF5TXpZZ01DNDFOelV3TVRZZ01DNDNNek15TnpZZ01DNDFOamM1T1RNZ01DNDNNVEkyTkRsRE1DNDFPRGN5TlRrZ01DNDNNRFl4TlRnZ01DNDJNRFkwTURjZ01DNDJPVGczTlRFZ01DNDJNalE1TnpjZ01DNDJPVEF5T1RkRE1DNDJNekkwT0RNZ01DNDNNVFV3TWpJZ01DNDJNelk1TmpFZ01DNDNOREF5TVRFZ01DNDJNemd6TkNBd0xqYzJOVEkyTTB3d0xqWXpOell5T1NBd0xqYzJOVFF6TjBNd0xqWXhPVFF3TXlBd0xqYzJPVGczTkNBd0xqWXdNRFUxTVNBd0xqYzNNams1SURBdU5UZ3hORGszSURBdU56YzFNRE01V2swd0xqY3dOREkwTnlBd0xqYzBNVEExTVVNd0xqWTROall5SURBdU56VXdNak0ySURBdU5qWTNOVEU1SURBdU56VTNOREF5SURBdU5qUTNORGs1SURBdU56WXlPRGcxUXpBdU5qUTFPVEkwSURBdU56TTNNamMxSURBdU5qUXhNakE1SURBdU56RXhOVFl6SURBdU5qTXpORFF4SURBdU5qZzJNelV4UXpBdU5qVXhNVGsxSURBdU5qYzNPRGMxSURBdU5qWTRNelEwSURBdU5qWTROREEwSURBdU5qZzBORGN6SURBdU5qVTNPREU1UXpBdU5qazBNemN4SURBdU5qZzFNamc0SURBdU56QXdPVGt4SURBdU56RXpNalEwSURBdU56QTBNalEzSURBdU56UXhNRFV4V2swd0xqY3hOREUwT0NBd0xqYzBOakkxTVVNd0xqY3hOakF4TmlBd0xqYzJORGt5TlNBd0xqY3hOalF3TWlBd0xqYzRNelV5T0NBd0xqY3hOVEkzTXlBd0xqZ3dNVGczTmtNd0xqY3pNek15T0NBd0xqYzRPRGszTmlBd0xqYzFNREUzT0NBd0xqYzNORFE1TmlBd0xqYzJOVFl5SURBdU56VTROak01UXpBdU56WTFORFV5SURBdU56UXlOVEUxSURBdU56WTBNeklnTUM0M01qWXpNek1nTUM0M05qSXlNelVnTUM0M01UQXhPRE5ETUM0M05EZ3dNellnTUM0M01qUTFOVFlnTUM0M016RTRNRGtnTUM0M016WTBOVGNnTUM0M01UUXhORGdnTUM0M05EWXlOVEZhVFRBdU56WXdOVFU1SURBdU5qazRORGt6UXpBdU56UTJPREF5SURBdU56RXpOVFUzSURBdU56TXdOelExSURBdU56STJNREUzSURBdU56RXpNREEzSURBdU56TTJNalE0UXpBdU56QTVOREV6SURBdU56QTRNakUwSURBdU56QXlORGsySURBdU5qZ3dNRGt4SURBdU5qa3lNell5SURBdU5qVXlORGsxUXpBdU56QTVNREV5SURBdU5qUXdPVE01SURBdU56STBORFV4SURBdU5qSTRNVEl4SURBdU56TTRNVGt4SURBdU5qRXpPVEEyUXpBdU56UTROVGd5SURBdU5qUXhOaUF3TGpjMU5qQTFPQ0F3TGpZMk9UazJNaUF3TGpjMk1EVTFPU0F3TGpZNU9EUTVNMXBOTUM0M056QXpOemNnTUM0M01ERTBNRGhETUM0M056STNNVFVnTUM0M01UY3lORGdnTUM0M056UXhOVFlnTUM0M016TXhNelFnTUM0M056UTJPVEVnTUM0M05EZzVPRGRETUM0M09EWXpNVGdnTUM0M016WXhOallnTUM0M09UY3dOakVnTUM0M01qSTFNamNnTUM0NE1EWTRNakVnTUM0M01EZ3hOamRETUM0NE1EWTFOamdnTUM0Mk9USXpNVFFnTUM0NE1EVTBOU0F3TGpZM05qUTFOQ0F3TGpnd016UTNOU0F3TGpZMk1EWTJNME13TGpjNU16WTNNaUF3TGpZM016Y3pNeUF3TGpjNE1qWTROaUF3TGpZNE56TXlOU0F3TGpjM01ETTNOeUF3TGpjd01UUXdPRnBOTUM0NE1ERTJNelVnTUM0Mk5EYzFOVU13TGpjNU1Ua3hNeUF3TGpZMk1Ea3pOaUF3TGpjNE1Ea3dOaUF3TGpZM05Ea3lNeUF3TGpjMk9EUTBOU0F3TGpZNE9UUTNOa013TGpjMk16UTVOU0F3TGpZMk1UUXdNeUF3TGpjMU5UY3lPU0F3TGpZek16VTBOQ0F3TGpjME5USXdPQ0F3TGpZd05qTTFOa013TGpjME5UYzRJREF1TmpBMU56RTBJREF1TnpRMk16VWdNQzQyTURVd055QXdMamMwTmpreE5pQXdMall3TkRReU5FTXdMamMxT1RJNE5DQXdMalU1TURJNE9TQXdMamMzTURFNU55QXdMalUzTmpRek9DQXdMamMzT1RneE9TQXdMalUyTWprME1rTXdMamM0T1RnNU1TQXdMalU1TURVME55QXdMamM1TnpFM09DQXdMall4T0Rrd01TQXdMamd3TVRZek5TQXdMalkwTnpVMVdrMHdMamd4TVRNMk15QXdMalkwT1Rrd04wTXdMamd4TXpVME1pQXdMalkyTkRjeU1pQXdMamd4TkRrNElEQXVOamM1TmpFeElEQXVPREUxTmpjeUlEQXVOamswTlRFelF6QXVPREkwTURVMUlEQXVOamd3T1RNMklEQXVPRE14TlRnMklEQXVOalkyTnpjM0lEQXVPRE00TVRreUlEQXVOalV5TVRFeFF6QXVPRE0zTXpRM0lEQXVOak01T0RVeElEQXVPRE0yTURFeklEQXVOakkzTmpFMklEQXVPRE0wTVRreUlEQXVOakUxTkRNM1F6QXVPREkzTlRBNUlEQXVOakkyTkRRMElEQXVPREU1T1RNNElEQXVOak0zT1RReklEQXVPREV4TXpZeklEQXVOalE1T1RBM1drMHdMamd6TVRnek9TQXdMall3TVRJeFF6QXVPREkxTXpNM0lEQXVOakV5TlRBMElEQXVPREUzT0RVeklEQXVOakkwTXpnMklEQXVPREE1TWpRMElEQXVOak0yT0RJMFF6QXVPREEwTWpVMElEQXVOakE0TmpReUlEQXVOemsyTlRjMUlEQXVOVGd3TnpreklEQXVOemcyTWpVeUlEQXVOVFV6TmprMFF6QXVOemswTmpneUlEQXVOVFF4TWpZZ01DNDRNREl3TWpJZ01DNDFNamt4TlNBd0xqZ3dPRFF3TkNBd0xqVXhOelF5UXpBdU9ERTRPRFUzSURBdU5UUTBOekF5SURBdU9ESTJOamd5SURBdU5UY3lOelk0SURBdU9ETXhPRE01SURBdU5qQXhNakZhVFRBdU9EUXhOVFE1SURBdU5qQXlPRGswUXpBdU9EUXpNek15SURBdU5qRXpNVE0wSURBdU9EUTBOemMxSURBdU5qSXpORElnTUM0NE5EVTROemtnTUM0Mk16TTNNelZETUM0NE5USXhNRGNnTUM0Mk1UYzJNelVnTUM0NE5UY3lORFFnTUM0Mk1EQTVPVElnTUM0NE5qRXhPVGdnTUM0MU9ETTRPVFpETUM0NE5qQTBPVGdnTUM0MU56ZzROamtnTUM0NE5UazNNVGtnTUM0MU56TTROVElnTUM0NE5UZzROVGtnTUM0MU5qZzRORGhETUM0NE5UUXdOVFlnTUM0MU56azFNek1nTUM0NE5EZ3pOREVnTUM0MU9UQTRPVFFnTUM0NE5ERTFORGtnTUM0Mk1ESTRPVFJhVFRBdU9EVTFOelU0SURBdU5UVXlORGsxUXpBdU9EVXhNalkySURBdU5UWXpOalEwSURBdU9EUTFOekExSURBdU5UYzFOamt6SURBdU9ETTRPRE0wSURBdU5UZzROVGt4UXpBdU9ETXpNRGs1SURBdU5UWXdOekU1SURBdU9ESTBPRFFnTUM0MU16TXlOVFVnTUM0NE1UUXdPVFFnTUM0MU1EWTFOekZETUM0NE1qQTJNekVnTUM0ME9UTTJNakVnTUM0NE1qWXdNRFFnTUM0ME9ERXhOemNnTUM0NE16QTBNRE1nTUM0ME5qa3pNak5ETUM0NE5ERTBNVEVnTUM0ME9UWXpNRGdnTUM0NE5EazROek1nTUM0MU1qUXhOaUF3TGpnMU5UYzFPQ0F3TGpVMU1qUTVOVnBOTUM0NE5qVXpPVFFnTUM0MU5UTXpORGxETUM0NE5qVTJPRGtnTUM0MU5UUTRNVElnTUM0NE5qVTVOemdnTUM0MU5UWXlOellnTUM0NE5qWXlOVGtnTUM0MU5UYzNOREpETUM0NE5qWTRNRGtnTUM0MU5UUXlNeUF3TGpnMk56TXdPQ0F3TGpVMU1EY3dNaUF3TGpnMk56YzFPQ0F3TGpVME56RTFPRU13TGpnMk56QXdOaUF3TGpVME9URTVNU0F3TGpnMk5qSXhPQ0F3TGpVMU1USTFOU0F3TGpnMk5UTTVOQ0F3TGpVMU16TTBPVnBOTUM0NE56QTNNVFFnTUM0MU1ETXhOVFpETUM0NE5qazJNamtnTUM0MU1EZzNNelVnTUM0NE5qZ3lNaUF3TGpVeE5EZ3dOaUF3TGpnMk5qUXdNaUF3TGpVeU1UTTFNVU13TGpnMk5UQTJOaUF3TGpVeU5qRTJNU0F3TGpnMk16VXdPU0F3TGpVek1USXlPQ0F3TGpnMk1UWTVOaUF3TGpVek5qVTBOVU13TGpnMU5URTFPU0F3TGpVd09URTFOQ0F3TGpnME5qSXpOU0F3TGpRNE1qSTNJREF1T0RNME9UVTBJREF1TkRVMk1qSTVRekF1T0RNNU5ERTJJREF1TkRReU5EWWdNQzQ0TkRJMU5qSWdNQzQwTWprMU9UY2dNQzQ0TkRRM01qWWdNQzQwTVRjM09EUkRNQzQ0TlRVek5qSWdNQzQwTkRFek5qRWdNQzQ0TmpNNU9UY2dNQzQwTmpVM05EZ2dNQzQ0TnpBMk1USWdNQzQwT1RBMk9ESkRNQzQ0TnpBMk9EZ2dNQzQwT1RNM09EUWdNQzQ0TnpBM01qY2dNQzQwT1RZNE9UWWdNQzQ0TnpBM01qY2dNQzQxTURBd01UZERNQzQ0TnpBM01qY2dNQzQxTURFd05qUWdNQzQ0TnpBM01qSWdNQzQxTURJeE1URWdNQzQ0TnpBM01UUWdNQzQxTURNeE5UWmFUVEF1TlRjeU1qVTFJREF1TnpjMU9UVkRNQzQxTlRNeE1EVWdNQzQzTnpjMk5qVWdNQzQxTXpNNE1qSWdNQzQzTnpnek5TQXdMalV4TkRnek1TQXdMamMzT0RJMk0wTXdMalV4TWpreUlEQXVOell5TmpZeUlEQXVOVEE1TURReklEQXVOelEyT0RZMElEQXVOVEF6TWpjNUlEQXVOek14TWpReFF6QXVOVEl4TmpnNUlEQXVOekkyTnpjMElEQXVOVFF3TkRjNElEQXVOekl4TlRnZ01DNDFOVGt5TWpFZ01DNDNNVFUxTkVNd0xqVTJOakF5TmlBd0xqY3pOVFUwTkNBd0xqVTNNRE01TVNBd0xqYzFOVGcwTVNBd0xqVTNNakkxTlNBd0xqYzNOVGsxV2swd0xqVXdOVFExSURBdU56YzRNVFU0UXpBdU5UQXpOVFU1SURBdU56WXpNelF4SURBdU5EazVPREEzSURBdU56UTRNams1SURBdU5EazBNak0xSURBdU56TXpNemcyUXpBdU5EZzNNVGN5SURBdU56TTFNREl4SURBdU5EZ3dNVGMySURBdU56TTJOVFV4SURBdU5EY3pNamN4SURBdU56TTNPVGd6UXpBdU5EVTVPVFEzSURBdU56UXdOelExSURBdU5EUTJPVFF4SURBdU56UXpNVFEwSURBdU5ETTBOREkxSURBdU56UTFNakk0UXpBdU5ETTROalF6SURBdU56VTFNRGt4SURBdU5EUXhOelV6SURBdU56WTBPVFUySURBdU5EUXpOamsxSURBdU56YzBOakU1UXpBdU5EVTJOelE0SURBdU56YzFPRFVnTUM0ME56QXlPRFlnTUM0M056WTRNemdnTUM0ME9EUXhNamtnTUM0M056YzBOelJETUM0ME9URXhOamdnTUM0M056YzNPVGdnTUM0ME9UZ3lPRE1nTUM0M056Z3dNekVnTUM0MU1EVTBOU0F3TGpjM09ERTFPRnBOTUM0ME16UXdNVFlnTUM0M056TTJOVFJETUM0ME16TTBORElnTUM0M056RXhNRFlnTUM0ME16STNPQ0F3TGpjMk9EVXpOU0F3TGpRek1qQXlPU0F3TGpjMk5UazBNME13TGpRek1ERTVOQ0F3TGpjMU9UWXdOQ0F3TGpReU56ZzBJREF1TnpVek1UZzJJREF1TkRJME9UZ2dNQzQzTkRZM05UWkRNQzQwTURVNE9UY2dNQzQzTkRrM05UWWdNQzR6T0RneE1EVWdNQzQzTlRJd01Ua2dNQzR6TnpJeU5TQXdMamMxTXpjeU4wTXdMak0zTXpFd015QXdMamMxTnpZMk9DQXdMak0zTXpVNUlEQXVOell4TlRZNElEQXVNemN6TnlBd0xqYzJOVE0zTjBNd0xqTTVNVFkwTVNBd0xqYzJPRFF3TWlBd0xqUXhNakEwT1NBd0xqYzNNVE0wTlNBd0xqUXpOREF4TmlBd0xqYzNNelkxTkZwTk1DNHpOalF6TlRFZ01DNDNOak0zTlRWRE1DNHpOalF4TlRRZ01DNDNOakE0TXlBd0xqTTJNelk1TmlBd0xqYzFOemdnTUM0ek5qSTVOamNnTUM0M05UUTJPRGRETUM0ek5UZzFNeklnTUM0M05UVXhNallnTUM0ek5UUXlOemNnTUM0M05UVTFNakVnTUM0ek5UQXlNVGdnTUM0M05UVTROelJETUM0ek5ETTBNakVnTUM0M05UWTBOamNnTUM0ek16Y3hOekVnTUM0M05UWTVORFlnTUM0ek16RTFORFVnTUM0M05UY3pNekpETUM0ek16Z3lOU0F3TGpjMU9EYzJOeUF3TGpNME5UZzNPQ0F3TGpjMk1ETXlJREF1TXpVME1qazJJREF1TnpZeE9URkRNQzR6TlRjMU16UWdNQzQzTmpJMU1qRWdNQzR6TmpBNE9EZ2dNQzQzTmpNeE16Z2dNQzR6TmpRek5URWdNQzQzTmpNM05UVmFUVEF1TlRZME9EWTFJREF1TnpBek9USXhRekF1TlRnME1qZzVJREF1TmprM016Z3pJREF1TmpBek5UTTRJREF1TmpnNU9USWdNQzQyTWpJeE5ERWdNQzQyT0RFME1EUkRNQzQyTVRFek56VWdNQzQyTkRreU1qWWdNQzQxT1RVME5EY2dNQzQyTVRjNU5qVWdNQzQxTnpRMU1UVWdNQzQxT0RnNU5qWkRNQzQxTlRjME56TWdNQzQyTURJME1UTWdNQzQxTkRBd056Z2dNQzQyTVRVeU9Ua2dNQzQxTWpJM016TWdNQzQyTWpjMU16SkRNQzQxTkRBM09EY2dNQzQyTlRFMk1UUWdNQzQxTlRRNE9UTWdNQzQyTnpjME16RWdNQzQxTmpRNE5qVWdNQzQzTURNNU1qRmFUVEF1TlRneE56VTNJREF1TlRnek1UazVRekF1TmpBek1URTJJREF1TmpFeU56TXlJREF1TmpFNU5EVWdNQzQyTkRRMk1ERWdNQzQyTXpBMU5qVWdNQzQyTnpjME5UTkRNQzQyTkRneU1qY2dNQzQyTmpnNU5qY2dNQzQyTmpVeU1qWWdNQzQyTlRrME9USWdNQzQyT0RFeE5ETWdNQzQyTkRnNU1UUkRNQzQyTmpjME5qTWdNQzQyTVRNMk16RWdNQzQyTkRnek5EZ2dNQzQxTnpreU56UWdNQzQyTWpNNU9ESWdNQzQxTkRjeU1EVkRNQzQyTVRBek56VWdNQzQxTlRrMU5qVWdNQzQxT1RZeU1UWWdNQzQxTnpFMU9ESWdNQzQxT0RFM05UY2dNQzQxT0RNeE9UbGFUVEF1TnpReE16UTNJREF1TlRrMk56QTNRekF1TnpVME5EZzFJREF1TlRneE5UYzRJREF1TnpZMU9URTJJREF1TlRZMk9EQXpJREF1TnpjMU9EVXhJREF1TlRVeU5EY3pRekF1TnpZeE1EVWdNQzQxTVRRNE16TWdNQzQzTkRFd01EY2dNQzQwTnpnM01UWWdNQzQzTVRVNE5ESWdNQzQwTkRVeU9UZERNQzQzTURVek16WWdNQzQwTlRrM01URWdNQzQyT1RNek9DQXdMalEzTkRjNE5TQXdMalkzT1RjNElEQXVORGt3TkRjMVF6QXVOekExTXprNElEQXVOVEl6TnpJMElEQXVOekkxT1RjeklEQXVOVFU1TlRNZ01DNDNOREV6TkRjZ01DNDFPVFkzTURkYVRUQXVOemd5TVRFZ01DNDFORE15TURoRE1DNDNPVEExTURVZ01DNDFNekEwTkRjZ01DNDNPVGMzTVRrZ01DNDFNVGd3TmpVZ01DNDRNRE01TURrZ01DNDFNRFl4TWpsRE1DNDNPRGc0TVRNZ01DNDBOamsxT1RVZ01DNDNOamc1TXpVZ01DNDBNelExT1RNZ01DNDNORFF6TnlBd0xqUXdNakV5TmtNd0xqY3pOemN5SURBdU5ERXpNelk1SURBdU56TXdNVE0xSURBdU5ESTFNVFF4SURBdU56SXhORGt4SURBdU5ETTNOREUxUXpBdU56UTJOalUxSURBdU5EY3dOREV4SURBdU56WTJPVEF4SURBdU5UQTJNRFF6SURBdU56Z3lNVEVnTUM0MU5ETXlNRGhhVFRBdU56UTVNemtnTUM0ek9UTTBNME13TGpjM016ZzFJREF1TkRJMU1qSXhJREF1Tnprek9EWTNJREF1TkRVNU5EVTJJREF1T0RBNU16UTVJREF1TkRrMU1qRTFRekF1T0RFMU9EQTFJREF1TkRneE56RTJJREF1T0RJd09UVTBJREF1TkRZNE9EUXlJREF1T0RJMU1ETTVJREF1TkRVMk5qazNRekF1T0RBNU9ESTJJREF1TkRJeU1qZ3lJREF1Tnprd016azBJREF1TXpnNU5EQTBJREF1TnpZMk9ERTFJREF1TXpVNE9EZ3lRekF1TnpZeU1EQTBJREF1TXpZNU56QTRJREF1TnpVMk1qVTBJREF1TXpneE1qTTJJREF1TnpRNU16a2dNQzR6T1RNME0xcE5NQzQ0TXpZeE56Y2dNQzQwTVRJNU1EbERNQzQ0TXpZM05qUWdNQzQwTURrME5qa2dNQzQ0TXpjeU5qVWdNQzQwTURZeE1qa2dNQzQ0TXpjMk9Ea2dNQzQwTURJNE9UTkRNQzQ0TWpJMk16UWdNQzR6TnpJME5URWdNQzQ0TURReE5EZ2dNQzR6TkRNME9Ua2dNQzQzT0RJeU56UWdNQzR6TVRZMk16UkRNQzQzTnprME56UWdNQzR6TWpZMU1UVWdNQzQzTnpVM09USWdNQzR6TXpjek55QXdMamMzTURrM015QXdMak0wT1RFME5VTXdMamM1TkRJek15QXdMak0zT0RVNU5TQXdMamd4TXpZMU5pQXdMalF4TURJMU9TQXdMamd5T1RFNElEQXVORFF6TkRFMFF6QXVPRE15TXpBeElEQXVORE15TlRReElEQXVPRE0wTlRZMklEQXVOREl5TXpRMElEQXVPRE0yTVRjM0lEQXVOREV5T1RBNVdrMHdMamcyTnpFNE1pQXdMalEwT0RVME1VTXdMamcyTVRNNU5TQXdMalF6TWpRMk5TQXdMamcxTkRjME5DQXdMalF4TmpZNE15QXdMamcwTnpJek15QXdMalF3TVRJMk9FTXdMamcwT0RNMUlEQXVNemt4T1RReUlEQXVPRFE0T0RVeUlEQXVNemd6TkRjeUlEQXVPRFE0T1RZZ01DNHpOelU1TlRKRE1DNDRORGsxTURnZ01DNHpOemN3TWpnZ01DNDROVEF3TlRFZ01DNHpOemd4TURVZ01DNDROVEExT1NBd0xqTTNPVEU0TlVNd0xqZzFPREkxTWlBd0xqUXdNVFF5TWlBd0xqZzJNemcxT1NBd0xqUXlORFl4TmlBd0xqZzJOekU0TWlBd0xqUTBPRFUwTVZwTk1DNDRNemt4TmpZZ01DNHpOVGhNTUM0NE16a3hORE1nTUM0ek5UYzNNREpETUM0NE1qUTROVFVnTUM0ek16STFNemtnTUM0NE1EZ3dPREVnTUM0ek1EZzJNVGtnTUM0M09EZzRORFFnTUM0eU9EWXpNRGhETUM0M09EZ3dNRElnTUM0eU9USXhNRGtnTUM0M09EWTRNVEVnTUM0eU9UZzFNelVnTUM0M09EVXhOVE1nTUM0ek1EVTFOVGhETUM0NE1EWXhOekVnTUM0ek16QTJNVE1nTUM0NE1qUXlNemtnTUM0ek5UYzFNU0F3TGpnek9UTXlOQ0F3TGpNNE5UYzJPVU13TGpnek9UazNPQ0F3TGpNM05EY3lOQ0F3TGpnek9UY3pOQ0F3TGpNMk5UTTROaUF3TGpnek9URTJOaUF3TGpNMU9GcE5NQzQyT0RnNU5qTWdNQzQyTkRNMU5qWkRNQzQzTURVMk16RWdNQzQyTXpFNE16RWdNQzQzTWpBNU56VWdNQzQyTVRnNE1EZ2dNQzQzTXpRME9ERWdNQzQyTURRek5UWkRNQzQzTVRrME56VWdNQzQxTmpjd01EY2dNQzQyT1RreE1UY2dNQzQxTXpBNU9UUWdNQzQyTnpNMU5USWdNQzQwT1RjMU5UbERNQzQyTmpBek1ESWdNQzQxTVRJek9ESWdNQzQyTkRVNU16Y2dNQzQxTWpZNE5qVWdNQzQyTXpBNE1UVWdNQzQxTkRBNU1qWkRNQzQyTlRVME5EZ2dNQzQxTnpNeU5DQXdMalkzTkRrd055QXdMall3Tnprd01pQXdMalk0T0RrMk15QXdMalkwTXpVMk5scE5NQzQxTVRVeE5qSWdNQzQyTXpJNE16TkRNQzQxTXpJM05DQXdMalkxTmpJd09TQXdMalUwTmpReU5TQXdMalk0TVRJd09TQXdMalUxTmpBNE9TQXdMamN3TmpneFF6QXVOVE0zTXpBeElEQXVOekV5T0RVMUlEQXVOVEU0TkRFM0lEQXVOekU0TURVM0lEQXVORGs1T0RZeUlEQXVOekl5TlRNeVF6QXVORGt4TmpVNUlEQXVOekF5T0RBM0lEQXVORGd3TkRReElEQXVOamd6TkRjNElEQXVORFkyTXpZNUlEQXVOalkxTXpBNFF6QXVORGd5TXpBeUlEQXVOalUxTVRRZ01DNDBPVGcyT0RJZ01DNDJORFF5T0RnZ01DNDFNVFV4TmpJZ01DNDJNekk0TXpOYVRUQXVORFU0TlRRZ01DNDJOekF5TnpKRE1DNDBOekl3T1RVZ01DNDJPRGMyTWlBd0xqUTRNamcyTlNBd0xqY3dOVGs1SURBdU5Ea3dOelkySURBdU56STBOamMwUXpBdU5EZzBNalV4SURBdU56STJNVGN5SURBdU5EYzNOemcySURBdU56STNOVGd4SURBdU5EY3hNemtnTUM0M01qZzVNRGhETUM0ME5UY3pNREVnTUM0M016RTRNamdnTUM0ME5ETTFOeUF3TGpjek5ETTBJREF1TkRNd05EQXhJREF1TnpNMk5EazVRekF1TkRJME5EUTVJREF1TnpJME5EWXhJREF1TkRFMk9EWTJJREF1TnpFeU5URTJJREF1TkRBM056VTRJREF1TnpBeE1ETTJRekF1TkRFNE1EZ3pJREF1TmprMU1ESWdNQzQwTWpnNE56SWdNQzQyT0RnMU9UUWdNQzQwTXprNU9UTWdNQzQyT0RFM09EaERNQzQwTkRZd09ERWdNQzQyTnpnd05qTWdNQzQwTlRJeU56RWdNQzQyTnpReU1qSWdNQzQwTlRnMU5DQXdMalkzTURJM01scE5NQzR6T1RrMk5Ea2dNQzQzTURVM016SkRNQzQwTURnd09EY2dNQzQzTVRZeU1qZ2dNQzQwTVRVeE5UZ2dNQzQzTWpjeE1ETWdNQzQwTWpBM09URWdNQzQzTXpnd01qbERNQzQwTURJeU9DQXdMamMwTURnNE9DQXdMak00TlRBek9DQXdMamMwTXpBME9TQXdMak0yT1RZM055QXdMamMwTkRZNE1VTXdMak0yTnpZeE1TQXdMamN6T0RneE55QXdMak0yTkRjM015QXdMamN6TWprME9DQXdMak0yTVRJd05TQXdMamN5TnpJek4wTXdMak0zTWpnME1TQXdMamN5TURreE5pQXdMak00TlRjM0lEQXVOekV6TnpJeElEQXVNems1TmpRNUlEQXVOekExTnpNeVdrMHdMak0xTXpBek1TQXdMamN6TVRZME9VTXdMak0xTlRrMklEQXVOek0yTWpjZ01DNHpOVGd6TkNBd0xqYzBNRGszTlNBd0xqTTJNREUxTkNBd0xqYzBOVFkxUXpBdU16VTJORE01SURBdU56UTJNREV5SURBdU16VXlPRFUxSURBdU56UTJNelF4SURBdU16UTVOREV6SURBdU56UTJOalF4UXpBdU16TTRNREEwSURBdU56UTNOak0xSURBdU16STRNVFUxSURBdU56UTRNekEzSURBdU16SXdNalF5SURBdU56UTROelU0UXpBdU16STJNRGt4SURBdU56UTFOemszSURBdU16TXpNVEE0SURBdU56UXlNVGt4SURBdU16UXhNVEV4SURBdU56TTNPVGd4UXpBdU16UTBPRGN6SURBdU56TTJNREF5SURBdU16UTRPRFV5SURBdU56TXpPRGtnTUM0ek5UTXdNekVnTUM0M016RTJORGxhVFRBdU5URTNNRFl6SURBdU5qSXdNVGc1UXpBdU5UTTBORGMxSURBdU5qQTNPVEUzSURBdU5UVXhPVEl5SURBdU5UazBPVGsxSURBdU5UWTRPVGt4SURBdU5UZ3hOVEU1UXpBdU5UVXlPVFkxSURBdU5UWXdORGtnTUM0MU16UXlOREVnTUM0MU5EQTNORFlnTUM0MU1USTRPREVnTUM0MU1qSTRNak5ETUM0MU1ESTNPRGtnTUM0MU1UUXpOVFVnTUM0ME9USXpPVGtnTUM0MU1EWTFNemNnTUM0ME9ERTNOamdnTUM0ME9Ua3pOalZETUM0ME5qa3pOamtnTUM0MU1UWTJNREVnTUM0ME5UWTJPQ0F3TGpVek5EUXlNeUF3TGpRME5EQTFPU0F3TGpVMU1qSTNOME13TGpRMU1qazFPU0F3TGpVMU9ETTROU0F3TGpRMk1UWTNNeUF3TGpVMk5EazVPU0F3TGpRM01ERTFOeUF3TGpVM01qRXhPRU13TGpRNE56YzVNaUF3TGpVNE5qa3hOaUF3TGpVd016UTFNU0F3TGpZd016QTNNaUF3TGpVeE56QTJNeUF3TGpZeU1ERTRPVnBOTUM0MU56WXlNamNnTUM0MU56VTNOVFJETUM0MU5UazRNRGtnTUM0MU5UUXlNaUF3TGpVME1EWTFNeUF3TGpVek5EQXlPQ0F3TGpVeE9EZ3pPU0F3TGpVeE5UY3lNME13TGpVd09EVTNPQ0F3TGpVd056RXhNeUF3TGpRNU9EQXdOeUF3TGpRNU9URTFOU0F3TGpRNE56RTROU0F3TGpRNU1UZzBOa013TGpRNU9ESTNPQ0F3TGpRM05qUTNOQ0F3TGpVd09UQTVNU0F3TGpRMk1UWTBOQ0F3TGpVeE9UTTJJREF1TkRRM056WTBRekF1TlRNeE16YzNJREF1TkRVMk1ERTFJREF1TlRRek1UVXpJREF1TkRZME9UVTBJREF1TlRVME5qSTJJREF1TkRjME5UZ3hRekF1TlRjNE5qQTBJREF1TkRrME56QXhJREF1TlRrNU9EUTJJREF1TlRFMk5qUWdNQzQyTVRneU9ERWdNQzQxTXprNE5qUkRNQzQyTURRM05EZ2dNQzQxTlRJeE56Z2dNQzQxT1RBMk5EVWdNQzQxTmpReE5qRWdNQzQxTnpZeU1qY2dNQzQxTnpVM05UUmFUVEF1TmpZM056VTBJREF1TkRrd01UTTBRekF1TmpRNE16azFJREF1TkRZMU9EUTNJREF1TmpJMk1qTWdNQzQwTkRNd01EUWdNQzQyTURFek1UWWdNQzQwTWpJd09UbERNQzQxT0RnME56TWdNQzQwTVRFek1qTWdNQzQxTnpVeU5TQXdMalF3TVRNMU5TQXdMalUyTVRjeE5TQXdMak01TWpFNU1rTXdMalUxTURrME5pQXdMalF3TlRjeElEQXVOVE00TkRVeUlEQXVOREl5TURnMUlEQXVOVEkwT0RneElEQXVORFF3TXpJeVF6QXVOVE0zTURVMklEQXVORFE0TmpnNUlEQXVOVFE0T1RjM0lEQXVORFUzTnpReUlEQXVOVFl3TlRnMElEQXVORFkzTkRneFF6QXVOVGcwT0RJNElEQXVORGczT0RJMUlEQXVOakEyTXpZMElEQXVOVEV3TURRZ01DNDJNalV3T1RrZ01DNDFNek0xT0RaRE1DNDJOREF5TWprZ01DNDFNVGswT0RjZ01DNDJOVFExTnpFZ01DNDFNRFE1TnpRZ01DNDJOamMzTlRRZ01DNDBPVEF4TXpSYVRUQXVOamN6T1RRMElEQXVORGd6TURVMFF6QXVOalUwTkRRNUlEQXVORFU0TnpZeklEQXVOak15TWpBMElEQXVORE0xT1RFNElEQXVOakEzTWpjMElEQXVOREUwT1RrNVF6QXVOVGswTXpnNUlEQXVOREEwTVRnNElEQXVOVGd4TVRJeklEQXVNemswTVRjeUlEQXVOVFkzTlRReElEQXVNemcwT1RWRE1DNDFPREF3TkRVZ01DNHpOamsxTkRjZ01DNDFPVEkzTnpJZ01DNHpOVFExTURFZ01DNDJNRFV6TXpFZ01DNHpOREF3T1RGRE1DNDJNVGd5TVRNZ01DNHpORGc0TmpNZ01DNDJNekEzT0RrZ01DNHpOVGd6TnpFZ01DNDJORE13TURJZ01DNHpOamcyTVRoRE1DNDJOamd4TlRnZ01DNHpPRGszTWpjZ01DNDJPVEEwT1NBd0xqUXhNamc1T1NBd0xqY3dPVGswT0NBd0xqUXpOell6T1VNd0xqWTVPVFV4T0NBd0xqUTFNakE0TmlBd0xqWTROelU0TnlBd0xqUTJOekkwSURBdU5qY3pPVFEwSURBdU5EZ3pNRFUwV2swd0xqYzJNRE1nTUM0ek5UQTJNemxETUM0M05UVTJOVFVnTUM0ek5qRTBPVEVnTUM0M05UQXdNVGNnTUM0ek56TXhNemNnTUM0M05ETXhPRElnTUM0ek9EVTFNekZETUM0M01qTTFOVFlnTUM0ek5qRXdPVFFnTUM0M01ERXlOQ0F3TGpNek9ERTROU0F3TGpZM05qSTNOeUF3TGpNeE56SXpPVU13TGpZMk5qVTVOaUF3TGpNd09URXhOU0F3TGpZMU5qWTVNeUF3TGpNd01UUXpOU0F3TGpZME5qVTVOQ0F3TGpJNU5ERTVOa013TGpZMU5UWTFPQ0F3TGpJNE5EUXdOaUF3TGpZMk5ETTFOeUF3TGpJM05URTRPQ0F3TGpZM01qVXdPU0F3TGpJMk5qWTNNVU13TGpZNE1EUXlOQ0F3TGpJM01qVXlNaUF3TGpZNE9ESXhJREF1TWpjNE5qVXpJREF1TmprMU9EVXlJREF1TWpnMU1EWTJRekF1TnpFNU9ETXhJREF1TXpBMU1UZzNJREF1TnpReE16STFJREF1TXpJM01UYzBJREF1TnpZd015QXdMak0xTURZek9WcE5NQzQzTnpVd01pQXdMak13TnprME4wTXdMamMzTkRZeE1TQXdMak13T1RVek9TQXdMamMzTkRFM09DQXdMak14TVRFMk1pQXdMamMzTXpjeE9TQXdMak14TWpneE5VTXdMamMzTVRNME15QXdMak15TVRNMk9TQXdMamMyT0RJMk5pQXdMak16TURjek9TQXdMamMyTkRJNU55QXdMak0wTURnNE1rTXdMamMwTlRjMUlEQXVNekU0TkRNMElEQXVOekkwT1RFeElEQXVNamszTXpVeElEQXVOekF4T0RFZ01DNHlOemM1TmpaRE1DNDJPVFF6TXpFZ01DNHlOekUyT1RFZ01DNDJPRFkzTVRrZ01DNHlOalUyT0NBd0xqWTNPRGs0TkNBd0xqSTFPVGt6TTBNd0xqWTROamN5SURBdU1qVXhPVEUxSURBdU5qa3pPRGdnTUM0eU5EUTJNU0F3TGpjd01ESTNOeUF3TGpJek9ERTFOVU13TGpjd056TTVOQ0F3TGpJME16UTFOeUF3TGpjeE5ETTVOaUF3TGpJME9EazVOQ0F3TGpjeU1USTNOaUF3TGpJMU5EYzJOME13TGpjME1Ea3hOQ0F3TGpJM01USTBOU0F3TGpjMU9EZ3pOQ0F3TGpJNE9UQTBOU0F3TGpjM05UQXlJREF1TXpBM09UUTNXazB3TGpjNE1EWTBOaUF3TGpJM056QTJNa013TGpjNE1EQTNNaUF3TGpJNE1qYzRJREF1TnpjNU1URTVJREF1TWpnNU16WTFJREF1TnpjM05pQXdMakk1TmpjM09FTXdMamMyTWpJM05TQXdMakkzT1RRd055QXdMamMwTlRRNE15QXdMakkyTWprNElEQXVOekkzTWpNeklEQXVNalEzTmpZM1F6QXVOekl3TlRZZ01DNHlOREl3TmpjZ01DNDNNVE0zTnpNZ01DNHlNelkyT0RVZ01DNDNNRFk0T0RJZ01DNHlNekUxTWtNd0xqY3hNRGt6TXlBd0xqSXlOelEyTnlBd0xqY3hORFU0T1NBd0xqSXlNemcwTkNBd0xqY3hOemM0T1NBd0xqSXlNRFk1TWt3d0xqY3hPREUzTnlBd0xqSXlNRE14UXpBdU56STBOamcwSURBdU1qSTFNVGt6SURBdU56TXhNRGtnTUM0eU16QXlOemNnTUM0M016Y3pPU0F3TGpJek5UVTJNME13TGpjMU1qa3dNeUF3TGpJME9EVTRNU0F3TGpjMk56TXlOU0F3TGpJMk1qUTFJREF1Tnpnd05qUTJJREF1TWpjM01EWXlXazB3TGpjNU1ESXpOU0F3TGpJM016ZzBRekF1TnprNE16VXlJREF1TWpneU9UQXlJREF1T0RBMk1EVTVJREF1TWpreU1qTTJJREF1T0RFek16VTFJREF1TXpBeE9ERTNRekF1T0RBMk1qazVJREF1TWprd05qZzFJREF1TnprNE5qWTNJREF1TWpjNU9UVTFJREF1Tnprd05EazVJREF1TWpZNU5qWTVRekF1Tnprd05ETXpJREF1TWpjeElEQXVOemt3TXpRMUlEQXVNamN5TXpreElEQXVOemt3TWpNMUlEQXVNamN6T0RSYVRUQXVOemd4TXpVZ01DNHlOVGcxT1RGRE1DNDNPREUwTURnZ01DNHlOakF5TkRjZ01DNDNPREUwTXpRZ01DNHlOakl4TXpnZ01DNDNPREUwTURRZ01DNHlOalF5TmtNd0xqYzJPVFV6TkNBd0xqSTFNVGMwTmlBd0xqYzFOamcwTnlBd0xqSXpPVGM1TVNBd0xqYzBNek0wTnlBd0xqSXlPRFEyTTBNd0xqY3pOekk0TlNBd0xqSXlNek0zTmlBd0xqY3pNVEV5TmlBd0xqSXhPRFEzTXlBd0xqY3lORGczT0NBd0xqSXhNemMxTWtNd0xqY3lOak01TmlBd0xqSXhNakkzTlNBd0xqY3lOemN4SURBdU1qRXhNREF5SURBdU56STRPREEySURBdU1qQTVPVFExVERBdU56STVOelEySURBdU1qQTVNRE01UXpBdU56UTRORGs1SURBdU1qSXpPRFkzSURBdU56WTFOemcxSURBdU1qUXdORFk1SURBdU56Z3hNelVnTUM0eU5UZzFPVEZhVFRBdU56TTRNalU1SURBdU16azBNakkwUXpBdU56TXhOekEzSURBdU5EQTFOVEEwSURBdU56STBNVGM1SURBdU5ERTNNell5SURBdU56RTFOVE16SURBdU5ESTVOelkzUXpBdU5qazJNRGcySURBdU5EQTFNek16SURBdU5qY3pPRGM1SURBdU16Z3lOREk0SURBdU5qUTRPVFU1SURBdU16WXhOVEU1UXpBdU5qTTJPREEwSURBdU16VXhNekU1SURBdU5qSTBNamt6SURBdU16UXhPRE0zSURBdU5qRXhORGd4SURBdU16TXpNRFk1UXpBdU5qSXhNamdnTUM0ek1qRTVNemNnTUM0Mk16QTVNemNnTUM0ek1URXlNak1nTUM0Mk5EQXlOalFnTUM0ek1ERXdOak5ETUM0Mk5UQTBPVFVnTUM0ek1EZ3pOaUF3TGpZMk1EVXlNaUF3TGpNeE5qRXhPQ0F3TGpZM01ETXlJREF1TXpJME16TTVRekF1TmprMU56azFJREF1TXpRMU56RTFJREF1TnpFNE5EVTNJREF1TXpZNU1UY2dNQzQzTXpneU5Ua2dNQzR6T1RReU1qUmFUVEF1TlRBNU5EYzFJREF1TmpJMU5EazRRekF1TkRreU9UVTRJREF1TmpNMk9UY2dNQzQwTnpZMU1qWWdNQzQyTkRjNE5EUWdNQzQwTmpBMU16SWdNQzQyTlRnd016ZERNQzQwTlRBeE5pQXdMalkwTlRVMk1pQXdMalF6T0RRd015QXdMall6TXpjd05DQXdMalF5TlRNeE5pQXdMall5TWpjeU0wTXdMalF4T0Rnd05DQXdMall4TnpJMU9TQXdMalF4TWpFek5DQXdMall4TWpFMU5pQXdMalF3TlRNME1TQXdMall3TnpReE5rTXdMalF4TmpFNU5TQXdMalU1TVRnMk5TQXdMalF5TnpRd09DQXdMalUzTlRnM01pQXdMalF6T0RjeE55QXdMalUxT1RnME1VTXdMalEwTnpNNU5pQXdMalUyTlRjNU9TQXdMalExTlRrd05DQXdMalUzTWpJMU55QXdMalEyTkRFNU9TQXdMalUzT1RJeE9FTXdMalE0TVRJek55QXdMalU1TXpVeE5DQXdMalE1TmpNME5DQXdMall3T1RBMk5TQXdMalV3T1RRM05TQXdMall5TlRRNU9GcE5NQzQwTlRJMk5qRWdNQzQyTmpNd01qRkRNQzQwTkRJNE5TQXdMalkxTVRNMU5TQXdMalF6TVRjME1TQXdMalkwTURJeE15QXdMalF4T1RNMU9TQXdMall5T1RneU0wTXdMalF4TXpBME5pQXdMall5TkRVeU5pQXdMalF3TmpVNU9DQXdMall4T1RVNE9TQXdMalF3TURBME5pQXdMall4TlRBd09VTXdMak00T0RZNU9DQXdMall6TVRJNU15QXdMak0zTnpnd05DQXdMalkwTnpBd015QXdMak0yTnpZM05TQXdMalkyTVRZMlF6QXVNemN3TWpVMUlEQXVOall6TmpRNUlEQXVNemN5T0RFeUlEQXVOalkxTnpBMUlEQXVNemMxTXpReklEQXVOalkzT0RJNVF6QXVNemcxTURnMklEQXVOamMyTURBMUlEQXVNemt6T1RFeElEQXVOamcwTnpJM0lEQXVOREF4TnpZeklEQXVOamt6T0RBeFF6QXVOREV5TkRNMUlEQXVOamczTlRrMUlEQXVOREl6TmpFMklEQXVOamd3T1RRMElEQXVORE0xTVRVMklEQXVOamN6T0RnelF6QXVORFF3T1RBNUlEQXVOamN3TXpZeUlEQXVORFEyTnpVeElEQXVOalkyTnpRZ01DNDBOVEkyTmpFZ01DNDJOak13TWpGYVRUQXVNemt6TlRnMklEQXVOams0TlRJM1F6QXVNemcyTXpZMElEQXVOamt3TXpFM0lEQXVNemM0TWpnMElEQXVOamd5TXprMklEQXVNelk1TXpnMklEQXVOamMwT1RJNVF6QXVNelkzTURjM0lEQXVOamN5T1RreUlEQXVNelkwTnpRNElEQXVOamN4TVRFMUlEQXVNell5TkRBeElEQXVOalk1TWprM1F6QXVNelUwTVRVeklEQXVOamd4TWpRNElEQXVNelEyTkRjNUlEQXVOamt5TkRBeUlEQXVNek01TlRZeUlEQXVOekF5TkRjM1F6QXVNelExT0RJZ01DNDNNRGMzTlRZZ01DNHpOVEV5T0RNZ01DNDNNVE0xTWpZZ01DNHpOVFU0T1RnZ01DNDNNVGsxTnpKRE1DNHpOamN5T1RrZ01DNDNNVE16T0RjZ01DNHpOems1TnpRZ01DNDNNRFl6TkRZZ01DNHpPVE0xT0RZZ01DNDJPVGcxTWpkYVRUQXVNelEzTmpJM0lEQXVOekkwTURORE1DNHpORE00TURZZ01DNDNNVGt4T0RNZ01DNHpNemt6TlRRZ01DNDNNVFExTVRFZ01DNHpNelF5T1RFZ01DNDNNVEF4TmpGTU1DNHpNekkxTmpjZ01DNDNNVEkyTnpaRE1DNHpNalF5TlRRZ01DNDNNalE0TURZZ01DNHpNVGN6TkRNZ01DNDNNelE1TWpjZ01DNHpNVEl5TkRFZ01DNDNOREkwTVRKRE1DNHpNVGczTVRNZ01DNDNNemt4TmpNZ01DNHpNamN3TVRJZ01DNDNNelE1TWpVZ01DNHpNelkzT1RjZ01DNDNNamszTnpoRE1DNHpOREF5TWprZ01DNDNNamM1TnpNZ01DNHpORE00TkRRZ01DNDNNall3TlRZZ01DNHpORGMyTWpjZ01DNDNNalF3TTFvaUlHWnBiR3c5SWlNeE1VRTRRMFlpTHo0bUkzaGhPenhrWldaelBpWWplR0U3UEhKaFpHbGhiRWR5WVdScFpXNTBJR2xrUFNKd1lXbHVkREJmY21Ga2FXRnNJaUJqZUQwaU1DSWdZM2s5SWpBaUlISTlJakVpSUdkeVlXUnBaVzUwVlc1cGRITTlJblZ6WlhKVGNHRmpaVTl1VlhObElpQm5jbUZrYVdWdWRGUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREF1TlNBd0xqVXBJSEp2ZEdGMFpTZ3RORFVwSUhOallXeGxLREF1TnpBM01UQTNLU0krSmlONFlUczhjM1J2Y0NCdlptWnpaWFE5SWpBdU5UVTVNVGswSWlCemRHOXdMV052Ykc5eVBTSWpNREEyTkRnM0lpOCtKaU40WVRzOGMzUnZjQ0J2Wm1aelpYUTlJakF1TmprMk1ESTVJaUJ6ZEc5d0xXTnZiRzl5UFNJak1EQTBNell4SWk4K0ppTjRZVHM4TDNKaFpHbGhiRWR5WVdScFpXNTBQaVlqZUdFN1BDOWtaV1p6UGlZamVHRTdQQzl6ZG1jKzt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnNvdXJjZVByb2plY3Q9NTk1NTc7aXIuc3luY2hyb25pemVkPTE7aXIucmVmPTAzNWQ4NDQ3LWE4YzAtNDZkMi05ZDVjLTdkNzNjM2IxYjM5ZTsiIHBhcmVudD0iMiIgdmVydGV4PSIxIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMTA2My4wIiB5PSI3LjAiIHdpZHRoPSI5MC4wIiBoZWlnaHQ9IjkwLjAiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIyOCIgdmFsdWU9IkF1dGhlbnRpY2F0aW9uIiBzdHlsZT0iZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO2V4aXRYPTE7ZXhpdFk9MC41O2V4aXREeD0wO2V4aXREeT0wO3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yO2lyLnJlZj0yNGQ2ZGZhOC0xZjJmLTRjZjEtOTkwMS1hOGUwYjViMzYyN2E7aXIudGFncz1IVFRQUzsiIHBhcmVudD0iMiIgc291cmNlPSIxNyIgdGFyZ2V0PSIyNyIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHg9Ii0wLjA0MyIgeT0iMjkuMCIgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSI+CiAgICAgICAgPEFycmF5IGFzPSJwb2ludHMiPgogICAgICAgICAgPG14UG9pbnQgeD0iNzg0LjAiIHk9IjI3MC4wIi8+CiAgICAgICAgPC9BcnJheT4KICAgICAgICA8bXhQb2ludCBhcz0ib2Zmc2V0Ii8+CiAgICAgIDwvbXhHZW9tZXRyeT4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjAiIHZhbHVlPSJSZXNldCBQYXNzd29yZCIgc3R5bGU9ImlyLnJlZj00MTZlYmI1ZC1kNDUzLTRlOWQtOTI3Ni01YzRlNzUwMjk5M2Q7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Q0QtUkVTRVQtUEFTU1dPUkQ7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEcxaGMyc2dhV1E5SW0xaGMyc3dYekUxTURSZk1qTTJNemNpSUhOMGVXeGxQU0p0WVhOckxYUjVjR1U2WVd4d2FHRWlJRzFoYzJ0VmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaVBpWWplR0U3UEdOcGNtTnNaU0JqZUQwaU1DNDFJaUJqZVQwaU1DNDFJaUJ5UFNJd0xqVWlJR1pwYkd3OUltSnNZV05ySWk4K0ppTjRZVHM4TDIxaGMycytKaU40WVRzOFp5QnRZWE5yUFNKMWNtd29JMjFoYzJzd1h6RTFNRFJmTWpNMk16Y3BJajRtSTNoaE96eHdZWFJvSUdROUlrMHdMall4TnpjMElEQXVOREV3T1RVMlF6QXVOak0wTVRjZ01DNDBNVEE1TlRZZ01DNDJORGMwT1NBd0xqTTVOell6TnlBd0xqWTBOelE1SURBdU16Z3hNakEyUXpBdU5qUTNORGtnTUM0ek5qUTNOellnTUM0Mk16UXhOeUF3TGpNMU1UUTFOaUF3TGpZeE56YzBJREF1TXpVeE5EVTJRekF1TmpBeE16RWdNQzR6TlRFME5UWWdNQzQxT0RjNU9TQXdMak0yTkRjM05pQXdMalU0TnprNUlEQXVNemd4TWpBMlF6QXVOVGczT1RrZ01DNHpPVGMyTXpjZ01DNDJNREV6TVNBd0xqUXhNRGsxTmlBd0xqWXhOemMwSURBdU5ERXdPVFUyV2swd0xqUXdPVFE1TVNBd0xqUXlOVGd6TVVNd0xqUXdPVFE1TVNBd0xqTXpORE14TmlBd0xqUTRNVFl3TVNBd0xqSTJNakl3TnlBd0xqVTNNekV4TlNBd0xqSTJNakl3TjBNd0xqWTJORFl6SURBdU1qWXlNakEzSURBdU56TTJOek01SURBdU16TTBNekUySURBdU56TTJOek01SURBdU5ESTFPRE14UXpBdU56TTJOek01SURBdU5EVTFOakl4SURBdU56STVNRGs0SURBdU5EZ3pNelUxSURBdU56RTFOak0wSURBdU5UQTNNakUwUXpBdU56RXdPREl6SURBdU5UQXpNREE0SURBdU56QTFOekkzSURBdU5EazVNVEF4SURBdU56QXdNemMwSURBdU5EazFOVEkwUXpBdU5qazNNemd5SURBdU5Ea3pOVEkxSURBdU5qazBNekkySURBdU5Ea3hOalFnTUM0Mk9URXlNVE1nTUM0ME9EazROekZETUM0M01ERXpNRFVnTUM0ME56QTVOVElnTUM0M01EWTVPRGtnTUM0ME5Ea3hOemtnTUM0M01EWTVPRGtnTUM0ME1qVTRNekZETUM0M01EWTVPRGtnTUM0ek5UQTNORGNnTUM0Mk5EZ3hPVGtnTUM0eU9URTVOVGNnTUM0MU56TXhNVFVnTUM0eU9URTVOVGRETUM0ME9UZ3dNekVnTUM0eU9URTVOVGNnTUM0ME16a3lOREVnTUM0ek5UQTNORGNnTUM0ME16a3lOREVnTUM0ME1qVTRNekZETUM0ME16a3lOREVnTUM0ME16VTJPQ0F3TGpRME1ESXpPU0F3TGpRME5UUTFNU0F3TGpRME1qRTVJREF1TkRVME5URXhRekF1TkRRMU5EY3hJREF1TkRZNU56UTNJREF1TkRReU56azBJREF1TkRnM09UTTVJREF1TkRJNU9UTTRJREF1TlRBd056azFUREF1TWprME9EUTVJREF1TmpNMU9EZzBRekF1TWpreU1EVTVJREF1TmpNNE5qYzBJREF1TWprd05Ea3lJREF1TmpReU5EVTNJREF1TWprd05Ea3lJREF1TmpRMk5EQXlWakF1Tmprek5UYzVRekF1TWprd05Ea3lJREF1TnpBeE56azBJREF1TWprM01UVXlJREF1TnpBNE5EVTBJREF1TXpBMU16WTNJREF1TnpBNE5EVTBTREF1TXpZME9EWTNRekF1TXpjek1EZ3lJREF1TnpBNE5EVTBJREF1TXpjNU56UXhJREF1TnpBeE56azBJREF1TXpjNU56UXhJREF1Tmprek5UYzVWakF1TmpjNE56QTBRekF1TXpjNU56UXhJREF1TmpZeU1qYzBJREF1TXprek1EWXhJREF1TmpRNE9UVTFJREF1TkRBNU5Ea3hJREF1TmpRNE9UVTFTREF1TkRNNU1qUXhWakF1TmpFNU1qQTFRekF1TkRNNU1qUXhJREF1TmpBeU56YzBJREF1TkRVeU5UWXhJREF1TlRnNU5EVTFJREF1TkRZNE9Ua3hJREF1TlRnNU5EVTFTREF1TkRnd016VkRNQzQwTnpNeU9EWWdNQzQxT1Rjek5Ea2dNQzQwTmpnNU9URWdNQzQyTURjM056TWdNQzQwTmpnNU9URWdNQzQyTVRreU1ERldNQzQyTkRnNU5UVkRNQzQwTmpnNU9URWdNQzQyTmpVek9EVWdNQzQwTlRVMk56RWdNQzQyTnpnM01EUWdNQzQwTXpreU5ERWdNQzQyTnpnM01EUklNQzQwTURrME9URldNQzQyT1RNMU56bERNQzQwTURrME9URWdNQzQzTVRneU1qVWdNQzR6T0RrMU1USWdNQzQzTXpneU1EUWdNQzR6TmpRNE5qY2dNQzQzTXpneU1EUklNQzR6TURVek5qZERNQzR5T0RBM01qRWdNQzQzTXpneU1EUWdNQzR5TmpBM05ESWdNQzQzTVRneU1qVWdNQzR5TmpBM05ESWdNQzQyT1RNMU56bFdNQzQyTkRZME1ESkRNQzR5TmpBM05ESWdNQzQyTXpRMU5qY2dNQzR5TmpVME5EUWdNQzQyTWpNeU1UY2dNQzR5TnpNNE1USWdNQzQyTVRRNE5EaE1NQzQwTURnNU1ESWdNQzQwTnprM05UbERNQzQwTVRJNE56WWdNQzQwTnpVM09EUWdNQzQwTVRRNE16Y2dNQzQwTmpnNE1EWWdNQzQwTVRNeE1EY2dNQzQwTmpBM056UkRNQzQwTVRBMk9ESWdNQzQwTkRrMU1URWdNQzQwTURrME9URWdNQzQwTXpjMk16SWdNQzQwTURrME9URWdNQzQwTWpVNE16RmFUVEF1TlRVek9EZzBJREF1TkRZMk1EazVRekF1TlRVNU5qa3pJREF1TkRZd01qa2dNQzQxTlRrMk9UTWdNQzQwTlRBNE56SWdNQzQxTlRNNE9EUWdNQzQwTkRVd05qTkRNQzQxTkRnd056VWdNQzQwTXpreU5UUWdNQzQxTXpnMk5UWWdNQzQwTXpreU5UUWdNQzQxTXpJNE5EY2dNQzQwTkRVd05qTk1NQzQwTnpNek5EZ2dNQzQxTURRMU5qSkRNQzQwTmpjMU16a2dNQzQxTVRBek56RWdNQzQwTmpjMU16a2dNQzQxTVRrM09TQXdMalEzTXpNME9DQXdMalV5TlRVNU9Vd3dMalV6TWpnME55QXdMalU0TlRBNU9FTXdMalV6T0RZMU5pQXdMalU1TURrd055QXdMalUwT0RBM05TQXdMalU1TURrd055QXdMalUxTXpnNE5DQXdMalU0TlRBNU9FTXdMalUxT1RZNU15QXdMalUzT1RJNE9TQXdMalUxT1RZNU15QXdMalUyT1RnM01TQXdMalUxTXpnNE5DQXdMalUyTkRBMk1rd3dMalV4T1RjM055QXdMalV5T1RrMU5VZ3dMall4Tnpjek5rTXdMall6TlRNNE55QXdMalV5T1RrMU5TQXdMalkxTWpZME1TQXdMalV6TlRFNE9TQXdMalkyTnpNeE9DQXdMalUwTkRrNU5rTXdMalk0TVRrNU5DQXdMalUxTkRnd01pQXdMalk1TXpRek15QXdMalUyT0RjMElEQXVOekF3TVRnM0lEQXVOVGcxTURRNFF6QXVOekEyT1RReUlEQXVOakF4TXpVMUlEQXVOekE0TnpFZ01DNDJNVGt6SURBdU56QTFNalkySURBdU5qTTJOakV4UXpBdU56QXhPREl5SURBdU5qVXpPVEl6SURBdU5qa3pNekl6SURBdU5qWTVPREkxSURBdU5qZ3dPRFF5SURBdU5qZ3lNekEyUXpBdU5qWTRNellnTUM0Mk9UUTNPRGdnTUM0Mk5USTBOVGdnTUM0M01ETXlPRGNnTUM0Mk16VXhORGNnTUM0M01EWTNNekZETUM0Mk1UYzRNelVnTUM0M01UQXhOelFnTUM0MU9UazRPU0F3TGpjd09EUXdOeUF3TGpVNE16VTRNeUF3TGpjd01UWTFNa013TGpVMk56STNOaUF3TGpZNU5EZzVPQ0F3TGpVMU16TXpOeUF3TGpZNE16UTFPU0F3TGpVME16VXpNU0F3TGpZMk9EYzRNa013TGpVek16Y3lOU0F3TGpZMU5ERXdOaUF3TGpVeU9EUTVJREF1TmpNMk9EVXlJREF1TlRJNE5Ea2dNQzQyTVRreU1ERkRNQzQxTWpnME9TQXdMall4TURrNE5TQXdMalV5TVRnek1TQXdMall3TkRNeU5pQXdMalV4TXpZeE5pQXdMall3TkRNeU5rTXdMalV3TlRRZ01DNDJNRFF6TWpZZ01DNDBPVGczTkRFZ01DNDJNVEE1T0RVZ01DNDBPVGczTkRFZ01DNDJNVGt5TURGRE1DNDBPVGczTkRFZ01DNDJOREkzTXpZZ01DNDFNRFUzTWlBd0xqWTJOVGMwTWlBd0xqVXhPRGM1TlNBd0xqWTROVE14TVVNd0xqVXpNVGczSURBdU56QTBPRGM1SURBdU5UVXdORFUxSURBdU56SXdNVE14SURBdU5UY3lNVGs0SURBdU56STVNVE00UXpBdU5Ua3pPVFF5SURBdU56TTRNVFEwSURBdU5qRTNPRFk0SURBdU56UXdOU0F3TGpZME1EazFJREF1TnpNMU9UQTVRekF1TmpZME1ETXpJREF1TnpNeE16RTRJREF1TmpnMU1qTTJJREF1TnpFNU9UZzBJREF1TnpBeE9EYzRJREF1TnpBek16UXpRekF1TnpFNE5USWdNQzQyT0RZM01ERWdNQzQzTWprNE5UTWdNQzQyTmpVME9UZ2dNQzQzTXpRME5EUWdNQzQyTkRJME1UVkRNQzQzTXprd016WWdNQzQyTVRrek16TWdNQzQzTXpZMk56a2dNQzQxT1RVME1EY2dNQzQzTWpjMk56TWdNQzQxTnpNMk5qTkRNQzQzTVRnMk5qWWdNQzQxTlRFNU1pQXdMamN3TXpReE5DQXdMalV6TXpNek5TQXdMalk0TXpnME5pQXdMalV5TURJMlF6QXVOalkwTWpjM0lEQXVOVEEzTVRnMElEQXVOalF4TWpjeElEQXVOVEF3TWpBMklEQXVOakUzTnpNMklEQXVOVEF3TWpBMlNEQXVOVEU1TnpjM1REQXVOVFV6T0RnMElEQXVORFkyTURrNVdpSWdabWxzYkQwaUl6QkNRVEJDTnlJdlBpWWplR0U3UEM5blBpWWplR0U3UEM5emRtYys7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iMiIgdmVydGV4PSIxIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMzc5LjAiIHk9IjEyNy4wIiB3aWR0aD0iOTAuMCIgaGVpZ2h0PSI5MC4wIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMTMiIHZhbHVlPSJBUEkgZ2F0ZXdheSIgc3R5bGU9ImlyLnJlZj03MWI4MTU2ZC1mNDIyLTRlZjItODFiOC1jZDFjMWY5N2Q4NDc7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9YXBpLWdhdGV3YXktbWljcm9zZXJ2aWNlO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHY2dZMnhwY0Mxd1lYUm9QU0oxY213b0kyTnNhWEF3S1NJK0ppTjRZVHM4WnlCamJHbHdMWEJoZEdnOUluVnliQ2dqWTJ4cGNERXBJajRtSTNoaE96eHdZWFJvSUdacGJHd3RjblZzWlQwaVpYWmxibTlrWkNJZ1kyeHBjQzF5ZFd4bFBTSmxkbVZ1YjJSa0lpQmtQU0pOTUM0Mk5EZzNNRElnTUM0Mk5ESTVNemRETUM0Mk5UWXlPRE1nTUM0Mk16UTBOemdnTUM0Mk5qUTJPRGNnTUM0Mk1qWTRNREVnTUM0Mk56TTNOemtnTUM0Mk1qQXdNME13TGpZM056YzBPQ0F3TGpZeE56QTNOQ0F3TGpZNE16QTBOeUF3TGpZeE5qa3dOaUF3TGpZNE5qazJOeUF3TGpZeE9UWXhNVXd3TGpjd05UYzJNeUF3TGpZek1qVTRNME13TGpjeE5ETTRNaUF3TGpZek9EVTFNaUF3TGpjeU5qTTFNaUF3TGpZek5qZzJOU0F3TGpjek16VTFOeUF3TGpZeU9EWTJNVU13TGpjek5UUTVOU0F3TGpZeU5qUTFOeUF3TGpjek5qazJPQ0F3TGpZeU16ZzROeUF3TGpjek56ZzRPU0F3TGpZeU1UQTRPRXd3TGpjME5UTWdNQzQxT1RnM05qVkRNQzQzTkRZNE5ERWdNQzQxT1RReE1qSWdNQzQzTlRFd09USWdNQzQxT1RBNE5EUWdNQzQzTlRVNU1EVWdNQzQxT1RBMU9EaERNQzQzTnpnek1EY2dNQzQxT0Rrek9UY2dNQzQ0TURBME9ERWdNQzQxT1RNek1qTWdNQzQ0TWpBM05pQXdMall3TWpBM1F6QXVPREkxTVRNeklEQXVOakF6T1RVMUlEQXVPREkzTnpJMklEQXVOakE0TkRZNUlEQXVPREkzTWpJeElEQXVOakV6TXpFMVREQXVPREkwTnpnMElEQXVOak0yTnpJelF6QXVPREkwTURjNUlEQXVOalF6TXpreUlEQXVPREkyTlRZeUlEQXVOalE1T0RjeklEQXVPRE14TkRjeUlEQXVOalUwTVRjM1F6QXVPRE0yTXpneUlEQXVOalU0TkRnZ01DNDRORE14TXpNZ01DNDJOakF3T1RNZ01DNDRORGsyTmpZZ01DNDJOVGcxTVRkTU1DNDROekkxTmpjZ01DNDJOVE13TWpORE1DNDROemN6TURjZ01DNDJOVEU0T0RZZ01DNDRPREl4TWpJZ01DNDJOVE00TmpVZ01DNDRPRFExTmpZZ01DNDJOVGM1TlRORE1DNDRPVFU0T1RNZ01DNDJOelk1TURZZ01DNDVNREkyT1RRZ01DNDJPVGd6TmprZ01DNDVNRFEwTlRjZ01DNDNNakEzTWpsRE1DNDVNRFE0TXpVZ01DNDNNalUxTXpJZ01DNDVNREl4TkRnZ01DNDNNekF4TnpNZ01DNDRPVGMzTlRFZ01DNDNNekl6TVROTU1DNDROelkxTWpNZ01DNDNOREkyTkRORE1DNDROekEwTlRNZ01DNDNORFUyTURFZ01DNDROall3TWpnZ01DNDNOVEV5TXlBd0xqZzJORFl3TlNBd0xqYzFOemd3TmtNd0xqZzJNekU0TWlBd0xqYzJORE00TXlBd0xqZzJORGt6SURBdU56Y3hNVEl5SURBdU9EWTVNekUySURBdU56YzFPVFU1VERBdU9EZzBOalE0SURBdU56a3lPRGM0UXpBdU9EZzNPREV4SURBdU56azJNelkzSURBdU9EZzRNemNnTUM0NE1ERTFOallnTUM0NE9EWXdORGNnTUM0NE1EVTROamxETUM0NE56VXhNak1nTUM0NE1qWXdPVGtnTUM0NE5UazNNekVnTUM0NE5ETTJOVGtnTUM0NE5ERXhNRGdnTUM0NE5UY3hNemhETUM0NE16Y3hORFlnTUM0NE5qQXdNRFlnTUM0NE16RTVNVGdnTUM0NE5qQXhNek1nTUM0NE1qZ3dORFVnTUM0NE5UYzBOVFpNTUM0NE1Ea3lPVEVnTUM0NE5EUTBPVEZETUM0NE1ETTVNVGNnTUM0NE5EQTRNREVnTUM0M09UY3dNVFlnTUM0NE16azVOallnTUM0M09UQTJPVFFnTUM0NE5ESXlORE5ETUM0M09EUXpOeklnTUM0NE5EUTFNVGtnTUM0M056a3pPQ0F3TGpnME9UWXpOU0F3TGpjM056STBOaUF3TGpnMU5qQXhOa3d3TGpjMk9UYzROU0F3TGpnM09EUXhPVU13TGpjMk9ESTBJREF1T0Rnek1EVTVJREF1TnpZek9UZzNJREF1T0RnMk16TXlJREF1TnpVNU1UYzJJREF1T0RnMk5UZzFRekF1TnpNMk56VTRJREF1T0RnM056WXhJREF1TnpFME5UY3hJREF1T0Rnek9ERTNJREF1TmprME1qZzJJREF1T0RjMU1EUTVRekF1TmpnNU9URTJJREF1T0Rjek1UWXhJREF1TmpnM016STNJREF1T0RZNE5qUTRJREF1TmpnM09ETXpJREF1T0RZek9EQTBUREF1Tmprd01qZ2dNQzQ0TkRBek5qWkRNQzQyT1RBNU9EUWdNQzQ0TXpNMk9UY2dNQzQyT0RnMU1ERWdNQzQ0TWpjeU1UWWdNQzQyT0RNMU9URWdNQzQ0TWpJNU1UTkRNQzQyTnpnMk9ERWdNQzQ0TVRnMk1Ea2dNQzQyTnpFNU15QXdMamd4TmprNU5pQXdMalkyTlRRd01pQXdMamd4T0RVM01Vd3dMalkwTWpVeE15QXdMamd5TkRBM05FTXdMall6TnpjM01TQXdMamd5TlRJeE5DQXdMall6TWprMU15QXdMamd5TXpJek5pQXdMall6TURVd09DQXdMamd4T1RFME5VTXdMall4T1RFNElEQXVPREF3TVRnNElEQXVOakV5TXpneUlEQXVOemM0TnpFNUlEQXVOakV3TmpJM0lEQXVOelUyTXpVMFF6QXVOakV3TWpVZ01DNDNOVEUxTkRrZ01DNDJNVEk1TkRJZ01DNDNORFk1TURZZ01DNDJNVGN6TkRNZ01DNDNORFEzTmpsTU1DNDJNemcwT1RrZ01DNDNNelEwT1RoRE1DNDJORFExT0RVZ01DNDNNekUxTkRFZ01DNDJORGt3TVRFZ01DNDNNalU0T1NBd0xqWTFNRFF4TkNBd0xqY3hPVEkxT1VNd0xqWTFNVGd5T0NBd0xqY3hNalkzTXlBd0xqWTFNREEzTnlBd0xqY3dOVGt5T1NBd0xqWTBOVFk1T0NBd0xqY3dNVEE0TkV3d0xqWXpNRE00TlNBd0xqWTROREUyTkVNd0xqWXlOekU0TnlBd0xqWTRNRFl6TVNBd0xqWXlOalkyTWlBd0xqWTNOVE0xTWlBd0xqWXlPVEEzTmlBd0xqWTNNVEF5T1VNd0xqWXpORFl3T1NBd0xqWTJNVEV5TVNBd0xqWTBNVEV5TnlBd0xqWTFNVGMzTkNBd0xqWTBPRGN3TWlBd0xqWTBNamt6TjFwTk1DNDNPRFl4TURFZ01DNDNPVGswTkVNd0xqZ3hPVGMyTlNBd0xqYzRNelkyTVNBd0xqZ3pOREkyTXlBd0xqYzBNelU0TVNBd0xqZ3hPRFE0TkNBd0xqY3dPVGt4T0VNd0xqZ3dNamN3TlNBd0xqWTNOakkxTlNBd0xqYzJNall5TkNBd0xqWTJNVGMxT0NBd0xqY3lPRGsySURBdU5qYzNOVE0yUXpBdU5qazFNamsySURBdU5qa3pNekUxSURBdU5qZ3dOems0SURBdU56TXpNemsySURBdU5qazJOVGMzSURBdU56WTNNRFU0UXpBdU56RXlNelUySURBdU9EQXdOekl4SURBdU56VXlORE0zSURBdU9ERTFNakU1SURBdU56ZzJNVEF4SURBdU56azVORFJhSWlCbWFXeHNQU0lqTVRGQk9FTkdJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzQzTnpRNU16SWdNQzQzTmpJME9ERldNQzQzTlRZd05qUkRNQzQzTnpBeU1qWWdNQzQzTmpFek5qa2dNQzQzTmpRMk1qRWdNQzQzTmpRd01qRWdNQzQzTlRneE1Ua2dNQzQzTmpRd01qRkRNQzQzTlRJMk5ETWdNQzQzTmpRd01qRWdNQzQzTkRnME5TQXdMamMyTVRnMElEQXVOelExTlRReElEQXVOelUzTkRjMlZqQXVOemd5T0RnM1REQXVOek0wTXpjMUlEQXVOemc0TVRRNVZqQXVOamsyT0RrNVNEQXVOelExTlRReFZqQXVOek0yTkRJNFF6QXVOelExTlRReElEQXVOelF6TURFMklEQXVOelEyTmprMklEQXVOelEzTlRVeElEQXVOelE1TURBMklEQXVOelV3TURNeVF6QXVOelV4TkRBeUlEQXVOelV5TkRJNElEQXVOelUwT1RrMklEQXVOelV6TmpJMklEQXVOelU1TnpnM0lEQXVOelV6TmpJMlF6QXVOelk1T0RnMElEQXVOelV6TmpJMklEQXVOemMwT1RNeUlEQXVOelEzT1RjNUlEQXVOemMwT1RNeUlEQXVOek0yTmpnMVZqQXVOamsyT0RrNVNEQXVOemcyTURrNFZqQXVOell5TkRneFNEQXVOemMwT1RNeVdpSWdabWxzYkQwaUl6RXhRVGhEUmlJdlBpWWplR0U3UEM5blBpWWplR0U3UEdjZ1kyeHBjQzF3WVhSb1BTSjFjbXdvSTJOc2FYQXlLU0krSmlONFlUczhjR0YwYUNCbWFXeHNMWEoxYkdVOUltVjJaVzV2WkdRaUlHTnNhWEF0Y25Wc1pUMGlaWFpsYm05a1pDSWdaRDBpVFRBdU16QTJOVEl5SURBdU1UVXdOakEzUXpBdU16STVNek0xSURBdU1UUXlOamM0SURBdU16VXlPVEV6SURBdU1UTTNNVFE0SURBdU16YzJPRGMxSURBdU1UTTBNVEE0UXpBdU16ZzNNek0xSURBdU1UTXlOemd4SURBdU16azNORGtnTUM0eE16Z3lOVFlnTUM0ME1ESXhOU0F3TGpFME56Y3pOa3d3TGpReU5EUTVNaUF3TGpFNU16RTRPVU13TGpRek5EY3hOU0F3TGpJeE5EQTNJREF1TkRVNE9UYzBJREF1TWpJek9UTXlJREF1TkRnd09ESTBJREF1TWpFMk1EYzVRekF1TkRnMk5qazRJREF1TWpFek9UY3lJREF1TkRreU1EWTBJREF1TWpFd05qVXpJREF1TkRrMk5qSXlJREF1TWpBMk1qa3lUREF1TlRNek1EazFJREF1TVRjeE5UYzVRekF1TlRRd05qZ3hJREF1TVRZME16WWdNQzQxTlRFNU9UWWdNQzR4TmpJM01qVWdNQzQxTmpFek1qUWdNQzR4TmpjMU1ERkRNQzQyTURRM05ESWdNQzR4T0RrM015QXdMalkwTWpVM015QXdMakl5TVRVeU5pQXdMalkzTVRrMk9TQXdMakkyTURRNU5VTXdMalkzT0RNd09DQXdMakkyT0RnNU9DQXdMalkzT0RZME5DQXdMakk0TURNNU1pQXdMalkzTWpnd05pQXdMakk0T1RFek4wd3dMalkwTkRZeE1pQXdMak16TVRNM01rTXdMall6TmpVMU9TQXdMak0wTXpNNU5DQXdMall6TkRjd05pQXdMak0xT0RVME15QXdMall6T1RZeUlEQXVNemN5TVRjeVF6QXVOalEwTlRNMElEQXVNemcxT0NBd0xqWTFOVFl5T0NBd0xqTTVOakk0TVNBd0xqWTJPVFV6SURBdU5EQXdOREEzVERBdU56RTRNakkzSURBdU5ERTBPVEk1UXpBdU56STRNekEwSURBdU5ERTNPVE0xSURBdU56TTFNemd6SURBdU5ESTJPVGs1SURBdU56TTFPRFkySURBdU5ETTNOVEUyUXpBdU56TTRNVEEwSURBdU5EZzJNalk1SURBdU56STVNamd4SURBdU5UTTBPRGd5SURBdU56RXdNRFU1SURBdU5UYzVOekF6UXpBdU56QTFPVE14SURBdU5UZzVNekk1SURBdU5qazJNVGcySURBdU5UazFNamswSURBdU5qZzFOelF6SURBdU5UazBOVGczVERBdU5qTTFNekkwSURBdU5Ua3hNVGMwUXpBdU5qSXdPVEF5SURBdU5Ua3dNakEwSURBdU5qQTJPRGc0SURBdU5UazJNVFl4SURBdU5UazNOVGMySURBdU5qQTNNakU1UXpBdU5UZzRNalkwSURBdU5qRTRNamMzSURBdU5UZzBOelkxSURBdU5qTXpNVEU0SURBdU5UZzRNVFV4SURBdU5qUTNNVGsxVERBdU5UazVPVGc0SURBdU5qazJOREk1UXpBdU5qQXlOREk1SURBdU56QTJOVGd4SURBdU5UazRNalF4SURBdU56RTNNVFkySURBdU5UZzVOVEkwSURBdU56SXlPRGM1UXpBdU5UUTROVFEwSURBdU56UTVOek14SURBdU5UQXhPRE16SURBdU56WTJOVGN6SURBdU5EVXpNVFEySURBdU56Y3lNRFV4UXpBdU5EUXlOemc1SURBdU56Y3pNakUySURBdU5ETXlPREE1SURBdU56WTNOek01SURBdU5ESTRNakVnTUM0M05UZ3pOalZNTUM0ME1EVTVNemdnTUM0M01USTVOekpETUM0ek9UazFNeklnTUM0M01EQXdNVE1nTUM0ek9EY3pOamdnTUM0Mk9UQTROakVnTUM0ek56TXhOVGtnTUM0Mk9EZ3pNRGxETUM0ek5UZzVOVEVnTUM0Mk9EVTNOVGdnTUM0ek5EUXpPRFVnTUM0Mk9UQXhNRGtnTUM0ek16TTVNekVnTUM0M01EQXdNVFJNTUM0eU9UY3lPRE1nTUM0M016UTRNalZETUM0eU9EazJPVElnTUM0M05ESXdNelVnTUM0eU56Z3pOemtnTUM0M05ETTJOaUF3TGpJMk9UQTFOeUF3TGpjek9EZzNPVU13TGpJeU5UWXlOQ0F3TGpjeE5qWXdOU0F3TGpFNE56YzRPU0F3TGpZNE5EYzJNU0F3TGpFMU9EUXdNU0F3TGpZME5UYzBNME13TGpFMU1qQTNNaUF3TGpZek56TXpPU0F3TGpFMU1UYzBNaUF3TGpZeU5UZzFJREF1TVRVM05UYzVJREF1TmpFM01URk1NQzR4T0RVNE1qRWdNQzQxTnpRNE1qZERNQzR4T1RNNE56TWdNQzQxTmpJNE1EVWdNQzR4T1RVM01qY2dNQzQxTkRjMk5UWWdNQzR4T1RBNE1UTWdNQzQxTXpRd01qaERNQzR4T0RVNE9Ua2dNQzQxTWpBek9Ua2dNQzR4TnpRNE1EUWdNQzQxTURrNU1UZ2dNQzR4TmpBNU1UVWdNQzQxTURVM09UWk1NQzR4TVRJeU15QXdMalE1TVRNd05VTXdMakV3TWpFME5pQXdMalE0T0RNd015QXdMakE1TlRBMU9Ua2dNQzQwTnpreU16VWdNQzR3T1RRMU56YzFJREF1TkRZNE56RXpRekF1TURreU16UXlJREF1TkRFNU9UVXhJREF1TVRBeE1UYzNJREF1TXpjeE16TWdNQzR4TWpBME1Ua2dNQzR6TWpZMU1EaERNQzR4TWpRMU5UTWdNQzR6TVRZNE56Z2dNQzR4TXpRek1EZ2dNQzR6TVRBNU1UWWdNQzR4TkRRM05UWWdNQzR6TVRFMk16Tk1NQzR4T1RRNU9DQXdMak14TlRBNE0wTXdMakl3T1RReU9TQXdMak14TmpBM0lEQXVNakl6TkRZNUlEQXVNekV3TURjeUlEQXVNak15TnprM0lEQXVNams0T0RnNFF6QXVNalF5TVRBeUlEQXVNamczT0RBeUlEQXVNalExTmpBeUlEQXVNamN5T1RRM0lEQXVNalF5TWpNeklEQXVNalU0T0RZeVREQXVNak13TkRNM0lEQXVNakE1TmpRNVF6QXVNakkzT1RjMElEQXVNVGs1TXpjeElEQXVNak15TXpBMElEQXVNVGc0TmpjZ01DNHlOREV5TVRJZ01DNHhPRE13TVRsRE1DNHlOakUyTXlBd0xqRTNNREEyTnlBd0xqSTRNek16TlNBd0xqRTFPVEkzSURBdU16QTJOVEl5SURBdU1UVXdOakEzV2swd0xqUXhOVFF5TWlBd0xqWXlNVGMzTTBNd0xqVXdPRFl5SURBdU5qSXhOemN6SURBdU5UZzBNVGN4SURBdU5UUTJNakl4SURBdU5UZzBNVGN4SURBdU5EVXpNREkwUXpBdU5UZzBNVGN4SURBdU16VTVPREkySURBdU5UQTROaklnTUM0eU9EUXlOelVnTUM0ME1UVTBNaklnTUM0eU9EUXlOelZETUM0ek1qSXlNak1nTUM0eU9EUXlOelVnTUM0eU5EWTJOeklnTUM0ek5UazRNallnTUM0eU5EWTJOeklnTUM0ME5UTXdNalJETUM0eU5EWTJOeklnTUM0MU5EWXlNakVnTUM0ek1qSXlNak1nTUM0Mk1qRTNOek1nTUM0ME1UVTBNaklnTUM0Mk1qRTNOek5hSWlCbWFXeHNQU0lqTVRGQk9FTkdJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzR6TnpVMk1pQXdMalE1T1RrMU9Fd3dMak0yT0RjNU5TQXdMalE0TWpFd09FZ3dMak16TkRJM05rd3dMak15TnpRMU1TQXdMalE1T1RrMU9FZ3dMak13TlRZMk5Fd3dMak0wTVRnNE9TQXdMalF3T0RBNE1VZ3dMak0yTVRBMU1Vd3dMak01TnpRd055QXdMalE1T1RrMU9FZ3dMak0zTlRZeVdrMHdMak0yTWpFd01TQXdMalEyTXpjek1rd3dMak0xTkRJeU5pQXdMalEwTXpreE0wTXdMak0xTXpBd01TQXdMalEwTURrek9DQXdMak0xTWpBNE1pQXdMalF6T0RNMU55QXdMak0xTVRRM0lEQXVORE0yTVRZNVF6QXVNelV4TVRJZ01DNDBNemMyTlRjZ01DNHpOVEF5TURFZ01DNDBOREF5TXpnZ01DNHpORGczTVRRZ01DNDBORE01TVROTU1DNHpOREE0TXprZ01DNDBOak0zTXpKSU1DNHpOakl4TURGYUlpQm1hV3hzUFNJak1URkJPRU5HSWk4K0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0ME1Ea3hORFFnTUM0ME9UazVOVGhXTUM0ME1EZ3dPREZJTUM0ME5EazRNekZETUM0ME5qQTNOamdnTUM0ME1EZ3dPREVnTUM0ME5qZzRNVGdnTUM0ME1UQTVNalVnTUM0ME56TTVPQ0F3TGpReE5qWXhNa013TGpRM09USXpJREF1TkRJeU15QXdMalE0TVRnMU5TQXdMalF5T1RNZ01DNDBPREU0TlRVZ01DNDBNemMyTVRORE1DNDBPREU0TlRVZ01DNDBOREV5SURBdU5EZ3hNalF6SURBdU5EUTBOekF4SURBdU5EZ3dNREU0SURBdU5EUTRNVEV6UXpBdU5EYzROemt6SURBdU5EVXhORE00SURBdU5EYzJPVFUxSURBdU5EVTBOVFEwSURBdU5EYzBOVEExSURBdU5EVTNORE15UXpBdU5EY3lNRFUxSURBdU5EWXdNeklnTUM0ME5qZzJPRGNnTUM0ME5qSTJNemdnTUM0ME5qUXpPVGtnTUM0ME5qUXpPRGhETUM0ME5qQXhNVElnTUM0ME5qWXhNemdnTUM0ME5UVXlOVFlnTUM0ME5qY3dNVE1nTUM0ME5EazRNekVnTUM0ME5qY3dNVE5JTUM0ME1qa3dPVE5XTUM0ME9UazVOVGhJTUM0ME1Ea3hORFJhVFRBdU5EVXdOakU0SURBdU5EUTRNalEwUXpBdU5EVTBNVEU0SURBdU5EUTRNalEwSURBdU5EVTJOelF6SURBdU5EUTNNVGswSURBdU5EVTRORGt6SURBdU5EUTFNRGswUXpBdU5EWXdNalF6SURBdU5EUXlPVGswSURBdU5EWXhNVEU0SURBdU5EUXdOU0F3TGpRMk1URXhPQ0F3TGpRek56WXhNME13TGpRMk1URXhPQ0F3TGpRek5EZ3hNeUF3TGpRMk1ESTROeUF3TGpRek1qTTJNeUF3TGpRMU9EWXlOQ0F3TGpRek1ESTJNME13TGpRMU5qazJNaUF3TGpReU9EQTNOU0F3TGpRMU5ESTVNeUF3TGpReU5qazRNU0F3TGpRMU1EWXhPQ0F3TGpReU5qazRNVWd3TGpReU9UQTVNMVl3TGpRME9ESTBORWd3TGpRMU1EWXhPRm9pSUdacGJHdzlJaU14TVVFNFEwWWlMejRtSTNoaE96eHdZWFJvSUdROUlrMHdMalE1TkRFek55QXdMalE1T1RrMU9GWXdMalF3T0RBNE1VZ3dMalV4TkRBNE4xWXdMalE1T1RrMU9FZ3dMalE1TkRFek4xb2lJR1pwYkd3OUlpTXhNVUU0UTBZaUx6NG1JM2hoT3p3dlp6NG1JM2hoT3p3dlp6NG1JM2hoT3p4a1pXWnpQaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01DSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNQzQ1TXpjMUlpQm9aV2xuYUhROUlqQXVPVE0zTlNJZ1ptbHNiRDBpZDJocGRHVWlJSFJ5WVc1elptOXliVDBpZEhKaGJuTnNZWFJsS0RBdU1ETXhNalVnTUM0d016RXlOU2tpTHo0bUkzaGhPend2WTJ4cGNGQmhkR2crSmlONFlUczhZMnhwY0ZCaGRHZ2dhV1E5SW1Oc2FYQXhJajRtSTNoaE96eHlaV04wSUhkcFpIUm9QU0l3TGpJNE9UY3lOaUlnYUdWcFoyaDBQU0l3TGpJNE9UY3lNaUlnWm1sc2JEMGlkMmhwZEdVaUlIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREF1TmpFeU56a3pJREF1TlRrek56VXBJaTgrSmlONFlUczhMMk5zYVhCUVlYUm9QaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01pSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNQzQyTlRZeU5TSWdhR1ZwWjJoMFBTSXdMalkxTmpJMUlpQm1hV3hzUFNKM2FHbDBaU0lnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01DNHdPRGMwTURJeklEQXVNVEkxS1NJdlBpWWplR0U3UEM5amJHbHdVR0YwYUQ0bUkzaGhPend2WkdWbWN6NG1JM2hoT3p3dmMzWm5QZz09O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjIiIHZlcnRleD0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjM3Ny4wIiB5PSIyNjMuMCIgd2lkdGg9IjkwLjAiIGhlaWdodD0iOTAuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjE4IiB2YWx1ZT0iVXNlciBSZWdpc3RyYXRpb24iIHN0eWxlPSJpci5yZWY9MjliZWQwMzgtYWZiZC00YTBiLWJkMWYtYmY1YmZjYmMxN2EzO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPUNELVVTRVItUkVHSVNUUkFUSU9OO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHMWhjMnNnYVdROUltMWhjMnN3WHpFMU1EUmZNak0yTkRNaUlITjBlV3hsUFNKdFlYTnJMWFI1Y0dVNllXeHdhR0VpSUcxaGMydFZibWwwY3owaWRYTmxjbE53WVdObFQyNVZjMlVpSUhnOUlqQWlJSGs5SWpBaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlQaVlqZUdFN1BHTnBjbU5zWlNCamVEMGlNQzQxSWlCamVUMGlNQzQxSWlCeVBTSXdMalVpSUdacGJHdzlJbUpzWVdOcklpOCtKaU40WVRzOEwyMWhjMnMrSmlONFlUczhaeUJ0WVhOclBTSjFjbXdvSTIxaGMyc3dYekUxTURSZk1qTTJORE1wSWo0bUkzaGhPenhuSUdOc2FYQXRjR0YwYUQwaWRYSnNLQ05qYkdsd01GOHhOVEEwWHpJek5qUXpLU0krSmlONFlUczhjR0YwYUNCbWFXeHNMWEoxYkdVOUltVjJaVzV2WkdRaUlHTnNhWEF0Y25Wc1pUMGlaWFpsYm05a1pDSWdaRDBpVFRBdU5UQXlNak15SURBdU56RXlNVEUwUXpBdU5UQTRNakE0SURBdU56SXlNREl5SURBdU5URTFNamcxSURBdU56TXhNVGt4SURBdU5USXpNamt4SURBdU56TTVORFV6UXpBdU5UQXpOamdnTUM0M05ETXhOaklnTUM0ME9ESTFORGNnTUM0M05EVXhORFVnTUM0ME5qQXlOVGdnTUM0M05EVXhORFZETUM0ek5ETXdOVE1nTUM0M05EVXhORFVnTUM0eU5UYzRNVElnTUM0Mk9UTXhPRE1nTUM0eU5UYzRNVElnTUM0Mk1UYzVNREZXTUM0Mk1ETTBNelJETUM0eU5UYzRNVElnTUM0MU5qazRPVEVnTUM0eU9EVXdNRFFnTUM0MU5ESTNJREF1TXpFNE5UUTJJREF1TlRReU4wZ3dMalV4TURnMU9VTXdMalV3TXpnek9TQXdMalUxTWpBME5TQXdMalE1TnpnM015QXdMalUyTWpJeU5TQXdMalE1TXpFek5pQXdMalUzTXpBMk4wZ3dMak14T0RVME5rTXdMak13TWpjMk1TQXdMalUzTXpBMk55QXdMakk0T1RjNUlEQXVOVGcxTVRFZ01DNHlPRGd6TVRrZ01DNDJNREExTURsTU1DNHlPRGd4TnprZ01DNDJNRE0wTXpSV01DNDJNVGM1TURGRE1DNHlPRGd4TnprZ01DNDJOekl3TkRNZ01DNHpOVFkzT0RRZ01DNDNNVFEzTnpnZ01DNDBOakF5TlRnZ01DNDNNVFEzTnpoRE1DNDBOelE1TkRVZ01DNDNNVFEzTnpnZ01DNDBPRGc1TnpVZ01DNDNNVE00TlRRZ01DNDFNREl5TXpJZ01DNDNNVEl4TVRSYVRUQXVORFl3TWpVNElEQXVNalU1TWpjM1F6QXVOVEkzTXpReklEQXVNalU1TWpjM0lEQXVOVGd4TnpJMUlEQXVNekV6TmpZZ01DNDFPREUzTWpVZ01DNHpPREEzTkRSRE1DNDFPREUzTWpVZ01DNDBORGM0TWpnZ01DNDFNamN6TkRNZ01DNDFNREl5TVRFZ01DNDBOakF5TlRnZ01DNDFNREl5TVRGRE1DNHpPVE14TnpNZ01DNDFNREl5TVRFZ01DNHpNemczT1RFZ01DNDBORGM0TWpnZ01DNHpNemczT1RFZ01DNHpPREEzTkRSRE1DNHpNemczT1RFZ01DNHpNVE0yTmlBd0xqTTVNekUzTXlBd0xqSTFPVEkzTnlBd0xqUTJNREkxT0NBd0xqSTFPVEkzTjFwTk1DNDBOakF5TlRnZ01DNHlPRGsyTkRSRE1DNDBNRGs1TkRVZ01DNHlPRGsyTkRRZ01DNHpOamt4TlRnZ01DNHpNekEwTXpFZ01DNHpOamt4TlRnZ01DNHpPREEzTkRSRE1DNHpOamt4TlRnZ01DNDBNekV3TlRjZ01DNDBNRGs1TkRVZ01DNDBOekU0TkRVZ01DNDBOakF5TlRnZ01DNDBOekU0TkRWRE1DNDFNVEExTnpFZ01DNDBOekU0TkRVZ01DNDFOVEV6TlRnZ01DNDBNekV3TlRjZ01DNDFOVEV6TlRnZ01DNHpPREEzTkRSRE1DNDFOVEV6TlRnZ01DNHpNekEwTXpFZ01DNDFNVEExTnpFZ01DNHlPRGsyTkRRZ01DNDBOakF5TlRnZ01DNHlPRGsyTkRSYVRUQXVOell6T1RJMklEQXVOak16T0RBeFF6QXVOell6T1RJMklEQXVOekEyTkRjMElEQXVOekExTURFeElEQXVOelkxTXpnNUlEQXVOak15TXpNM0lEQXVOelkxTXpnNVF6QXVOVFU1TmpZeUlEQXVOelkxTXpnNUlEQXVOVEF3TnpRM0lEQXVOekEyTkRjMElEQXVOVEF3TnpRM0lEQXVOak16T0RBeFF6QXVOVEF3TnpRM0lEQXVOVFl4TVRJMklEQXVOVFU1TmpZeUlEQXVOVEF5TWpFeElEQXVOak15TXpNM0lEQXVOVEF5TWpFeFF6QXVOekExTURFeElEQXVOVEF5TWpFeElEQXVOell6T1RJMklEQXVOVFl4TVRJMklEQXVOell6T1RJMklEQXVOak16T0RBeFdrMHdMalkwTWpRMU9TQXdMalUxTWpneU1rTXdMalkwTWpRMU9TQXdMalUwTnpJek1pQXdMall6TnpreU55QXdMalUwTWpjZ01DNDJNekl6TXpjZ01DNDFOREkzUXpBdU5qSTJOelEySURBdU5UUXlOeUF3TGpZeU1qSXhOQ0F3TGpVME56SXpNaUF3TGpZeU1qSXhOQ0F3TGpVMU1qZ3lNbFl3TGpZeU16WTNPRWd3TGpVMU1UTTFPRU13TGpVME5UYzJPQ0F3TGpZeU16WTNPQ0F3TGpVME1USXpOaUF3TGpZeU9ESXhJREF1TlRReE1qTTJJREF1TmpNek9EQXhRekF1TlRReE1qTTJJREF1TmpNNU16a2dNQzQxTkRVM05qZ2dNQzQyTkRNNU1qSWdNQzQxTlRFek5UZ2dNQzQyTkRNNU1qSklNQzQyTWpJeU1UUldNQzQzTVRRM056aERNQzQyTWpJeU1UUWdNQzQzTWpBek5qZ2dNQzQyTWpZM05EWWdNQzQzTWpRNUlEQXVOak15TXpNM0lEQXVOekkwT1VNd0xqWXpOemt5TnlBd0xqY3lORGtnTUM0Mk5ESTBOVGtnTUM0M01qQXpOamdnTUM0Mk5ESTBOVGtnTUM0M01UUTNOemhXTUM0Mk5ETTVNakpJTUM0M01UTXpNVFZETUM0M01UZzVNRFVnTUM0Mk5ETTVNaklnTUM0M01qTTBNemNnTUM0Mk16a3pPU0F3TGpjeU16UXpOeUF3TGpZek16Z3dNVU13TGpjeU16UXpOeUF3TGpZeU9ESXhJREF1TnpFNE9UQTFJREF1TmpJek5qYzRJREF1TnpFek16RTFJREF1TmpJek5qYzRTREF1TmpReU5EVTVWakF1TlRVeU9ESXlXaUlnWm1sc2JEMGlJekJDUVRCQ055SXZQaVlqZUdFN1BDOW5QaVlqZUdFN1BDOW5QaVlqZUdFN1BHUmxabk0rSmlONFlUczhZMnhwY0ZCaGRHZ2dhV1E5SW1Oc2FYQXdYekUxTURSZk1qTTJORE1pUGlZamVHRTdQSEpsWTNRZ2QybGtkR2c5SWpBdU5qZ2lJR2hsYVdkb2REMGlNQzQyT0NJZ1ptbHNiRDBpZDJocGRHVWlJSFJ5WVc1elptOXliVDBpZEhKaGJuTnNZWFJsS0RBdU1UVTVNVGdnTUM0eE5qQXhOVFlwSWk4K0ppTjRZVHM4TDJOc2FYQlFZWFJvUGlZamVHRTdQQzlrWldaelBpWWplR0U3UEM5emRtYys7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iMiIgdmVydGV4PSIxIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMzc5LjAiIHk9IjQxMi4wIiB3aWR0aD0iOTAuMCIgaGVpZ2h0PSI5MC4wIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMTciIHZhbHVlPSJMb2dpbiIgc3R5bGU9ImlyLnJlZj0xMTUyZDhjZC1iM2MzLTRhNTktOGFhZi0xMmJjMWI3NGEwZTM7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Q0QtTE9HSU47aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEcxaGMyc2dhV1E5SW0xaGMyc3dYekUwTlRCZk1qTTBNRGtpSUhOMGVXeGxQU0p0WVhOckxYUjVjR1U2WVd4d2FHRWlJRzFoYzJ0VmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaVBpWWplR0U3UEdOcGNtTnNaU0JqZUQwaU1DNDFJaUJqZVQwaU1DNDFJaUJ5UFNJd0xqVWlJR1pwYkd3OUltSnNZV05ySWk4K0ppTjRZVHM4TDIxaGMycytKaU40WVRzOFp5QnRZWE5yUFNKMWNtd29JMjFoYzJzd1h6RTBOVEJmTWpNME1Ea3BJajRtSTNoaE96eG5JR05zYVhBdGNHRjBhRDBpZFhKc0tDTmpiR2x3TUY4eE5EVXdYekl6TkRBNUtTSStKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNHlNVGMzTnpNZ01DNDFNalExTWpKTU1DNDBNekV5T0RJZ01DNDFNalExTkRsTU1DNHpPREU0TmpNZ01DNDFOekk0TVRKRE1DNHpOelF5TWpRZ01DNDFPREF5TmpnZ01DNHpOek0xTXpJZ01DNDFPVEU1TXpRZ01DNHpOemszT0RRZ01DNDJNREF4TlRSTU1DNHpPREU0TmpnZ01DNDJNREkxTURsRE1DNHpPRGsxTURrZ01DNDJNRGs1TmpNZ01DNDBNREUwTmpRZ01DNDJNVEEyTXpnZ01DNDBNRGs0T0RjZ01DNDJNRFExTXpkTU1DNDBNVEl6SURBdU5qQXlOVEEwVERBdU5EazRNamM1SURBdU5URTROVGMwUXpBdU5UQTFPVEV4SURBdU5URXhNVEkwSURBdU5UQTJOakVnTUM0ME9UazBOekVnTUM0MU1EQXpOek1nTUM0ME9URXlOVEZNTUM0ME9UZ3lPVFFnTUM0ME9EZzRPVFpNTUM0ME1USXpNVFVnTUM0ME1EUTRNRFJETUM0ME1ETTVNakVnTUM0ek9UWTFPVFFnTUM0ek9UQXlPVFlnTUM0ek9UWTFOemtnTUM0ek9ERTRPRE1nTUM0ME1EUTNOME13TGpNM05ESXpOQ0F3TGpReE1qSXhOaUF3TGpNM016VXlOaUF3TGpReU16ZzRNaUF3TGpNM09UYzJOeUF3TGpRek1qRXdPVXd3TGpNNE1UZzBPQ0F3TGpRek5EUTJOMHd3TGpRek1EazVOaUF3TGpRNE1qVTFNVXd3TGpJeE56YzNNeUF3TGpRNE1qVXlORll3TGpVeU5EVXlNbG9pSUdacGJHdzlJaU13UWtFd1FqY2lMejRtSTNoaE96eHdZWFJvSUdacGJHd3RjblZzWlQwaVpYWmxibTlrWkNJZ1kyeHBjQzF5ZFd4bFBTSmxkbVZ1YjJSa0lpQmtQU0pOTUM0MU1qWTFPU0F3TGpjek5EWXhPVWd3TGpVeU5UVTFNVU13TGpVeE5ERTBOU0F3TGpjek5ETTFJREF1TlRBME5UazFJREF1TnpJMU1qSTFJREF1TlRBME5UazFJREF1TnpFek5qSXhWakF1TWprMk5UVTRRekF1TlRBME5UazFJREF1TWpnek5TQXdMalV4TmpZM09TQXdMakkzTXpZd09DQXdMalV5T1RnMU55QXdMakkzTlRnM09Vd3dMamMzTXpjek9TQXdMak14TnpreE0wTXdMamM0TkRBeU1TQXdMak14T1RZNE5TQXdMamM1TVRVeE5TQXdMak15T0RRd05DQXdMamM1TVRVeE5TQXdMak16T0RVNU1sWXdMalkzTkRVMFF6QXVOemt4TlRFMUlEQXVOamcwT0RJMElEQXVOemd6T0RneklEQXVOamt6TlRrMUlEQXVOemN6TkRneklEQXVOamsxTWpZeFREQXVOVEk1TmpBeElEQXVOek0wTXpRelF6QXVOVEk0TlRnNUlEQXVOek0wTlRBMUlEQXVOVEkzTlRneklEQXVOek0wTlRrMklEQXVOVEkyTlRrZ01DNDNNelEyTVRsYVRUQXVOak16TnpBNUlEQXVORGcxTkRnNVF6QXVOak16TnpBNUlEQXVOVEF3T1RnMklEQXVOakl3T0RNMklEQXVOVEV6TlRRNElEQXVOakEwT1RVMklEQXVOVEV6TlRRNFF6QXVOVGc1TURjMUlEQXVOVEV6TlRRNElEQXVOVGMyTWpBeUlEQXVOVEF3T1RnMklEQXVOVGMyTWpBeUlEQXVORGcxTkRnNVF6QXVOVGMyTWpBeUlEQXVORFk1T1RreklEQXVOVGc1TURjMUlEQXVORFUzTkRNZ01DNDJNRFE1TlRZZ01DNDBOVGMwTTBNd0xqWXlNRGd6TmlBd0xqUTFOelF6SURBdU5qTXpOekE1SURBdU5EWTVPVGt6SURBdU5qTXpOekE1SURBdU5EZzFORGc1V2lJZ1ptbHNiRDBpSXpCQ1FUQkNOeUl2UGlZamVHRTdQSEJoZEdnZ1pEMGlUVEF1TkRVek9UVWdNQzR6TVRjMU1UZE1NQzQwTnpVNU1ETWdNQzR6TVRjMU1qSk1NQzQwTnpVNE5qUWdNQzQwTkRFM01qVk1NQzQwTXpJMU9UVWdNQzR6T1RrME9EZE1NQzQwTXpJME16RWdNQzR6TXpnMU5URkRNQzQwTXpJME1UTWdNQzR6TWpjNU1EY2dNQzQwTkRBMU1URWdNQzR6TVRreE1ESWdNQzQwTlRFd01qWWdNQzR6TVRjM01EbE1NQzQwTlRNNU5TQXdMak14TnpVeE4xb2lJR1pwYkd3OUlpTXdRa0V3UWpjaUx6NG1JM2hoT3p4d1lYUm9JR1E5SWswd0xqUXpNekF3TVNBd0xqWTNORFUzTlV3d0xqUXpNamt3TWlBd0xqWXhNekl6T1V3d0xqUTNOVGczTVNBd0xqVTNNVEl4TWt3d0xqUTNOVGt3TXlBd0xqVTVNVEl6TlZZd0xqWTVOVFV6T1V3d0xqUTFORFV5SURBdU5qazFOVE01UXpBdU5EUXpOak01SURBdU5qazFOVE01SURBdU5ETTBOalF4SURBdU5qZzNOalUzSURBdU5ETXpNakF5SURBdU5qYzNOREl4VERBdU5ETXpNREF4SURBdU5qYzBOVGMxV2lJZ1ptbHNiRDBpSXpCQ1FUQkNOeUl2UGlZamVHRTdQQzluUGlZamVHRTdQQzluUGlZamVHRTdQR1JsWm5NK0ppTjRZVHM4WTJ4cGNGQmhkR2dnYVdROUltTnNhWEF3WHpFME5UQmZNak0wTURraVBpWWplR0U3UEhKbFkzUWdkMmxrZEdnOUlqQXVOamc0TmpBNElpQm9aV2xuYUhROUlqQXVOamc0TmpBNElpQm1hV3hzUFNKM2FHbDBaU0lnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01DNHhOakF4TlRZZ01DNHhOakE0T0RrcElpOCtKaU40WVRzOEwyTnNhWEJRWVhSb1BpWWplR0U3UEM5a1pXWnpQaVlqZUdFN1BDOXpkbWMrO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjIiIHZlcnRleD0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjUxOC4wIiB5PSIyNjIuNSIgd2lkdGg9IjkwLjAiIGhlaWdodD0iOTAuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjE2IiB2YWx1ZT0iVXNlciBQcm9maWxlIiBzdHlsZT0iaXIucmVmPTg5OGY2Y2YzLWQ0MWEtNDE3ZS1iN2ViLTY5YjJjZDlmZDNmMztyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1DRC1VU0VSLVBST0ZJTEU7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEcxaGMyc2dhV1E5SW0xaGMyc3dYekUxTURSZk1qTTJOVEVpSUhOMGVXeGxQU0p0WVhOckxYUjVjR1U2WVd4d2FHRWlJRzFoYzJ0VmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaVBpWWplR0U3UEdOcGNtTnNaU0JqZUQwaU1DNDFJaUJqZVQwaU1DNDFJaUJ5UFNJd0xqVWlJR1pwYkd3OUltSnNZV05ySWk4K0ppTjRZVHM4TDIxaGMycytKaU40WVRzOFp5QnRZWE5yUFNKMWNtd29JMjFoYzJzd1h6RTFNRFJmTWpNMk5URXBJajRtSTNoaE96eG5JR05zYVhBdGNHRjBhRDBpZFhKc0tDTmpiR2x3TUY4eE5UQTBYekl6TmpVeEtTSStKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDFNalF5TmpnZ01DNDNNemswTlRORE1DNDFNVFl5TmpFZ01DNDNNekV4T1RFZ01DNDFNRGt4T0RVZ01DNDNNakl3TWpJZ01DNDFNRE15TURnZ01DNDNNVEl4TVRSRE1DNDBPRGs1TlRJZ01DNDNNVE00TlRRZ01DNDBOelU1TWpJZ01DNDNNVFEzTnpnZ01DNDBOakV5TXpRZ01DNDNNVFEzTnpoRE1DNHpOVGMzTmlBd0xqY3hORGMzT0NBd0xqSTRPVEUxTmlBd0xqWTNNakEwTXlBd0xqSTRPVEUxTmlBd0xqWXhOemt3TVZZd0xqWXdNelF6TTB3d0xqSTRPVEk1TlNBd0xqWXdNRFV3T1VNd0xqSTVNRGMyTmlBd0xqVTROVEV4SURBdU16QXpOek00SURBdU5UY3pNRFkzSURBdU16RTVOVEl6SURBdU5UY3pNRFkzU0RBdU5EazBNVEV6UXpBdU5EazRPRFVnTUM0MU5qSXlNallnTUM0MU1EUTRNVFlnTUM0MU5USXdORFVnTUM0MU1URTRNelVnTUM0MU5ESTNTREF1TXpFNU5USXpRekF1TWpnMU9UZ2dNQzQxTkRJM0lEQXVNalU0TnpnNUlEQXVOVFk1T0RreElEQXVNalU0TnpnNUlEQXVOakF6TkRNelZqQXVOakUzT1RBeFF6QXVNalU0TnpnNUlEQXVOamt6TVRneklEQXVNelEwTURJNUlEQXVOelExTVRRMUlEQXVORFl4TWpNMElEQXVOelExTVRRMVF6QXVORGd6TlRJMElEQXVOelExTVRRMUlEQXVOVEEwTmpVM0lEQXVOelF6TVRZeUlEQXVOVEkwTWpZNElEQXVOek01TkRVeldpSWdabWxzYkQwaUl6QkNRVEJDTnlJdlBpWWplR0U3UEhCaGRHZ2dabWxzYkMxeWRXeGxQU0psZG1WdWIyUmtJaUJqYkdsd0xYSjFiR1U5SW1WMlpXNXZaR1FpSUdROUlrMHdMalU0TWpjd01pQXdMak00TURjME5FTXdMalU0TWpjd01pQXdMak14TXpZMklEQXVOVEk0TXpFNUlEQXVNalU1TWpjM0lEQXVORFl4TWpNMElEQXVNalU1TWpjM1F6QXVNemswTVRVZ01DNHlOVGt5TnpjZ01DNHpNemszTmpjZ01DNHpNVE0yTmlBd0xqTXpPVGMyTnlBd0xqTTRNRGMwTkVNd0xqTXpPVGMyTnlBd0xqUTBOemd5T0NBd0xqTTVOREUxSURBdU5UQXlNakV4SURBdU5EWXhNak0wSURBdU5UQXlNakV4UXpBdU5USTRNekU1SURBdU5UQXlNakV4SURBdU5UZ3lOekF5SURBdU5EUTNPREk0SURBdU5UZ3lOekF5SURBdU16Z3dOelEwV2swd0xqTTNNREV6TkNBd0xqTTRNRGMwTkVNd0xqTTNNREV6TkNBd0xqTXpNRFF6TVNBd0xqUXhNRGt5TVNBd0xqSTRPVFkwTkNBd0xqUTJNVEl6TkNBd0xqSTRPVFkwTkVNd0xqVXhNVFUwT0NBd0xqSTRPVFkwTkNBd0xqVTFNak16TlNBd0xqTXpNRFF6TVNBd0xqVTFNak16TlNBd0xqTTRNRGMwTkVNd0xqVTFNak16TlNBd0xqUXpNVEExTnlBd0xqVXhNVFUwT0NBd0xqUTNNVGcwTkNBd0xqUTJNVEl6TkNBd0xqUTNNVGcwTkVNd0xqUXhNRGt5TVNBd0xqUTNNVGcwTkNBd0xqTTNNREV6TkNBd0xqUXpNVEExTnlBd0xqTTNNREV6TkNBd0xqTTRNRGMwTkZvaUlHWnBiR3c5SWlNd1FrRXdRamNpTHo0bUkzaGhPenh3WVhSb0lHUTlJazB3TGpZek5UY3dNeUF3TGpZeE1qTTVRekF1TmpReE16TTJJREF1TmpFeU16a2dNQzQyTkRVNU1ETWdNQzQyTVRZNU5UY2dNQzQyTkRVNU1ETWdNQzQyTWpJMU9WWXdMamN3TkRFNVF6QXVOalExT1RBeklEQXVOekE1T0RJeklEQXVOalF4TXpNMklEQXVOekUwTXprZ01DNDJNelUzTURNZ01DNDNNVFF6T1VNd0xqWXpNREEyT1NBd0xqY3hORE01SURBdU5qSTFOVEF6SURBdU56QTVPREl6SURBdU5qSTFOVEF6SURBdU56QTBNVGxXTUM0Mk1qSTFPVU13TGpZeU5UVXdNeUF3TGpZeE5qazFOeUF3TGpZek1EQTJPU0F3TGpZeE1qTTVJREF1TmpNMU56QXpJREF1TmpFeU16bGFJaUJtYVd4c1BTSWpNRUpCTUVJM0lpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDJNelUzTURNZ01DNDFPVFV6T1VNd0xqWTBNekl4TkNBd0xqVTVOVE01SURBdU5qUTVNekF6SURBdU5UZzVNekF4SURBdU5qUTVNekF6SURBdU5UZ3hOemxETUM0Mk5Ea3pNRE1nTUM0MU56UXlOemtnTUM0Mk5ETXlNVFFnTUM0MU5qZ3hPU0F3TGpZek5UY3dNeUF3TGpVMk9ERTVRekF1TmpJNE1Ua3lJREF1TlRZNE1Ua2dNQzQyTWpJeE1ETWdNQzQxTnpReU56a2dNQzQyTWpJeE1ETWdNQzQxT0RFM09VTXdMall5TWpFd015QXdMalU0T1RNd01TQXdMall5T0RFNU1pQXdMalU1TlRNNUlEQXVOak0xTnpBeklEQXVOVGsxTXpsYUlpQm1hV3hzUFNJak1FSkJNRUkzSWk4K0ppTjRZVHM4Y0dGMGFDQm1hV3hzTFhKMWJHVTlJbVYyWlc1dlpHUWlJR05zYVhBdGNuVnNaVDBpWlhabGJtOWtaQ0lnWkQwaVRUQXVOak0xTnpBeklEQXVOemN5TVRnNVF6QXVOekV3T0RFeklEQXVOemN5TVRnNUlEQXVOemN4TnpBeklEQXVOekV4TXlBd0xqYzNNVGN3TXlBd0xqWXpOakU1UXpBdU56Y3hOekF6SURBdU5UWXhNRGM1SURBdU56RXdPREV6SURBdU5UQXdNVGtnTUM0Mk16VTNNRE1nTUM0MU1EQXhPVU13TGpVMk1EVTVNaUF3TGpVd01ERTVJREF1TkRrNU56QXpJREF1TlRZeE1EYzVJREF1TkRrNU56QXpJREF1TmpNMk1UbERNQzQwT1RrM01ETWdNQzQzTVRFeklEQXVOVFl3TlRreUlEQXVOemN5TVRnNUlEQXVOak0xTnpBeklEQXVOemN5TVRnNVdrMHdMall6TlRjd015QXdMamMwTkRrNE9VTXdMalk1TlRjNU1TQXdMamMwTkRrNE9TQXdMamMwTkRVd015QXdMalk1TmpJM09DQXdMamMwTkRVd015QXdMall6TmpFNVF6QXVOelEwTlRBeklEQXVOVGMyTVRBeUlEQXVOamsxTnpreElEQXVOVEkzTXprZ01DNDJNelUzTURNZ01DNDFNamN6T1VNd0xqVTNOVFl4TkNBd0xqVXlOek01SURBdU5USTJPVEF6SURBdU5UYzJNVEF5SURBdU5USTJPVEF6SURBdU5qTTJNVGxETUM0MU1qWTVNRE1nTUM0Mk9UWXlOemdnTUM0MU56VTJNVFFnTUM0M05EUTVPRGtnTUM0Mk16VTNNRE1nTUM0M05EUTVPRGxhSWlCbWFXeHNQU0lqTUVKQk1FSTNJaTgrSmlONFlUczhMMmMrSmlONFlUczhMMmMrSmlONFlUczhaR1ZtY3o0bUkzaGhPenhqYkdsd1VHRjBhQ0JwWkQwaVkyeHBjREJmTVRVd05GOHlNelkxTVNJK0ppTjRZVHM4Y21WamRDQjNhV1IwYUQwaU1DNDJPQ0lnYUdWcFoyaDBQU0l3TGpZNElpQm1hV3hzUFNKM2FHbDBaU0lnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01DNHhOVGt4T0NBd0xqRTJNREUxTmlraUx6NG1JM2hoT3p3dlkyeHBjRkJoZEdnK0ppTjRZVHM4TDJSbFpuTStKaU40WVRzOEwzTjJaejQ9O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjIiIHZlcnRleD0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjUxOC4wIiB5PSIxMzIuMCIgd2lkdGg9IjkwLjAiIGhlaWdodD0iOTAuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjIxIiB2YWx1ZT0iQ2hhbmdlIFBhc3N3b3JkIiBzdHlsZT0iaXIucmVmPWE1M2RjMDc2LTgyMjYtNGFkOC04YTMwLTcwYjVlZTY2OTc5NDtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1DRC1DSEFOR0UtUEFTU1dPUkQ7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEcxaGMyc2dhV1E5SW0xaGMyc3dYekUxTUROZk1qTTJOakFpSUhOMGVXeGxQU0p0WVhOckxYUjVjR1U2WVd4d2FHRWlJRzFoYzJ0VmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaVBpWWplR0U3UEdOcGNtTnNaU0JqZUQwaU1DNDFJaUJqZVQwaU1DNDFJaUJ5UFNJd0xqVWlJR1pwYkd3OUltSnNZV05ySWk4K0ppTjRZVHM4TDIxaGMycytKaU40WVRzOFp5QnRZWE5yUFNKMWNtd29JMjFoYzJzd1h6RTFNRE5mTWpNMk5qQXBJajRtSTNoaE96eHdZWFJvSUdROUlrMHdMalUyTXpnek15QXdMakl4TkRaRE1DNDBOelE1TVRVZ01DNHlNVFEySURBdU5EQXlOamczSURBdU1qZzJPREkzSURBdU5EQXlOamczSURBdU16YzFOelEyUXpBdU5EQXlOamczSURBdU16ZzFNamN6SURBdU5EQXpPVEl4SURBdU16azBORFV6SURBdU5EQTFOREEwSURBdU5EQXlPVEE0UXpBdU5EQTFPRFF5SURBdU5EQTFOREEwSURBdU5EQTFNRFF4SURBdU5EQTNOVGN6SURBdU5EQXpOekF4SURBdU5EQTRPVEV6VERBdU1qVXdNamcxSURBdU5UWXlNekk1UXpBdU1qTTNOVGszSURBdU5UYzFNREUzSURBdU1qTXdORFk1SURBdU5Ua3lNakkySURBdU1qTXdORFk1SURBdU5qRXdNVGRXTUM0Mk5qTTFPVFpETUM0eU16QTBOamtnTUM0Mk9EY3pOelFnTUM0eU5EazNORFVnTUM0M01EWTJOU0F3TGpJM016VXlNeUF3TGpjd05qWTFTREF1TXpNMU1ETkRNQzR6TlRnNE1EZ2dNQzQzTURZMk5TQXdMak0zT0RBNE5DQXdMalk0TnpNM05DQXdMak0zT0RBNE5DQXdMalkyTXpVNU5sWXdMall6TWpnME0wZ3dMalF5TVRFek9VTXdMalF6T0RFeU15QXdMall6TWpnME15QXdMalExTVRnNU1pQXdMall4T1RBM05DQXdMalExTVRnNU1pQXdMall3TWpBNVZqQXVOVFU1TURNMVNEQXVORGswT1RRMlF6QXVOVEV4TlRVZ01DNDFOVGt3TXpVZ01DNDFNalV3T0RFZ01DNDFORFU0TnpjZ01DNDFNalUyTnprZ01DNDFNamswTVRsRE1DNDFNekF4TkRnZ01DNDFNekExTmprZ01DNDFNelEzTURVZ01DNDFNekUxTkRnZ01DNDFNemt6TWpjZ01DNDFNekl6TWpoTU1DNDFOelExT0RrZ01DNDBPVGN3TmpoRE1DNDFOekV3TkRRZ01DNDBPVGN6TnpNZ01DNDFOamMwTlRZZ01DNDBPVGMxTWprZ01DNDFOak00TXpNZ01DNDBPVGMxTWpsRE1DNDFORGN4TWlBd0xqUTVOelV5T1NBd0xqVXlPVGt4TmlBd0xqUTVNek14T1NBd0xqVXhORFV4TmlBd0xqUTROamN5UXpBdU5UQTRPREUxSURBdU5EZzBNamMySURBdU5UQXlNalk0SURBdU5EZzBPRFl4SURBdU5EazNNRGtnTUM0ME9EZ3lOelZETUM0ME9URTVNVElnTUM0ME9URTJPRGtnTUM0ME9EZzNPVFlnTUM0ME9UYzBOemNnTUM0ME9EZzNPVFlnTUM0MU1ETTJOemxXTUM0MU1qSXhNekZJTUM0ME5EVTNOREZETUM0ME1qZzNOVGNnTUM0MU1qSXhNekVnTUM0ME1UUTVPRGdnTUM0MU16VTVJREF1TkRFME9UZzRJREF1TlRVeU9EZzFWakF1TlRrMU9UTTVTREF1TXpjeE9UTXpRekF1TXpVME9UUTVJREF1TlRrMU9UTTVJREF1TXpReE1UZ2dNQzQyTURrM01EZ2dNQzR6TkRFeE9DQXdMall5TmpZNU1sWXdMalkyTXpVNU5rTXdMak0wTVRFNElEQXVOalkyT1RreklEQXVNek00TkRJM0lEQXVOalk1TnpRM0lEQXVNek0xTURNZ01DNDJOamszTkRkSU1DNHlOek0xTWpORE1DNHlOekF4TWpZZ01DNDJOamszTkRjZ01DNHlOamN6TnpNZ01DNDJOalk1T1RNZ01DNHlOamN6TnpNZ01DNDJOak0xT1RaV01DNDJNVEF4TjBNd0xqSTJOek0zTXlBd0xqWXdNakF4TkNBd0xqSTNNRFl4TXlBd0xqVTVOREU1TVNBd0xqSTNOak00SURBdU5UZzROREkwVERBdU5ESTVOemsySURBdU5ETTFNREE0UXpBdU5EUXdNRGc1SURBdU5ESTBOekUxSURBdU5EUTBNVFU0SURBdU5ERXdNak01SURBdU5EUXhOelV6SURBdU16azJOVE14UXpBdU5EUXdORE15SURBdU16ZzVNREF6SURBdU5ETTVOVGt4SURBdU16Z3lNakF5SURBdU5ETTVOVGt4SURBdU16YzFOelEyUXpBdU5ETTVOVGt4SURBdU16QTNNakE1SURBdU5EazFNamsySURBdU1qVXhOVEF6SURBdU5UWXpPRE16SURBdU1qVXhOVEF6UXpBdU5qTXlOemt6SURBdU1qVXhOVEF6SURBdU5qZzRNRGMySURBdU16QTFNVFkxSURBdU5qZzRNRGMySURBdU16Y3pNamcyUXpBdU5qZzRNRGMySURBdU16ZzJNakUwSURBdU5qZzJNRGswSURBdU16azROamcySURBdU5qZ3lOREU0SURBdU5ERXdOREV6UXpBdU5qazBPRGN6SURBdU5EQTROemc1SURBdU56QTNOamN4SURBdU5ERXdOREEySURBdU56RTVORFExSURBdU5ERTFNalkwUXpBdU56SXpNRFUxSURBdU5EQXhPRGM0SURBdU56STBPVGdnTUM0ek9EYzRNRFFnTUM0M01qUTVPQ0F3TGpNM016STROa013TGpjeU5EazRJREF1TWpnek9UVXhJREF1TmpVeU16TXhJREF1TWpFME5pQXdMalUyTXpnek15QXdMakl4TkRaYUlpQm1hV3hzUFNJak1FSkJNRUkzSWk4K0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0Mk1EQTNNemdnTUM0ek5qY3hNelpETUM0Mk1UYzNNak1nTUM0ek5qY3hNellnTUM0Mk16RTBPVElnTUM0ek5UTXpOamNnTUM0Mk16RTBPVElnTUM0ek16WXpPREpETUM0Mk16RTBPVElnTUM0ek1Ua3pPVGdnTUM0Mk1UYzNNak1nTUM0ek1EVTJNamtnTUM0Mk1EQTNNemdnTUM0ek1EVTJNamxETUM0MU9ETTNOVFFnTUM0ek1EVTJNamtnTUM0MU5qazVPRFVnTUM0ek1Ua3pPVGdnTUM0MU5qazVPRFVnTUM0ek16WXpPREpETUM0MU5qazVPRFVnTUM0ek5UTXpOamNnTUM0MU9ETTNOVFFnTUM0ek5qY3hNellnTUM0Mk1EQTNNemdnTUM0ek5qY3hNelphSWlCbWFXeHNQU0lqTUVKQk1FSTNJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzQzTkRVek1qWWdNQzQwTmprNE5EUkRNQzQzTWpBeU1UTWdNQzQwTkRRM016TWdNQzQyTnprME9Ua2dNQzQwTkRRM016TWdNQzQyTlRRek9EWWdNQzQwTmprNE5EUk1NQzQwTnpjMk9UTWdNQzQyTkRZMU0wTXdMalEyTXpBeU9DQXdMalkyTVRFNU5DQXdMalExTWpZeU5TQXdMalkzT1RVMk9DQXdMalEwTnpVNU5TQXdMalk1T1RZNE9Fd3dMalF6TlRFeE9TQXdMamMwT1RVNE9VTXdMalF6TURVeU1TQXdMamMyTnprM09DQXdMalEwTnpFM09TQXdMamM0TkRZek5TQXdMalEyTlRVMk9TQXdMamM0TURBek9Fd3dMalV4TlRRM015QXdMamMyTnpVMk0wTXdMalV6TlRVNU15QXdMamMyTWpVek15QXdMalUxTXprMk55QXdMamMxTWpFeklEQXVOVFk0TmpNeUlEQXVOek0zTkRZMVREQXVOelExTXpJMUlEQXVOVFl3TnpjNVF6QXVOemN3TkRNNElEQXVOVE0xTmpZNElEQXVOemN3TkRNNElEQXVORGswT1RVMUlEQXVOelExTXpJMklEQXVORFk1T0RRMFdpSWdabWxzYkQwaUl6QkNRVEJDTnlJdlBpWWplR0U3UEM5blBpWWplR0U3UEM5emRtYys7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iMiIgdmVydGV4PSIxIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNjQ3LjAiIHk9IjEzMy4wIiB3aWR0aD0iOTAuMCIgaGVpZ2h0PSI5MC4wIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjMiIHZhbHVlPSJBUEkgZ2F0ZXdheSAtJmd0OyBSZXNldCBQYXNzd29yZCIgc3R5bGU9ImlyLnJlZj00YWY2Mzc1NC0yMmEzLTQ4ODEtYTBlZC1lNWY5MzczYzI2NTY7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yOyIgcGFyZW50PSIyIiBzb3VyY2U9IjEzIiB0YXJnZXQ9IjIwIiBlZGdlPSIxIj4KICAgICAgPG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIyMiIgdmFsdWU9IkFQSSBnYXRld2F5IC0mZ3Q7IExvZ2luIiBzdHlsZT0iaXIucmVmPTgyNWNkMDA3LWMyMGMtNDA5OS1hNjcwLTk4MmFmY2IwNzlmZjtlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7ZXhpdFg9MTtleGl0WT0wLjU7ZXhpdER4PTA7ZXhpdER5PTA7c291cmNlUGVyaW1ldGVyU3BhY2luZz05O2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7IiBwYXJlbnQ9IjIiIHNvdXJjZT0iMTMiIHRhcmdldD0iMTciIGVkZ2U9IjEiPgogICAgICA8bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjI1IiB2YWx1ZT0iQVBJIGdhdGV3YXkgLSZndDsgVXNlciBSZWdpc3RyYXRpb24iIHN0eWxlPSJpci5yZWY9ZmM1YTlhMWMtM2VjYy00OGUyLWIzYTQtZjEwYzMyMzM0N2JhO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjsiIHBhcmVudD0iMiIgc291cmNlPSIxMyIgdGFyZ2V0PSIxOCIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjQiIHZhbHVlPSJVc2VyIFByb2ZpbGUgLSZndDsgTG9naW4iIHN0eWxlPSJpci5yZWY9Y2NlMjVmOGItMjMyZi00NzFiLWE5NGMtZjhkM2YzOWVkZmI5O2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtleGl0WD0wLjU7ZXhpdFk9MTtleGl0RHg9MDtleGl0RHk9MDtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjsiIHBhcmVudD0iMiIgc291cmNlPSIxNiIgdGFyZ2V0PSIxNyIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjYiIHZhbHVlPSJVc2VyIFByb2ZpbGUgLSZndDsgQ2hhbmdlIFBhc3N3b3JkIiBzdHlsZT0iaXIucmVmPWVhY2MzMjFlLTQxMDQtNGQyMy04MGE3LTFlMTA4ZDYzNGMyMztlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7c291cmNlUGVyaW1ldGVyU3BhY2luZz05O2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7IiBwYXJlbnQ9IjIiIHNvdXJjZT0iMTYiIHRhcmdldD0iMjEiIGVkZ2U9IjEiPgogICAgICA8bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjMwIiB2YWx1ZT0iUG9zdGdyZVNRTCIgc3R5bGU9ImlyLnJlZj1lNTdmOTcyOC1hMzQ1LTRkMzgtYWE3ZS02Zjc5MjVkNWM0YmM7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9cG9zdGdyZXNxbDtpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJSFpwWlhkQ2IzZzlJakFnTUNBeElERWlJR1pwYkd3OUltNXZibVVpUGlZamVHRTdQSE4wZVd4bFBpWWplR0U3SUNBZ0lDNXBZMjl1TFdacGJHd2dleVlqZUdFN0lDQWdJQ0FnSUNCbWFXeHNPaUFqTVRGQk9FTkdPeVlqZUdFN0lDQWdJSDBtSTNoaE96d3ZjM1I1YkdVK0ppTjRZVHM4WnlCamJHbHdMWEJoZEdnOUluVnliQ2dqWTJ4cGNEQXBJajRtSTNoaE96eHdZWFJvSUdacGJHd3RjblZzWlQwaVpYWmxibTlrWkNJZ1kyeHBjQzF5ZFd4bFBTSmxkbVZ1YjJSa0lpQmtQU0pOTUM0NE16azJOamdnTUM0eU5EYzVOVFpETUM0NE16azJOamdnTUM0ek5EQTNOellnTUM0Mk9EYzBNek1nTUM0ME1UVTVOVFlnTUM0ME9UazJOamdnTUM0ME1UVTVOVFpETUM0ek1URTVNRE1nTUM0ME1UVTVOVFlnTUM0eE5UazJOamdnTUM0ek5EQTNOellnTUM0eE5UazJOamdnTUM0eU5EYzVOVFpETUM0eE5UazJOamdnTUM0eE5UVXhNellnTUM0ek1URTVNRE1nTUM0d056azVOVFl4SURBdU5EazVOalk0SURBdU1EYzVPVFUyTVVNd0xqWTROelF6TXlBd0xqQTNPVGsxTmpFZ01DNDRNemsyTmpnZ01DNHhOVFV4TXpZZ01DNDRNemsyTmpnZ01DNHlORGM1TlRaYVRUQXVPRE01TmpZNElEQXVNemMyTVRneVF6QXVPREU0TVRnMklEQXVNemswT0RVM0lEQXVOemswTWpreElEQXVOREV3TmpNeklEQXVOelk0TmpBNElEQXVOREl6TURrMlF6QXVOamsyTkRReklEQXVORFU0TnpFeUlEQXVOakF4TXpJNElEQXVORGM0T1RVMklEQXVORGs1TmpZNElEQXVORGM0T1RVMlF6QXVNems0TURBNElEQXVORGM0T1RVMklEQXVNekF5T0RreklEQXVORFU0TnpFeUlEQXVNak13TnpJNElEQXVOREl6TURrMlF6QXVNakExTURRMklEQXVOREV3TmpNeklEQXVNVGd4TVRVZ01DNHpPVFE0TlRjZ01DNHhOVGsyTmpnZ01DNHpOell4T0RKV01DNDNOVEU1TlRaRE1DNHhOVGsyTmpnZ01DNDRORFEzTnpZZ01DNHpNVEU1TURNZ01DNDVNVGs1TlRZZ01DNDBPVGsyTmpnZ01DNDVNVGs1TlRaRE1DNDJPRGMwTXpNZ01DNDVNVGs1TlRZZ01DNDRNemsyTmpnZ01DNDRORFEzTnpZZ01DNDRNemsyTmpnZ01DNDNOVEU1TlRaV01DNHpOell4T0RKYVRUQXVOVGcwTnpZMElEQXVOVEU1T1RjNFNEQXVOVGczTVRnNFF6QXVOakV5TkRRNUlEQXVOVEl3TVRjM0lEQXVOalF5TlRreElEQXVOVEkzTkRFMElEQXVOalkwT0RZMUlEQXVOVFUxT0RrMVF6QXVOalkzTnpBeklEQXVOVFU1TlRFMElEQXVOalk1T1RJM0lEQXVOVFk0TVRjM0lEQXVOalk1TnpZeElEQXVOVGd3TVRJNFF6QXVOalk1TlRZeElEQXVOVGt5TURjNElEQXVOalkzTWpnNElEQXVOakEzTVRZMUlEQXVOall6TURBMUlEQXVOakl6T0RFeVF6QXVOalUxTURBMUlEQXVOalUwTnpNMElEQXVOalF3TURBeElEQXVOamt4SURBdU5qRTVNVGczSURBdU56SXpOemhNTUM0Mk1UY3lPVFVnTUM0M01qRXpPVU13TGpZeU5URTJNeUF3TGpjd09ETXlPQ0F3TGpZeU5qWXlNeUF3TGpZNU5UQXhOaUF3TGpZeU5qQXlOaUF3TGpZNE1qbERNQzQyTWpVM05USWdNQzQyTnpjeklEQXVOakkxTVRFeklEQXVOamN4T1RBeklEQXVOakkwTlRBeklEQXVOalkyTnpZMlF6QXVOakl6TnpBNUlEQXVOall3TURjeUlEQXVOakl5T1RZM0lEQXVOalV6T0RFNUlEQXVOakl6TVRVMUlEQXVOalE0TVRJNFF6QXVOakl6TXpRMElEQXVOalF5TURJeUlEQXVOakkwTVRRNElEQXVOak0yTmprMElEQXVOakkwT1RRM0lEQXVOak14TkRBeVF6QXVOakkxT1RZeUlEQXVOakkwTmpZNUlEQXVOakkyT1RZNElEQXVOakUzT1RrMUlEQXVOakkyTmprZ01DNDJNRGs0TlRSTU1DNDJNalkzT0RrZ01DNDJNRGsyTXpoRE1DNDJNamN3TlRVZ01DNDJNRGcxTWpZZ01DNDJNamN3TWpJZ01DNDJNRGM0TnprZ01DNDJNalk1T0RnZ01DNDJNRGN5TkRoRE1DNDJNalk1TURVZ01DNDJNRFU1T0RjZ01DNDJNalkyTnpNZ01DNDJNRFEzTnpVZ01DNDJNall6TWpVZ01DNDJNRE16TXpGRE1DNDJNalUyTWpnZ01DNDJNREEwTmlBd0xqWXlORE01T1NBd0xqVTVOamMxT0NBd0xqWXlNalUzTkNBd0xqVTVNak0zTjBNd0xqWXhOemMwTnlBd0xqVTRNRGszSURBdU5qRXhOREk1SURBdU5UY3dNalUxSURBdU5qQXpOemcxSURBdU5UWXdOVEE1UXpBdU5Ua3lOemd4SURBdU5UUTJORE0xSURBdU5UYzNNVFl6SURBdU5UTXlNekkzSURBdU5UVTJORGd5SURBdU5USXpNVFkxUXpBdU5UWTFOemd5SURBdU5USXhNVGM0SURBdU5UYzFNalUxSURBdU5USXdNVEV4SURBdU5UZzBOelkwSURBdU5URTVPVGM0V2swd0xqUTJNek15SURBdU5UTTVNRGd5UXpBdU5EY3pPVGt4SURBdU5UTXdNakF5SURBdU5EZzRNRFkzSURBdU5USTBNamMzSURBdU5UQTNOamcxSURBdU5USTBNakkzVmpBdU5USTBNalpJTUM0MU1EazFPVFJETUM0MU5URXpNaUF3TGpVeU5EazBNU0F3TGpVM09ETXlOQ0F3TGpVME5qQTROaUF3TGpVNU5UQXdOU0F3TGpVMk56UXhORU13TGpZd01qQXlNeUF3TGpVM05qTTNNeUF3TGpZd056Z3pNeUF3TGpVNE5qSXhOeUF3TGpZeE1qSTRNeUF3TGpVNU5qWTVNa013TGpZeE1qazRPQ0F3TGpVNU9ETTJOU0F3TGpZeE16TTJOaUF3TGpVNU9UVTRNU0F3TGpZeE16Y3pPU0F3TGpZd01EYzRNa013TGpZeE16ZzROQ0F3TGpZd01USTBPU0F3TGpZeE5EQXlPU0F3TGpZd01UY3hOQ0F3TGpZeE5ERTVNaUF3TGpZd01qSXdNa013TGpVNU5EVXdOeUF3TGpZd01ESXhNU0F3TGpVNE1UTTVOU0F3TGpZd016YzJNeUF3TGpVM016a3lOaUF3TGpZeE1qTXlOME13TGpVMk5UUTVOU0F3TGpZeU1UazNJREF1TlRZMU9UYzJJREF1TmpNMU5qUTNJREF1TlRZNU1qWXlJREF1TmpRNE9EVTRRekF1TlRjeU5UWTFJREF1TmpZeU1EZzJJREF1TlRjNE9USXlJREF1TmpjMU5qWXpJREF1TlRnME56WTBJREF1TmpnMk9EWTNRekF1TlRnM016STNJREF1TmpreE56Y3pJREF1TlRnNU56ZzNJREF1TmprMk1qQTNJREF1TlRreE9EUXpJREF1TmprNU9URk1NQzQxT1RJMk9ERWdNQzQzTURFME1qTk1NQzQxT1RZNU5EY2dNQzQzTURrME5FTXdMalU1T1RjeklEQXVOekUyTURJeUlEQXVOakF6TkRVMUlEQXVOekl5TVRZMklEQXVOakE0TURBeElEQXVOekkzTmpoTU1DNDJNVEl3TXpRZ01DNDNNek13TnpSRE1DNDJNVEE0TWpNZ01DNDNNek0wTWpNZ01DNDJNRGt6TkRVZ01DNDNNek01TURRZ01DNDJNRGMzTmpnZ01DNDNNelEyTVRoRE1DNDJNRFEyTVRVZ01DNDNNell3TkRVZ01DNDJNREE1TmpRZ01DNDNNemcyT0RRZ01DNDFPVGcyTURZZ01DNDNORE5ETUM0MU9UWXpNVFlnTUM0M05EY3hPVGtnTUM0MU9UVXlOVFFnTUM0M05USTNNRGtnTUM0MU9UVTFPRFlnTUM0M05UazRPRU13TGpVNU5EZzFOU0F3TGpjMk9UTTVJREF1TlRnNE9ERTBJREF1T0RFNU9UTWdNQzQxT0RVNE1TQXdMamd6TnpNMU4wTXdMalU0TXpnd01TQXdMamcwT0RrNU1pQXdMalU0TURZMk5TQXdMamcxTmpVNU5DQXdMalUzTlRReE9TQXdMamcyTWpBMU5FTXdMalUzTURFMU9DQXdMamcyTnpVeE5TQXdMalUyTWpJNU1TQXdMamczTVRNeE5pQXdMalUwT1RVME5DQXdMamczTkRBMU5FTXdMalV6TkRnek9TQXdMamczTnpJd09DQXdMalV5TmpjNE9TQXdMamczTkRBMU5DQXdMalV5TVRFM09TQXdMamcyT1RNME1VTXdMalV4TlRVMk9TQXdMamcyTkRZeElEQXVOVEV5TkRZMUlEQXVPRFUzTmpVMklEQXVOVEV3TXpReElEQXVPRFV5TXpRMVF6QXVOVEE1TmpreklEQXVPRFV3TnpVeElEQXVOVEE0TmpnZ01DNDRORFl3TXpnZ01DNDFNRGM1TmpjZ01DNDRNems0TkRkRE1DNDFNRGN5TlRRZ01DNDRNek0yTXprZ01DNDFNRFkyT0RrZ01DNDRNalUzTnpJZ01DNDFNRFl6TURnZ01DNDRNVFk0TkRORE1DNDFNRFUxTXpRZ01DNDNPVFl4TnlBd0xqVXdOVFEyTXlBd0xqYzNOVFEzT0NBd0xqVXdOakE1TVNBd0xqYzFORGd3TVVNd0xqVXdOakV4T0NBd0xqYzFOREE0TXlBd0xqVXdOakF3TlNBd0xqYzFNek0yTnlBd0xqVXdOVGMxT1NBd0xqYzFNalk1TTBNd0xqVXdOVFV5TnlBd0xqYzFNVEExSURBdU5UQTFNVEk1SURBdU56UTVORFUySURBdU5UQTBOVGd4SURBdU56UTNPVGM1UXpBdU5UQXlORGN6SURBdU56UXlNek0ySURBdU5EazROVGN6SURBdU56TTNNemtnTUM0ME9USTRPVFlnTUM0M016VXdNek5ETUM0ME9URXdNemNnTUM0M016UXlNellnTUM0ME9EYzVNVGNnTUM0M016STVNRGdnTUM0ME9ETTVNek1nTUM0M016TXlORXd3TGpRNE1UYzVNaUF3TGpjek16WTNNa013TGpRNE16TXhNaUF3TGpjeU56azNJREF1TkRnMU1UUTJJREF1TnpJeU16VTNJREF1TkRnM01qZzNJREF1TnpFMk9EVTVRekF1TkRnNE1UTTJJREF1TnpFME5UY3pJREF1TkRnNU1qQTJJREF1TnpFeU1UYzJJREF1TkRrd016Y2dNQzQzTURrMU5qaERNQzQwT1RZNU16SWdNQzQyT1RRNE5qSWdNQzQxTURZME9Ea2dNQzQyTnpNME5EVWdNQzQwT1RZMU5qVWdNQzQyTWpjMU0wTXdMalE1TkRFeU5DQXdMall4TmpJM055QXdMalE0TnpRd015QXdMall3T0RnMU9DQXdMalEzT1RJM0lEQXVOakExTnpBMVF6QXVORGN4TVRNM0lEQXVOakF5TlRVeElEQXVORFl5TVRVNElEQXVOakF6TVRRNElEQXVORFV6T0RJMklEQXVOakExTURVM1F6QXVORFExTkRrMElEQXVOakEyT1RneklEQXVORE0zTnpFZ01DNDJNVEF6TURJZ01DNDBNekUzT0RVZ01DNDJNVE0yTWpKTU1DNDBNekUxTmpnZ01DNDJNVE0zTlRWRE1DNDBNekl6TkRnZ01DNDJNRE0zTWprZ01DNDBNelF6TWpNZ01DNDFPRGc1TlRnZ01DNDBOREF3T0RNZ01DNDFOek0yT0RoRE1DNDBORFE1TWprZ01DNDFOakE0TWpVZ01DNDBOVEl6TVRVZ01DNDFORGd5TmlBd0xqUTJNek15SURBdU5UTTVNRGd5V2swd0xqTTVNVEV6TnlBd0xqVXlOVEkzTTB3d0xqTTVOelEwTkNBd0xqVXlOVEE1VERBdU5EQXpOek0wSURBdU5USTFNalUyUXpBdU5ESXpNeklnTUM0MU1qWXlNVGtnTUM0ME5ERTBNVEVnTUM0MU16RXpNekVnTUM0ME5URTJNRElnTUM0MU16UTJPRE5ETUM0ME5ERXlNamdnTUM0MU5EUTROREVnTUM0ME16UXpNRGNnTUM0MU5UY3pPRGtnTUM0ME1qazJOaUF3TGpVMk9UY3pPRU13TGpReU16RTBPU0F3TGpVNE56Y3dNaUF3TGpReE9UZ3lOQ0F3TGpZd05qWTRJREF1TkRFNU9ETTBJREF1TmpJMU56ZzRUREF1TkRFNU9EVWdNQzQyTWpVNE9EZFdNQzQyTWpVNU4xWXdMall5TmpJNE5rTXdMalF4T1RnMUlEQXVOakkzT1RJNUlEQXVOREU1T1RjM0lEQXVOak13TURFMklEQXVOREl3TVRNMUlEQXVOak15TmpFelF6QXVOREl3TXpJNUlEQXVOak0xT0RFeklEQXVOREl3TlRjZ01DNDJNemszT0RZZ01DNDBNakEyT0NBd0xqWTBORFkxT1VNd0xqUXlNRGczT1NBd0xqWTFNemN5TVNBd0xqUXlNRFkwT0NBd0xqWTJOVEU1SURBdU5ERTRPVE00SURBdU5qYzNORFUyUXpBdU5ERTNOVEU1SURBdU5qZzNNRGsySURBdU5ERTROVFE1SURBdU5qazJPVE00SURBdU5ESXhPVE16SURBdU56QTJNRGMxUXpBdU5ESTFNekU1SURBdU56RTFNakV5SURBdU5ETXdPVFE1SURBdU56SXpNelVnTUM0ME16Z3pNRGNnTUM0M01qazNNemhETUM0ME1qYzVNemdnTUM0M05EQTNOU0F3TGpReE56a3hPQ0F3TGpjMU1qQTROaUF3TGpRd09ESTJOU0F3TGpjMk16Y3pRekF1TkRBeU9UY2dNQzQzTnpBd09EY2dNQzR6T1RnMk16a2dNQzQzTnpJeE5qSWdNQzR6T1RVd016Y2dNQzQzTnpJek1qaERNQzR6T1RFME5USWdNQzQzTnpJME56Y2dNQzR6T0RjMU1ESWdNQzQzTnpBM01ERWdNQzR6T0RJNU5UUWdNQzQzTmpZek1ETkRNQzR6TnpNNU1qVWdNQzQzTlRjMU1EWWdNQzR6TmpRME1UUWdNQzQzTXpnNU1UY2dNQzR6TlRZMU5qUWdNQzQzTVRjMU5UWkRNQzR6TkRnM015QXdMalk1TmpFNU5TQXdMak0wTWpJd055QXdMalkzTWpBeE1pQXdMak16TnpZd09TQXdMalkxTVRRMk5FTXdMak16TWprNU5TQXdMall6TURreE5pQXdMak16TURNd05pQXdMall4TXpZeU1pQXdMak15T1RrNU1TQXdMall3TnpRME4wTXdMak15T0RNMk5DQXdMalUzTkRnek15QXdMak16TlRnek5DQXdMalUxTlRFek1pQXdMak0wTnpFNE5pQXdMalUwTXpFeE5VTXdMak0xT0RVeU1pQXdMalV6TVRBNU9DQXdMak0zTkRNM015QXdMalV5TmpJek5TQXdMak01TVRFek55QXdMalV5TlRJM00xcE5NQzQxT0RJek1EZ2dNQzQyTVRrMk1UTkRNQzQxT0RVMk1qZ2dNQzQyTVRVNE1UTWdNQzQxT1RFNU5URWdNQzQyTVRJNU1EZ2dNQzQyTURNeU1qRWdNQzQyTVRJM05UbERNQzQyTURjek1qY2dNQzQyTVRJM05qRWdNQzQyTVRFME15QXdMall4TXpBeU9DQXdMall4TlRVd015QXdMall4TXpVMU5VTXdMall4TlRNNE5DQXdMall4T0RjMk9DQXdMall4TkRZNE55QXdMall5TXpVNE55QXdMall4TXprME1pQXdMall5T0Rjek4wTXdMall4TXpFeU5pQXdMall6TkRNM055QXdMall4TWpJMU1pQXdMalkwTURReE15QXdMall4TWpBeE9DQXdMalkwTnpjNU5rTXdMall4TVRjM09TQXdMalkxTlRBek1TQXdMall4TWpZMU5DQXdMalkyTWpJeE1pQXdMall4TXpVeE9TQXdMalkyT1RNeE5VTXdMall4TkRBNU9DQXdMalkzTkRBM05DQXdMall4TkRZM015QXdMalkzT0RjNU9TQXdMall4TkRrd05TQXdMalk0TXpRNE1VTXdMall4TlRNMU5DQXdMalk1TWprd09DQXdMall4TkRVM015QXdMamN3TVRrMU5DQXdMall4TURJd09TQXdMamN4TVRFMk5rTXdMall3T1RFM09TQXdMamN3T1RNMElEQXVOakE0TVRZM0lEQXVOekEzTXpneElEQXVOakEzTWpVMElEQXVOekExTVRVM1F6QXVOakEyTXpjMklEQXVOekF6TURNMUlEQXVOakExTURBMklEQXVOekF3TlRnNUlEQXVOakF6TVRZNUlEQXVOamszTXpBNVREQXVOakF5TkRBM0lEQXVOamsxT1RRMlF6QXVOakF3TWlBd0xqWTVNVGszT1NBd0xqVTVOelEyTWlBd0xqWTROekE1T1NBd0xqVTVORFkwSURBdU5qZ3hOamN5UXpBdU5UZzRPVGszSURBdU5qY3dPRE0wSURBdU5UZ3lPVGc0SURBdU5qVTNOemc0SURBdU5UZ3dNRGcwSURBdU5qUTJNVEpETUM0MU56Y3hOak1nTUM0Mk16UTBOamdnTUM0MU56YzJNVEVnTUM0Mk1qVXdNRGdnTUM0MU9ESXpNRGdnTUM0Mk1UazJNVE5hVFRBdU5EVTJNek15SURBdU5qRTFPRGsyUXpBdU5EVTVOamcwSURBdU5qRTFNVEV4SURBdU5EWXpNVEV6SURBdU5qRTBOams1SURBdU5EWTJOVFUzSURBdU5qRTBOalkzUXpBdU5EWTVOVEUySURBdU5qRTBOakF5SURBdU5EY3lORFl6SURBdU5qRTFNRGMwSURBdU5EYzFNalV6SURBdU5qRTJNRFl4UXpBdU5EZ3dNak15SURBdU5qRTNPVGczSURBdU5EZ3pPRFVnTUM0Mk1qRTBNRFlnTUM0ME9EVTJOemNnTUM0Mk1qazROekZETUM0ME9UUTVNVFlnTUM0Mk56STJNaklnTUM0ME9EYzBOQ0F3TGpZNE9UQTNNeUF3TGpRNE1EYzJOU0F3TGpjd016YzFPVU13TGpRM09UTTNNU0F3TGpjd05qZ3lPQ0F3TGpRM09EQXhNU0F3TGpjd09UZ3lJREF1TkRjMk9EUTNJREF1TnpFeU9UVTRRekF1TkRjME5USXpJREF1TnpFNU1UZ3lJREF1TkRjeU1UazVJREF1TnpJMU1Ea3hJREF1TkRjd056ZzVJREF1TnpNd09URTNRekF1TkRRMk5UZzVJREF1TnpNd09EZzBJREF1TkRJMU9Ua3lJREF1TnpBM016Z3hJREF1TkRJNU9UVTRJREF1TmpjNE9UazVRekF1TkRNeE56ZzFJREF1TmpZMU9UTTNJREF1TkRNeU1ERTJJREF1TmpVek9EY3hJREF1TkRNeE9ERTNJREF1TmpRME5ERkRNQzQwTXpFMk56TWdNQzQyTXpneE5EUWdNQzQwTXpFek9DQXdMall6TXpNek15QXdMalF6TVRFNU1pQXdMall6TURJek5rTXdMalF6TVRFeU1TQXdMall5T1RBMklEQXVORE14TURZMUlEQXVOakk0TVRNeElEQXVORE14TURNM0lEQXVOakkzTkRZMFREQXVORE14TkRBeUlEQXVOakkzTVRNeVF6QXVORE16TWpJeElEQXVOakkxTnpBMklEQXVORE0xTVRVNUlEQXVOakkwTkRRZ01DNDBNemN4T1RVZ01DNDJNak16TkRoRE1DNDBORE15TVRRZ01DNDJNakF3TWpVZ01DNDBORGsyTlRFZ01DNDJNVGMxTVRrZ01DNDBOVFl6TXpJZ01DNDJNVFU0T1RaYVRUQXVOVGs0TnpnNUlEQXVOakU0TURVelNEQXVOVGszT1RaV01DNDJNVGd3TUROTU1DNDFPVFV6TURRZ01DNDJNVGd5TVRsRE1DNDFPVEk0TmpRZ01DNDJNVGcxT0RRZ01DNDFPVEEzTURZZ01DNDJNVGt5TkRnZ01DNDFPRGt4TVRJZ01DNDJNakF4TkRSRE1DNDFPRGd6TnpVZ01DNDJNakExTVRJZ01DNDFPRGMzTVRVZ01DNDJNakV3TVRrZ01DNDFPRGN4TnpFZ01DNDJNakUyTXpoTU1DNDFPRFkyTURNZ01DNDJNakkyTWpoTU1DNDFPRFkwTnpNZ01DNDJNak0zTmpORE1DNDFPRFkyTWlBd0xqWXlORFUwT1NBd0xqVTROams0TXlBd0xqWXlOVEkzT0NBd0xqVTROelV5SURBdU5qSTFPRGN4UXpBdU5UZzNOemd4SURBdU5qSTJNVGc0SURBdU5UZzRNRFl4SURBdU5qSTJORGc1SURBdU5UZzRNelU1SURBdU5qSTJOemN5UXpBdU5UZzROelk0SURBdU5qSTNNVFlnTUM0MU9Ea3lNRGtnTUM0Mk1qYzFNVFFnTUM0MU9EazJOemNnTUM0Mk1qYzRNamxETUM0MU9URTJOVGNnTUM0Mk1qa3lNaUF3TGpVNU5EQTRJREF1TmpJNU9ESTVJREF1TlRrMk5EZ3lJREF1TmpJNU5UTTVRekF1TlRrNE9UVWdNQzQyTWpreE1USWdNQzQyTURFeU1EVWdNQzQyTWpjNE56UWdNQzQyTURJNE9Ea2dNQzQyTWpZd01rTXdMall3TXpNeU1TQXdMall5TlRVM05pQXdMall3TXpjeE5pQXdMall5TlRBNU55QXdMall3TkRBMk9DQXdMall5TkRVNE9FTXdMall3TkRNd015QXdMall5TkRJME9DQXdMall3TkRVeE9TQXdMall5TXpnNU5TQXdMall3TkRjeE5DQXdMall5TXpVelF6QXVOakExTVRJMUlEQXVOakl5T0RVNElEQXVOakExTXpJNElEQXVOakl5TURjNElEQXVOakExTWprMUlEQXVOakl4TWpsTU1DNDJNRFV6TVRJZ01DNDJNakV4TlRkTU1DNDJNRFE0T0RNZ01DNDJNakF4TVRKTU1DNDJNRFF3TmpjZ01DNDJNVGt6TXpGRE1DNDJNRE0zTnpNZ01DNDJNVGt4TXpnZ01DNDJNRE0wTlRFZ01DNDJNVGc1TnlBd0xqWXdNekE1T1NBd0xqWXhPRGd5TlVNd0xqWXdNalk1TlNBd0xqWXhPRFkxT1NBd0xqWXdNakkxTlNBd0xqWXhPRFV5TlNBd0xqWXdNVGMzTnlBd0xqWXhPRFF4T0VNd0xqWXdNVEE1TmlBd0xqWXhPREkxTVNBd0xqWXdNRE16TmlBd0xqWXhPREUwTkNBd0xqVTVPVFV4T1NBd0xqWXhPREE0T0VNd0xqVTVPVEk0SURBdU5qRTRNRGN5SURBdU5UazVNRE0zSURBdU5qRTRNRFl4SURBdU5UazROemc1SURBdU5qRTRNRFV6V2swd0xqUTNNRGt5TWlBd0xqWXlNVEExTjB3d0xqUTJPREUyTmlBd0xqWXlNRGcwTWt3d0xqUTJPREUwT1NBd0xqWXlNRGt3T0VNd0xqUTJOalF5TlNBd0xqWXlNRGd5TVNBd0xqUTJORFk1T1NBd0xqWXlNVEEwTmlBd0xqUTJNekExTkNBd0xqWXlNVFUzTWtNd0xqUTJNVFl4SURBdU5qSXlNRGcySURBdU5EWXdNVE16SURBdU5qSXpNREUySURBdU5EVTVPRGcwSURBdU5qSTBPREE0UXpBdU5EVTVOemM0SURBdU5qSTFPRE0ySURBdU5EWXdNREUzSURBdU5qSTJPRGNnTUM0ME5qQTFOalVnTUM0Mk1qYzNORFpETUM0ME5qRXdPRFFnTUM0Mk1qZzNORElnTUM0ME5qRTNORE1nTUM0Mk1qazJOVGtnTUM0ME5qSTFNak1nTUM0Mk16QTBOamhETUM0ME5qUXpOVFVnTUM0Mk16STBOemdnTUM0ME5qWTRNU0F3TGpZek16Z3hNU0F3TGpRMk9UUTVOQ0F3TGpZek5ESTFNa013TGpRM01qRXhPU0F3TGpZek5EVTNOU0F3TGpRM05EYzNNU0F3TGpZek16a3dOaUF3TGpRM05qa3pJREF1TmpNeU16YzNRekF1TkRjM09ESTBJREF1TmpNeE56Z2dNQzQwTnpnMk1qUWdNQzQyTXpFd05UTWdNQzQwTnprek1ETWdNQzQyTXpBeU1UbERNQzQwTnprNU5UWWdNQzQyTWprMU1EVWdNQzQwT0RBek9Ea2dNQzQyTWpnMk1UZ2dNQzQwT0RBMU5EZ2dNQzQyTWpjMk5qTkRNQzQwT0RBMU56SWdNQzQyTWpjME1qa2dNQzQwT0RBMU56UWdNQzQyTWpjeE9UUWdNQzQwT0RBMU5UUWdNQzQyTWpZNU5qRkRNQzQwT0RBMU16RWdNQzQyTWpZMk9Ea2dNQzQwT0RBME56Y2dNQzQyTWpZME1pQXdMalE0TURNNU5DQXdMall5TmpFMU9VTXdMalE0TURJMElEQXVOakkxTmpjeklEQXVORGM1T1RnM0lEQXVOakkxTWpJMUlEQXVORGM1TmpVeElEQXVOakkwT0RReVF6QXVORGM1TURNMUlEQXVOakkwTVRFNUlEQXVORGM0TWpnMklEQXVOakl6TlRJeUlEQXVORGMzTkRRMElEQXVOakl6TURneVF6QXVORGMxTnpFNElEQXVOakl5TURnMklEQXVORGN6TkRZeElEQXVOakl4TkRBMklEQXVORGN3T1RJeUlEQXVOakl4TURVM1drMHdMall4T0RRNUlEQXVOelF5TnpNMFREQXVOakU0TlRRZ01DNDNOREkzTVRoRE1DNDJNakF5TURNZ01DNDNORFF3T1NBd0xqWXlNakEySURBdU56UTFNVGt5SURBdU5qSTBNRFV4SURBdU56UTJNREl4UXpBdU5qTXlNRFk0SURBdU56UTVNekl6SURBdU5qUTFNVFEySURBdU56VXdOakF5SURBdU5qWTRNalkySURBdU56UTFPREl4UXpBdU5qWXpOVFkwSURBdU56UTVPVFUwSURBdU5qVTRNamt6SURBdU56VXpNemt4SURBdU5qVXlOakUySURBdU56VTJNREk1UXpBdU5qUTFOamswSURBdU56VTVNalE1SURBdU5qTXlOalkxSURBdU56WXhOekl5SURBdU5qSXlNRGMxSURBdU56WXhPRE00UXpBdU5qRTJOelkwSURBdU56WXhPVEl4SURBdU5qRXlJREF1TnpZeE16VTNJREF1TmpBNU1UWXlJREF1TnpZd05EazBRekF1TmpBNE1qZzNJREF1TnpZd01qUXhJREF1TmpBM05EVTNJREF1TnpVNU9EUTVJREF1TmpBMk56QTNJREF1TnpVNU16TXlRekF1TmpBMk5EUXhJREF1TnpVek5UY3lJREF1TmpBM016TTNJREF1TnpVd01UZzJJREF1TmpBNE16Z3lJREF1TnpRNE1qYzRRekF1TmpBNU1qSTJJREF1TnpRMk5qUTVJREF1TmpFd05qTTRJREF1TnpRMU16ZzFJREF1TmpFeU16VWdNQzQzTkRRM01qWkRNQzQyTVRNeU56WWdNQzQzTkRRek1UY2dNQzQyTVRReU9Ua2dNQzQzTkRRd01qSWdNQzQyTVRVME16VWdNQzQzTkRNMk9UVkRNQzQyTVRZek56SWdNQzQzTkRNME1qVWdNQzQyTVRjek9EY2dNQzQzTkRNeE16SWdNQzQyTVRnME9TQXdMamMwTWpjek5GcE5NQzQwT0RRNE9UY2dNQzQzTkRReU56aElNQzQwT0RVeU5EVldNQzQzTkRRek1URkRNQzQwT0RZd01USWdNQzQzTkRRME1EWWdNQzQwT0RZM05qY2dNQzQzTkRRMU9ESWdNQzQwT0RjME9UUWdNQzQzTkRRNE16WkRNQzQwT0RjNE9ESWdNQzQzTkRRNU56RWdNQzQwT0RneU5qRWdNQzQzTkRVeE1qZ2dNQzQwT0RnMk16RWdNQzQzTkRVek1EZERNQzQwT1RBME1qTWdNQzQzTkRZd05UUWdNQzQwT1RJNU5qTWdNQzQzTkRnM01qWWdNQzQwT1RReE1qUWdNQzQzTlRFNE0wTXdMalE1TlRJM0lEQXVOelUwT1RNeklEQXVORGsxTVRJeElEQXVOelUzT0RJeUlEQXVORGt6TnpJM0lEQXVOelU1TnpoRE1DNDBPRFUyTkRNZ01DNDNOekV4TVRZZ01DNDBOell4TmpZZ01DNDNOelUwT0RFZ01DNDBOamN3TlRRZ01DNDNOemN3TkRGRE1DNDBOVGM1TkRJZ01DNDNOemcxT0RVZ01DNDBORGt5TVRJZ01DNDNOemN3TkRFZ01DNDBORE01SURBdU56YzFOekUwUXpBdU5EUXlNREkxSURBdU56YzFNak15SURBdU5ETTVOekF4SURBdU56YzBNelV6SURBdU5ETTNPRGt5SURBdU56Y3pNelUzUXpBdU5ETTNNVFl4SURBdU56Y3lPVGMxSURBdU5ETTNNakV5SURBdU56Y3lPRGMySURBdU5ETTJOek1nTUM0M056STBOemRETUM0ME16Z3lNalFnTUM0M056RTNOak1nTUM0ME5EQTBOalVnTUM0M056QTRPRFFnTUM0ME5EUXpPRElnTUM0M056QXdPRGRETUM0ME5UWTNORGNnTUM0M05qYzFORGdnTUM0ME5qSTVNemdnTUM0M05qVTFNak1nTUM0ME5qYzNNREVnTUM0M05qRTNNemxETUM0ME56QTJNVE1nTUM0M05UazBNVFVnTUM0ME56STFNREVnTUM0M05UWTVPVE1nTUM0ME56UTRORGdnTUM0M05UTTVPRE5ETUM0ME56WXpOREVnTUM0M05USXdOamdnTUM0ME56Z3dNaUF3TGpjME9Ua3hOU0F3TGpRNE1ESTJOaUF3TGpjME56TTVPRU13TGpRNE1qY3pPQ0F3TGpjME5EWTJJREF1TkRnME1ERTJJREF1TnpRME16WXhJREF1TkRnME9EazNJREF1TnpRME1qYzRXaUlnWTJ4aGMzTTlJbWxqYjI0dFptbHNiQ0l2UGlZamVHRTdQQzluUGlZamVHRTdQR1JsWm5NK0ppTjRZVHM4WTJ4cGNGQmhkR2dnYVdROUltTnNhWEF3SWo0bUkzaGhPenh5WldOMElIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJR1pwYkd3OUluZG9hWFJsSWk4K0ppTjRZVHM4TDJOc2FYQlFZWFJvUGlZamVHRTdQQzlrWldaelBpWWplR0U3UEM5emRtYys7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iMiIgdmVydGV4PSIxIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMTA2My4wIiB5PSIyMjMuMCIgd2lkdGg9IjkwLjAiIGhlaWdodD0iOTAuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjMyIiB2YWx1ZT0iUzMgLSBTaW1wbGUgU3RvcmFnZSBTZXJ2aWNlIiBzdHlsZT0iaXIucmVmPTlkNThjMjc5LTlkYTgtNGRlZC04NTE0LWM4YTk4ODdlOWFiNztyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1zMztpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJSFpwWlhkQ2IzZzlJakFnTUNBeElERWlJR1pwYkd3OUltNXZibVVpUGlZamVHRTdQRzFoYzJzZ2FXUTlJbTFoYzJzd0lpQnRZWE5yTFhSNWNHVTlJbUZzY0doaElpQnRZWE5yVlc1cGRITTlJblZ6WlhKVGNHRmpaVTl1VlhObElpQjRQU0l3SWlCNVBTSXdJaUIzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWo0bUkzaGhPenhqYVhKamJHVWdZM2c5SWpBdU5TSWdZM2s5SWpBdU5TSWdjajBpTUM0MUlpQm1hV3hzUFNKaWJHRmpheUl2UGlZamVHRTdQQzl0WVhOclBpWWplR0U3UEdjZ2JXRnphejBpZFhKc0tDTnRZWE5yTUNraVBpWWplR0U3UEdjZ1kyeHBjQzF3WVhSb1BTSjFjbXdvSTJOc2FYQXdLU0krSmlONFlUczhjR0YwYUNCa1BTSk5NU0F3U0RCV01DNDVPVGs1T1RWSU1WWXdXaUlnWm1sc2JEMGlkWEpzS0NOd1lXbHVkREJmYkdsdVpXRnlLU0l2UGlZamVHRTdQSEJoZEdnZ1pEMGlUVEF1T0RFNU1EVXhJREF1TlRNME1UZzRRekF1T0RFMU1UZzBJREF1TlRFek1qVTFJREF1TnpreE5EVXhJREF1TkRrNE5EVTFJREF1TnpjMU1UZzBJREF1TkRnM09USXlRekF1TnpZNU9UZzBJREF1TkRnME5UZzVJREF1TnpVMU56RTRJREF1TkRjNU1qVTFJREF1TnpVME5URTRJREF1TkRjME5UZzVRekF1TnpVME5ETTJJREF1TkRjeE1qVWdNQzQzTlRRNE9EWWdNQzQwTmpjNU1Ua2dNQzQzTlRVNE5URWdNQzQwTmpRM01qSk1NQzQzTmpreE9EUWdNQzR6TmpnNE5UWkRNQzQzTnpNd05URWdNQzR6TkRBM01qSWdNQzQzTnpZM09EUWdNQzR6TVRJMU9Ea2dNQzQzT0RBMk5URWdNQzR5T0RRME5UWkRNQzQzT0RReE1UZ2dNQzR5TlRnMU9Ea2dNQzQzTnpFM01UZ2dNQzR5TkRFeU5UWWdNQzQzTlRBMk5URWdNQzR5TWpZM01qTkRNQzQzTURjM01UZ2dNQzR4T1RZNU9Ea2dNQzQyTlRFM01UZ2dNQzR4T0RRNU9TQXdMall3TVRFNE5DQXdMakUzTmpjeU0wTXdMalV6TnpneE1TQXdMakUyTmpNM05pQXdMalEzTXpNMk5TQXdMakUyTkRJM0lEQXVOREE1TkRVeElEQXVNVGN3TkRVMlF6QXVNelV4T1RZMklEQXVNVGMwTmpjMElEQXVNamsxTlRRMklEQXVNVGc0TVRneklEQXVNalF5TXpnMElEQXVNakV3TkRVMlF6QXVNakV6T0RVeElEQXVNakl6TnpnNUlEQXVNVGMyTlRFNElEQXVNalEwTlRnNUlEQXVNVGd4TVRnMElEQXVNamd3T1RnNVF6QXVNVGswTlRFNElEQXVNemc1TWpVMklEQXVNakV3TWpVeElEQXVORGszTWpVMUlEQXVNakkwTnpnMElEQXVOakExTXpnNFF6QXVNak14TkRVeElEQXVOalUwT0RVMUlEQXVNak00TVRFNElEQXVOekEwTXpJeElEQXVNalEwTnpnMElEQXVOelV6TnpnNFF6QXVNalExT0RZZ01DNDNOak0wTWlBd0xqSTBPVFEySURBdU56Y3lOVGs0SURBdU1qVTFNakU1SURBdU56Z3dNemswUXpBdU1qWXdPVGM0SURBdU56ZzRNVGtnTUM0eU5qZzJPVE1nTUM0M09UUXpNamdnTUM0eU56YzFPRFFnTUM0M09UZ3hPRGhETUM0ek1UZzVNVGdnTUM0NE1qQTFPRGdnTUM0ek56QXhNVGdnTUM0NE1qWTVPRGdnTUM0ME1UWXlOVEVnTUM0NE16RXlOVFJETUM0ME56YzFPRE1nTUM0NE16WTNPVFFnTUM0MU16a3pPRElnTUM0NE16UXdOVGdnTUM0MU9UazVPRFFnTUM0NE1qTXhNakZETUM0Mk16Z3pPRFFnTUM0NE1UWXdOVFFnTUM0M01EazROVEVnTUM0NE1EUTBOVFFnTUM0M01UVTVPRFFnTUM0M05UWTBOVFJETUM0M01qTTFPRFFnTUM0Mk9UWTVPRGdnTUM0M016RTVPRFFnTUM0Mk16YzFNakVnTUM0M016azVPRFFnTUM0MU56Z3hPRGhNTUM0M05ESTVNVGdnTUM0MU5qQXdOVFZETUM0M05qUTJOVEVnTUM0MU5qVXlOVFVnTUM0NE1qWTJOVEVnTUM0MU56WXpNaklnTUM0NE1Ua3dOVEVnTUM0MU16UXhPRGhhVFRBdU5EZ3dOalV4SURBdU1Ua3pNemc1UXpBdU5UWXdOalV4SURBdU1Ua3pNemc1SURBdU5qVXlNalV4SURBdU1qQXlORFUySURBdU56SXpPVGcwSURBdU1qUXhPVEl6UXpBdU56TTFNRFV4SURBdU1qUTRNRFUySURBdU56WXdOemcwSURBdU1qWXhOemc1SURBdU56VXpNRFV4SURBdU1qYzRNRFUyUXpBdU56UTFNekU0SURBdU1qazBNekl6SURBdU56SXhNekU0SURBdU16QXlORFUySURBdU56QTJOalV4SURBdU16QTRNekl5UXpBdU5qZzFOekE0SURBdU16RTJNRFU1SURBdU5qWTBNVGNnTUM0ek1qSXdOemdnTUM0Mk5ESXlOVEVnTUM0ek1qWXpNakpETUM0MU5EY3dOelFnTUM0ek5EVXhOellnTUM0ME5Ea3pNamtnTUM0ek5EY3lNRGNnTUM0ek5UTTBOVEVnTUM0ek16SXpNakpETUM0ek1UQXhOVGdnTUM0ek1qYzROVGdnTUM0eU5qZ3dORFFnTUM0ek1UVTFNaklnTUM0eU1qa3hPRFFnTUM0eU9UVTVNak5ETUM0eU1UazFPRFFnTUM0eU9UQTBOVFlnTUM0eU1ETTNNVGdnTUM0eU9EQTFPRGtnTUM0eU1EZ3hNVGdnTUM0eU5qYzFNak5ETUM0eU1URTJNRE1nTUM0eU5qQTFNRElnTUM0eU1UY3dOelFnTUM0eU5UUTJOaUF3TGpJeU16ZzFNU0F3TGpJMU1EY3lNME13TGpJMU16RXpOeUF3TGpJek1UZzRPU0F3TGpJNE5UY3dNeUF3TGpJeE9EY3lOeUF3TGpNeE9UZzFNU0F3TGpJeE1Ua3lNME13TGpNM01qVXdOeUF3TGpFNU9USTRNaUF3TGpReU5qVWdNQzR4T1RNd05Ua2dNQzQwT0RBMk5URWdNQzR4T1RNek9EbFdNQzR4T1RNek9EbGFUVEF1TmpnNU56RTRJREF1TnpVMU16ZzRRekF1TmpnM056RTRJREF1Tnpjd09UZzRJREF1TmpZeE9UZzBJREF1TnpjNE56SXhJREF1TmpRNU56RTRJREF1Tnpnek1USXhRekF1TmpJME1qVXhJREF1TnpreE5qUWdNQzQxT1RjNU9ESWdNQzQzT1RjMU16Y2dNQzQxTnpFek1UZ2dNQzQ0TURBM01qRkRNQzQxTVRJeE5UWWdNQzQ0TURnMU9EY2dNQzQwTlRJeU1UTWdNQzQ0TURnMU9EY2dNQzR6T1RNd05URWdNQzQ0TURBM01qRkRNQzR6TlRVNU9UWWdNQzQzT1RjNE5EWWdNQzR6TVRrNE1USWdNQzQzT0Rnd016RWdNQzR5T0RZek9EUWdNQzQzTnpFM09EaERNQzR5T0RFNE16WWdNQzQzTmprNE1URWdNQzR5TnpjNU15QXdMamMyTmpZd05TQXdMakkzTlRFd015QXdMamMyTWpVelF6QXVNamN5TWpjM0lEQXVOelU0TkRVMklEQXVNamN3TmpReklEQXVOelV6TmpjeklEQXVNamN3TXpnMElEQXVOelE0TnpJeFF6QXVNalUzTURVeElEQXVOalF5T1RnNElEQXVNalF4T0RVeElEQXVOVE0zTWpVMUlEQXVNakkzTlRnMElEQXVORE14TlRJeVREQXVNakV5TVRFNElEQXVNekUyT0RVMlF6QXVNalF5TkRJNUlEQXVNek16TlRnM0lEQXVNamMxTXpJNUlEQXVNelExTVRJMElEQXVNekE1TkRVeElEQXVNelV3T1RnNVF6QXVNelExT1RrNElEQXVNelU0TkRJM0lEQXVNemd6TURJeUlEQXVNell6TWpneklEQXVOREl3TWpVeElEQXVNelkxTlRJeVF6QXVORGt6TXpFMUlEQXVNemN3TnpVNElEQXVOVFkyTnpRNUlEQXVNelkyTmpneElEQXVOak00TnpnMElEQXVNelV6TXpnNVF6QXVOamMzTVRZM0lEQXVNelEzT0RZNElEQXVOekUwTWpRMklEQXVNek0xTkRrMElEQXVOelE0TWpVeElEQXVNekUyT0RVMlREQXVOekU1T1RnMElEQXVOVEkyTVRnNFF6QXVOalV5TkRFNElEQXVOVEF6T1RJNElEQXVOVGcyTkRBMklEQXVORGMzTWpBeklEQXVOVEl5TXpnMElEQXVORFEyTVRnNVF6QXVOVEU1TlRjMUlEQXVORFExTVRFM0lEQXVOVEUyT0RVMklEQXVORFF6T0RJMElEQXVOVEUwTWpVeElEQXVORFF5TXpJeVF6QXVOVEV3TmpVeElEQXVORE01TmpVMUlEQXVOVEV4TlRnMElEQXVORFF3T1RnNUlEQXVOVEE1T0RVeElEQXVORE0yT0RVMVF6QXVOVEEyTlRFNElEQXVOREk1TWpVMUlEQXVOVEExTnpFNElEQXVOREl6TlRJeUlEQXVORGs0TmpVeElEQXVOREUzTWpVMVF6QXVORGswT0RNMklEQXVOREUwTWlBd0xqUTVNRE16TWlBd0xqUXhNakV5TXlBd0xqUTROVFV6TVNBd0xqUXhNVEl3TlVNd0xqUTRNRGN6SURBdU5ERXdNamczSURBdU5EYzFOemM0SURBdU5ERXdOVFUySURBdU5EY3hNVEExSURBdU5ERXhPVGc0UXpBdU5EWTJORE14SURBdU5ERXpOREl4SURBdU5EWXlNVGM1SURBdU5ERTFPVGMwSURBdU5EVTROekUzSURBdU5ERTVOREkwUXpBdU5EVTFNalUySURBdU5ESXlPRGMxSURBdU5EVXlOamtnTUM0ME1qY3hNVGtnTUM0ME5URXlORElnTUM0ME16RTNPRGhETUM0ME5EazNPVFVnTUM0ME16WTBOVGNnTUM0ME5EazFNU0F3TGpRME1UUXdPQ0F3TGpRMU1EUXhNeUF3TGpRME5qSXhNa013TGpRMU1UTXhOaUF3TGpRMU1UQXhOaUF3TGpRMU16TTNPU0F3TGpRMU5UVXlOaUF3TGpRMU5qUXlNaUF3TGpRMU9UTTFNVU13TGpRMU9UUTJOaUF3TGpRMk16RTNOU0F3TGpRMk16TTVPQ0F3TGpRMk5qRTVPU0F3TGpRMk56ZzNOaUF3TGpRMk9ERTFOME13TGpRM01qTTFOQ0F3TGpRM01ERXhOaUF3TGpRM056STBNeUF3TGpRM01EazFJREF1TkRneU1URTRJREF1TkRjd05UZzVRekF1TkRnMk56RTBJREF1TkRZNU9ESTJJREF1TkRreE1UazBJREF1TkRZNE5EZ3lJREF1TkRrMU5EVXhJREF1TkRZMk5UZzVRekF1TlRBd05qVXhJREF1TkRZME9UZzVJREF1TlRBd05qVXhJREF1TkRZMU1qVTFJREF1TlRBMk1URTRJREF1TkRZM056ZzVRekF1TlRjd09UWXlJREF1TkRrNU5EQTRJREF1TmpNM056WTJJREF1TlRJMk9EUXlJREF1TnpBMk1URTRJREF1TlRRNU9USXlRekF1TnpFMk16ZzBJREF1TlRVek1qVTFJREF1TnpFMk1qVXhJREF1TlRRNU9USXlJREF1TnpFMk1qVXhJREF1TlRVNE5EVTFRekF1TnpFMU9ERTRJREF1TlRZME9UUTNJREF1TnpFME9UY3lJREF1TlRjeE5EQTBJREF1TnpFek56RTRJREF1TlRjM056ZzRUREF1TnpBMU1UZzBJREF1TmpReE16ZzRUREF1TmpnNU56RTRJREF1TnpVMU16ZzRXazB3TGpRNE16azROQ0F3TGpRME1EQTFOVU13TGpRNE16azROQ0F3TGpRME16WTFOU0F3TGpRM09Ea3hPQ0F3TGpRME16STFOU0F3TGpRM056VTROQ0F3TGpRME1EazRPVU13TGpRM05qSTFNU0F3TGpRek9EY3lNaUF3TGpRNE16azROQ0F3TGpRek5EazRPU0F3TGpRNE16azROQ0F3TGpRME1EQTFOVnBOTUM0M05EWTJOVEVnTUM0MU16TXpPRGhNTUM0M05UQTJOVEVnTUM0MU1ETTVNakpETUM0M05qTTVPRFFnTUM0MU1URTFNaklnTUM0M09EWTJOVEVnTUM0MU1qSTVPRGdnTUM0M09USTJOVEVnTUM0MU16Z3hPRGhETUM0M056azFPRFFnTUM0MU5ETTFNaklnTUM0M05UZzVNVGdnTUM0MU16WTBOVFVnTUM0M05EWTJOVEVnTUM0MU16TXpPRGhhSWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BDOW5QaVlqZUdFN1BDOW5QaVlqZUdFN1BHUmxabk0rSmlONFlUczhiR2x1WldGeVIzSmhaR2xsYm5RZ2FXUTlJbkJoYVc1ME1GOXNhVzVsWVhJaUlIZ3hQU0l0TUM0eU1EY3dOamNpSUhreFBTSXhMakl3TnpBMklpQjRNajBpTVM0eU1EY3dOaUlnZVRJOUlpMHdMakl3TnpBM01pSWdaM0poWkdsbGJuUlZibWwwY3owaWRYTmxjbE53WVdObFQyNVZjMlVpUGlZamVHRTdQSE4wYjNBZ2MzUnZjQzFqYjJ4dmNqMGlJekZDTmpZd1JpSXZQaVlqZUdFN1BITjBiM0FnYjJabWMyVjBQU0l4SWlCemRHOXdMV052Ykc5eVBTSWpOa05CUlRORklpOCtKaU40WVRzOEwyeHBibVZoY2tkeVlXUnBaVzUwUGlZamVHRTdQR05zYVhCUVlYUm9JR2xrUFNKamJHbHdNQ0krSmlONFlUczhjbVZqZENCM2FXUjBhRDBpTVNJZ2FHVnBaMmgwUFNJd0xqazVPVGs1TlNJZ1ptbHNiRDBpZDJocGRHVWlMejRtSTNoaE96d3ZZMnhwY0ZCaGRHZytKaU40WVRzOEwyUmxabk0rSmlONFlUczhMM04yWno0PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xOyIgcGFyZW50PSIyIiB2ZXJ0ZXg9IjEiPgogICAgICA8bXhHZW9tZXRyeSB4PSI5OTkuMCIgeT0iNDUwLjAiIHdpZHRoPSIyMDcuMCIgaGVpZ2h0PSIyMDAuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjM0IiB2YWx1ZT0iQXVkaXQgTG9nIC0mZ3Q7IFMzIC0gU2ltcGxlIFN0b3JhZ2UgU2VydmljZSIgc3R5bGU9ImlyLnJlZj04OGU3YmJmNi03YWEwLTQ1Y2UtYjUyZi0wNzk5MjUxOGNkZTE7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yOyIgcGFyZW50PSIyIiBzb3VyY2U9IjMzIiB0YXJnZXQ9IjMyIiBlZGdlPSIxIj4KICAgICAgPG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8b2JqZWN0IGlkPSIyOSIgbGFiZWw9Im15IHdlYiBhcHBsaWNhdGlvbiIgaXIuc291cmNlU3R5bGU9ImNvbnRhaW5lcj11bmRlZmluZWQ7cm91bmRlZD0xO2FyY1NpemU9OTA7cGVyaW1ldGVyPXVuZGVmaW5lZDtyZWN1cnNpdmVSZXNpemU9dW5kZWZpbmVkO3ZlcnRpY2FsQWxpZ249dG9wO3N0cm9rZVdpZHRoPXVuZGVmaW5lZDtzdHJva2VDb2xvcj0jMjBDOUUzO2ZvbnRTaXplPTEyO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7YWxpZ249Y2VudGVyO3RleHREaXJlY3Rpb249dW5kZWZpbmVkO3NwYWNpbmdUb3A9dW5kZWZpbmVkO3NwYWNpbmdMZWZ0PXVuZGVmaW5lZDthc3BlY3Q9dW5kZWZpbmVkO2Rhc2hlZD11bmRlZmluZWQ7Zm9udFN0eWxlPXVuZGVmaW5lZDtvdXRsaW5lQ29ubmVjdD11bmRlZmluZWQ7c2hhcGU9dW5kZWZpbmVkO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BITjBlV3hsUGlZamVHRTdJQ0FnSUM1cFkyOXVMV1pwYkd3Z2V5WWplR0U3SUNBZ0lDQWdJQ0JtYVd4c09pQWpNVEZCT0VOR095WWplR0U3SUNBZ0lIMG1JM2hoT3p3dmMzUjViR1UrSmlONFlUczhaeUJqYkdsd0xYQmhkR2c5SW5WeWJDZ2pZMnhwY0RBcElqNG1JM2hoT3p4bklHTnNhWEF0Y0dGMGFEMGlkWEpzS0NOamJHbHdNU2tpUGlZamVHRTdQSEJoZEdnZ1ptbHNiQzF5ZFd4bFBTSmxkbVZ1YjJSa0lpQmpiR2x3TFhKMWJHVTlJbVYyWlc1dlpHUWlJR1E5SWswd0xqTTJOVGcxTXlBd0xqSTVPRFkyTVVNd0xqTTJOVGcxTXlBd0xqSTRNamM0TWlBd0xqTTNPRGN5TlNBd0xqSTJPVGt4TVNBd0xqTTVORFl3TXlBd0xqSTJPVGt4TVVnd0xqWXdOVFF6TmtNd0xqWXlNVE14TkNBd0xqSTJPVGt4TVNBd0xqWXpOREU0TmlBd0xqSTRNamM0TWlBd0xqWXpOREU0TmlBd0xqSTVPRFkyTVVNd0xqWXpOREU0TmlBd0xqTXhORFV6T1NBd0xqWXlNVE14TkNBd0xqTXlOelF4TVNBd0xqWXdOVFF6TmlBd0xqTXlOelF4TVVnd0xqTTVORFl3TTBNd0xqTTNPRGN5TlNBd0xqTXlOelF4TVNBd0xqTTJOVGcxTXlBd0xqTXhORFV6T1NBd0xqTTJOVGcxTXlBd0xqSTVPRFkyTVZwTk1DNHpPVFEyTURNZ01DNDJPVEUxTnpoRE1DNHpOemczTWpVZ01DNDJPVEUxTnpnZ01DNHpOalU0TlRNZ01DNDNNRFEwTlNBd0xqTTJOVGcxTXlBd0xqY3lNRE15T0VNd0xqTTJOVGcxTXlBd0xqY3pOakl3TmlBd0xqTTNPRGN5TlNBd0xqYzBPVEEzT0NBd0xqTTVORFl3TXlBd0xqYzBPVEEzT0Vnd0xqVTFNREF4T1ZZd0xqWTVNVFUzT0Vnd0xqTTVORFl3TTFwTk1DNDJNakF6TlRFZ01DNDJNams1TVRGSU1DNDJNRFExTmpWRE1DNDFPVGN4TkRRZ01DNDJNams1TVRFZ01DNDFPVEF3TmpnZ01DNDJNekV6T1RNZ01DNDFPRE0yTVRrZ01DNDJNelF3TnpoSU1DNHpPVFEyTURORE1DNHpOemczTWpVZ01DNDJNelF3TnpnZ01DNHpOalU0TlRNZ01DNDJNakV5TURZZ01DNHpOalU0TlRNZ01DNDJNRFV6TWpoRE1DNHpOalU0TlRNZ01DNDFPRGswTkRrZ01DNHpOemczTWpVZ01DNDFOelkxTnpnZ01DNHpPVFEyTURNZ01DNDFOelkxTnpoSU1DNDJNRFUwTXpaRE1DNDJNakV6TVRRZ01DNDFOelkxTnpnZ01DNDJNelF4T0RZZ01DNDFPRGswTkRrZ01DNDJNelF4T0RZZ01DNDJNRFV6TWpoRE1DNDJNelF4T0RZZ01DNDJNVFUzTkRVZ01DNDJNamcyTkRZZ01DNDJNalE0TmpnZ01DNDJNakF6TlRFZ01DNDJNams1TVRGYVRUQXVOamN5TlRFNUlEQXVOakk1T1RFeFZqQXVNak14TlRjM1F6QXVOamN5TlRFNUlEQXVNVGs1T0RJeElEQXVOalEyTnpjMklEQXVNVGMwTURjM0lEQXVOakUxTURFNUlEQXVNVGMwTURjM1NEQXVNemcxTURKRE1DNHpOVE15TmpNZ01DNHhOelF3TnpjZ01DNHpNamMxTWlBd0xqRTVPVGd5TVNBd0xqTXlOelV5SURBdU1qTXhOVGMzVmpBdU56WTRNalExUXpBdU16STNOVElnTUM0NE1EQXdNREVnTUM0ek5UTXlOak1nTUM0NE1qVTNORFVnTUM0ek9EVXdNaUF3TGpneU5UYzBOVWd3TGpVMU1EQXhPVll3TGpnM05UTTJOa013TGpVMU1EQXhPU0F3TGpnM09EQTBNaUF3TGpVMU1ESXhNaUF3TGpnNE1EWTNNaUF3TGpVMU1EVTROQ0F3TGpnNE16STBOVWd3TGpNNE5UQXlRekF1TXpJeE5UQTNJREF1T0Rnek1qUTFJREF1TWpjd01ESWdNQzQ0TXpFM05UY2dNQzR5TnpBd01pQXdMamMyT0RJME5WWXdMakl6TVRVM04wTXdMakkzTURBeUlEQXVNVFk0TURZMElEQXVNekl4TlRBM0lEQXVNVEUyTlRjM0lEQXVNemcxTURJZ01DNHhNVFkxTnpkSU1DNDJNVFV3TVRsRE1DNDJOemcxTXpJZ01DNHhNVFkxTnpjZ01DNDNNekF3TVRrZ01DNHhOamd3TmpRZ01DNDNNekF3TVRrZ01DNHlNekUxTnpkV01DNDJNams1TVRGSU1DNDJOekkxTVRsYUlpQmpiR0Z6Y3owaWFXTnZiaTFtYVd4c0lpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDNOemMxTWpRZ01DNDJOakkzTWt3d0xqYzNPVGsxT1NBd0xqWTJNamM0T0VNd0xqZ3dNVGN6TmlBd0xqWTJOREF3TlNBd0xqZ3hPVEUyT0NBd0xqWTRNVFF6TnlBd0xqZ3lNRE00TmlBd0xqY3dNekU1T0V3d0xqZ3lNRFExTXlBd0xqY3dOVFl6TTFZd0xqZzFOelE0TWt3d0xqZ3lNRE00TmlBd0xqZzFPVGt4TjBNd0xqZ3hPVEUyT0NBd0xqZzRNVFkzT0NBd0xqZ3dNVGN6TnlBd0xqZzVPVEV4SURBdU56YzVPVGMxSURBdU9UQXdNekk0VERBdU56YzNOVFFnTUM0NU1EQXpPVFpJTUM0Mk1qVTJOemRETUM0Mk1ESTNPVFFnTUM0NU1EQXpPVFlnTUM0MU9EUXdPVFFnTUM0NE9ESTBPRFFnTUM0MU9ESTRNeklnTUM0NE5UazVNVGRNTUM0MU9ESTNOalFnTUM0NE5UYzBPREpXTUM0M01EVTJNek5ETUM0MU9ESTNOalFnTUM0Mk9ESTNOU0F3TGpZd01EWTNOQ0F3TGpZMk5EQTFJREF1TmpJek1qUXlJREF1TmpZeU56ZzRUREF1TmpJMU5qYzNJREF1TmpZeU56SklNQzQzTnpjMU1qUmFUVEF1TnprME1ESTVJREF1TnpJNE56UXhTREF1TmpBNU1UZzRUREF1TmpBNU1UY3lJREF1T0RVM05EZ3lRekF1TmpBNU1UY3lJREF1T0RZMk1ESTRJREF1TmpFMU5qWTNJREF1T0Rjek1EVTJJREF1TmpJek9UZzVJREF1T0Rjek9UQXhUREF1TmpJMU5qYzNJREF1T0Rjek9UZzNTREF1TnpjM05UUk1NQzQzTnpreU1qZ2dNQzQ0TnpNNU1ERkRNQzQzT0RZNU9UWWdNQzQ0TnpNeE1UTWdNQzQzT1RNeE56RWdNQzQ0TmpZNU16Y2dNQzQzT1RNNU5pQXdMamcxT1RFM1REQXVOemswTURRMUlEQXVPRFUzTkRneVREQXVOemswTURJNUlEQXVOekk0TnpReFdrMHdMalkzT0RRNU15QXdMamMwT0RVME4wTXdMalk0TXpVd055QXdMamMwT0RVME55QXdMalk0TnpZMUlEQXVOelV5TWpjeklEQXVOamc0TXpBMklEQXVOelUzTVRBM1REQXVOamc0TXprM0lEQXVOelU0TkRWV01DNDROVEE0T0VNd0xqWTRPRE01TnlBd0xqZzFOVGc1TXlBd0xqWTRORFkzTVNBd0xqZzJNREF6TnlBd0xqWTNPVGd6TnlBd0xqZzJNRFk1TTB3d0xqWTNPRFE1TXlBd0xqZzJNRGM0TTBnd0xqWXpNakkzT1VNd0xqWXlOekkyTmlBd0xqZzJNRGM0TXlBd0xqWXlNekV5TWlBd0xqZzFOekExTnlBd0xqWXlNalEyTmlBd0xqZzFNakl5TkV3d0xqWXlNak0zTmlBd0xqZzFNRGc0VmpBdU56VTRORFZETUM0Mk1qSXpOellnTUM0M05UTTBNemNnTUM0Mk1qWXhNRElnTUM0M05Ea3lPVE1nTUM0Mk16QTVNelVnTUM0M05EZzJNemhNTUM0Mk16SXlOemtnTUM0M05EZzFORGRJTUM0Mk56ZzBPVE5hVFRBdU5qWTROVGtnTUM0M05qZ3pOVFJJTUM0Mk5ESXhPREpXTUM0NE5EQTVOemRJTUM0Mk5qZzFPVll3TGpjMk9ETTFORnBOTUM0M05UYzNNVGdnTUM0M09EZ3hPVGxETUM0M05qTXhPRGNnTUM0M09EZ3hPVGtnTUM0M05qYzJNakVnTUM0M09USTJNek1nTUM0M05qYzJNakVnTUM0M09UZ3hNRE5ETUM0M05qYzJNakVnTUM0NE1ETXhNVFlnTUM0M05qTTRPVFlnTUM0NE1EY3lOaUF3TGpjMU9UQTJNaUF3TGpnd056a3hOVXd3TGpjMU56Y3hPQ0F3TGpnd09EQXdOa2d3TGpjeE1UVTJNa013TGpjd05qQTVNeUF3TGpnd09EQXdOaUF3TGpjd01UWTFPU0F3TGpnd016VTNNaUF3TGpjd01UWTFPU0F3TGpjNU9ERXdNME13TGpjd01UWTFPU0F3TGpjNU16QTRPU0F3TGpjd05UTTROQ0F3TGpjNE9EazBOaUF3TGpjeE1ESXhPQ0F3TGpjNE9ESTVUREF1TnpFeE5UWXlJREF1TnpnNE1UazVTREF1TnpVM056RTRXazB3TGpjM01Ea3lNaUF3TGpjME9EVTBOME13TGpjM05qTTVNaUF3TGpjME9EVTBOeUF3TGpjNE1EZ3lOU0F3TGpjMU1qazRNU0F3TGpjNE1EZ3lOU0F3TGpjMU9EUTFRekF1Tnpnd09ESTFJREF1TnpZek5EWTBJREF1TnpjM01TQXdMamMyTnpZd055QXdMamMzTWpJMk5pQXdMamMyT0RJMk0wd3dMamMzTURreU1pQXdMamMyT0RNMU5FZ3dMamN4TVRVMk1rTXdMamN3TmpBNU15QXdMamMyT0RNMU5DQXdMamN3TVRZMU9TQXdMamMyTXpreUlEQXVOekF4TmpVNUlEQXVOelU0TkRWRE1DNDNNREUyTlRrZ01DNDNOVE0wTXpjZ01DNDNNRFV6T0RRZ01DNDNORGt5T1RNZ01DNDNNVEF5TVRnZ01DNDNORGcyTXpoTU1DNDNNVEUxTmpJZ01DNDNORGcxTkRkSU1DNDNOekE1TWpKYUlpQmpiR0Z6Y3owaWFXTnZiaTFtYVd4c0lpOCtKaU40WVRzOEwyYytKaU40WVRzOEwyYytKaU40WVRzOFpHVm1jejRtSTNoaE96eGpiR2x3VUdGMGFDQnBaRDBpWTJ4cGNEQWlQaVlqZUdFN1BISmxZM1FnZDJsa2RHZzlJakVpSUdobGFXZG9kRDBpTVNJZ1ptbHNiRDBpZDJocGRHVWlMejRtSTNoaE96d3ZZMnhwY0ZCaGRHZytKaU40WVRzOFkyeHBjRkJoZEdnZ2FXUTlJbU5zYVhBeElqNG1JM2hoT3p4eVpXTjBJSGRwWkhSb1BTSXdMamt5SWlCb1pXbG5hSFE5SWpBdU9USWlJR1pwYkd3OUluZG9hWFJsSWlCMGNtRnVjMlp2Y20wOUluUnlZVzV6YkdGMFpTZ3dMakEwTURBek9URWdNQzR3TkRBd016a3hLU0l2UGlZamVHRTdQQzlqYkdsd1VHRjBhRDRtSTNoaE96d3ZaR1ZtY3o0bUkzaGhPend2YzNablBnPT07dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbSI+CiAgICAgIDxteENlbGwgc3R5bGU9ImlyLnJlZj1lMWRlMmEyNS05MTYzLTRlZGMtYTI4Ny01ZWI2M2EyYTVhYjU7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249bGVmdDtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEzO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9d2ViLWFwcGxpY2F0aW9uLXNlcnZlci1zaWRlO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO2NvbnRhaW5lcj0xO3BlcmltZXRlcj1yZWN0YW5nbGVQZXJpbWV0ZXI7cmVjdXJzaXZlUmVzaXplPTA7c3Ryb2tlV2lkdGg9MTt0ZXh0RGlyZWN0aW9uPWx0cjtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7IiBwYXJlbnQ9IjIiIHZlcnRleD0iMSI+CiAgICAgICAgPG14R2VvbWV0cnkgeD0iMjc1LjAiIHk9Ijc4LjAiIHdpZHRoPSI2NjEuMCIgaGVpZ2h0PSI0OTMuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICAgIDwvbXhDZWxsPgogICAgPC9vYmplY3Q+CiAgICA8b2JqZWN0IGlkPSIzMyIgbGFiZWw9IkF1ZGl0IExvZ2dpbmciPgogICAgICA8bXhDZWxsIHN0eWxlPSJpci5yZWY9MTg4ODNjOGQtMmM1YS00ZjNlLTg3ZDktODk3NDRmYTEwZjE3O3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPUNELUFVRElULUxPRztpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJSFpwWlhkQ2IzZzlJakFnTUNBeElERWlJR1pwYkd3OUltNXZibVVpUGlZamVHRTdQRzFoYzJzZ2FXUTlJbTFoYzJzd1h6RTFNRFJmTWpNMk9Ua2lJSE4wZVd4bFBTSnRZWE5yTFhSNWNHVTZZV3h3YUdFaUlHMWhjMnRWYm1sMGN6MGlkWE5sY2xOd1lXTmxUMjVWYzJVaUlIZzlJakFpSUhrOUlqQWlJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpUGlZamVHRTdQR05wY21Oc1pTQmplRDBpTUM0MUlpQmplVDBpTUM0MUlpQnlQU0l3TGpVaUlHWnBiR3c5SW1Kc1lXTnJJaTgrSmlONFlUczhMMjFoYzJzK0ppTjRZVHM4WnlCdFlYTnJQU0oxY213b0kyMWhjMnN3WHpFMU1EUmZNak0yT1RrcElqNG1JM2hoT3p4d1lYUm9JR1pwYkd3dGNuVnNaVDBpWlhabGJtOWtaQ0lnWTJ4cGNDMXlkV3hsUFNKbGRtVnViMlJrSWlCa1BTSk5NQzQyTVRJME5qa2dNQzR5TmpnM09UbERNQzQyTXpnM09EWWdNQzR5TmpnM09Ua2dNQzQyTmpBek15QXdMakk0T1RJME55QXdMalkyTWpBM09TQXdMak14TlRFeU5Fd3dMalkyTWpFNU15QXdMak14T0RVeU9GWXdMalV3TURBMU4wTXdMalkwT1RnM09DQXdMalE1T1RRd09DQXdMall6TnpZeE5TQXdMalV3TkRJeU15QXdMall5T1RBME5DQXdMalV4TXpVM04xWXdMak14T0RVeU9FTXdMall5T1RBME5DQXdMak14TURFek55QXdMall5TWpnd09DQXdMak13TXpJd01TQXdMall4TkRjeE55QXdMak13TWpFd00wd3dMall4TWpRMk9TQXdMak13TVRrMU1rZ3dMak0xT0RNeE9FTXdMak0wT1RreU9DQXdMak13TVRrMU1pQXdMak0wTWprNU15QXdMak13T0RFNE9DQXdMak0wTVRnNU5pQXdMak14TmpJM09Vd3dMak0wTVRjME15QXdMak14T0RVeU9GWXdMalkyTVRBMk9VTXdMak0wTVRjME15QXdMalkyT1RRMk1TQXdMak0wTnprNElEQXVOamMyTXprMklEQXVNelUyTURjZ01DNDJOemMwT1RSTU1DNHpOVGd6TVRnZ01DNDJOemMyTkRaSU1DNDFNRFk0TURKTU1DNDFNems1TlRVZ01DNDNNVEEzT1RsSU1DNHpOVGd6TVRoRE1DNHpNekl3TURFZ01DNDNNVEEzT1RrZ01DNHpNVEEwTlRjZ01DNDJPVEF6TlRFZ01DNHpNRGczTURnZ01DNDJOalEwTnpSTU1DNHpNRGcxT1RRZ01DNDJOakV3TmpsV01DNHpNVGcxTWpoRE1DNHpNRGcxT1RRZ01DNHlPVEl5TURnZ01DNHpNamt3TkRFZ01DNHlOekEyTmpNZ01DNHpOVFE1TVRRZ01DNHlOamc1TVROTU1DNHpOVGd6TVRnZ01DNHlOamczT1RsSU1DNDJNVEkwTmpsYVRUQXVOall5TVRreklEQXVOakEwTkRZMlREQXVOamcwTnpBMElEQXVOVGt4TXpnNFF6QXVOamczTWpjeklEQXVOVGc1T0RrMUlEQXVOamc1TmpNMklEQXVOVGc0TURjMklEQXVOamt4TnpNMklEQXVOVGcxT1RjMlF6QXVOekExTVRZeUlEQXVOVGN5TlRVZ01DNDNNRFV4TmpJZ01DNDFOVEEzT0RFZ01DNDJPVEUzTXpZZ01DNDFNemN6TlRWRE1DNDJPRGsyT1RrZ01DNDFNelV6TVRnZ01DNDJPRGMwTVRZZ01DNDFNek0xTkRRZ01DNDJPRFE1TkNBd0xqVXpNakEzTWtNd0xqWTJPRFE0T0NBd0xqVXlNakk1SURBdU5qUTNNakl4SURBdU5USTNOams0SURBdU5qTTNORE00SURBdU5UUTBNVFZNTUM0Mk1UY3dNamNnTUM0MU56ZzBNemRNTUM0MU9UZzBNVElnTUM0MU5UazRNVFpETUM0MU9EUTFOallnTUM0MU5EVTVOekVnTUM0MU5qSXhNVGtnTUM0MU5EVTVOekVnTUM0MU5EZ3lOek1nTUM0MU5UazRNVFpNTUM0MU1qTXlNRE1nTUM0MU9EUTRPRGRETUM0MU1UZ3dPVEVnTUM0MU9EazVPVGdnTUM0MU1UYzJPVGdnTUM0MU9UZ3dORElnTUM0MU1qSXdNalFnTUM0Mk1ETTJNRFpNTUM0MU1qTXlNREVnTUM0Mk1EUTVNamhNTUM0MU1ETXhORGNnTUM0Mk1qUTVPVGRETUM0ME9UYzJNU0F3TGpZek1EVXpOaUF3TGpRNU56WXhJREF1TmpNNU5URTFJREF1TlRBek1UUTNJREF1TmpRMU1EVXpUREF1TlRnek16Y2dNQzQzTWpVeU56WkRNQzQxT0RnNU1Ea2dNQzQzTXpBNE1UUWdNQzQxT1RjNE9EY2dNQzQzTXpBNE1UUWdNQzQyTURNME1qWWdNQzQzTWpVeU56Wk1NQzQyTWpNME9ESWdNQzQzTURVeU1rTXdMall5T1RBeE9TQXdMamN4TURjMU9DQXdMall6TnprNU9TQXdMamN4TURjMU9DQXdMalkwTXpVek9DQXdMamN3TlRJeVREQXVOalk0TmpBNElEQXVOamd3TVRVeFF6QXVOamd5TkRVeklEQXVOalkyTXpBMklEQXVOamd5TkRVeklEQXVOalF6T0RVM0lEQXVOalk0TmpBNElEQXVOak13TURFeVREQXVOalV3TURrM0lEQXVOakV4TkRrMFREQXVOall5TURrMklEQXVOakEwTlRJelREQXVOall5TVRreklEQXVOakEwTmpFNVZqQXVOakEwTkRZMldrMHdMalV4T1Rjek1pQXdMalUxTmpFd05rZ3dMak01TVRRMk9FTXdMak00TWpNeE5TQXdMalUxTmpFd05pQXdMak0zTkRnNU15QXdMalUyTXpVeU55QXdMak0zTkRnNU15QXdMalUzTWpZNE1VTXdMak0zTkRnNU15QXdMalU0TVRnek55QXdMak00TWpNeE5TQXdMalU0T1RJMU9DQXdMak01TVRRMk9DQXdMalU0T1RJMU9FZ3dMalV3TWpaRE1DNDBPVGsyTVRjZ01DNDFPREk0T1RjZ01DNDFNREEzTlRNZ01DNDFOelV3T0RRZ01DNDFNRFl3TURnZ01DNDFOams0TWpsTU1DNDFNVGszTXpJZ01DNDFOVFl4TURaYVRUQXVNemMwT0RreklEQXVNemsxT0RZMFF6QXVNemMwT0RreklEQXVNemcyTnpFZ01DNHpPREl6TVRVZ01DNHpOemt5T0RnZ01DNHpPVEUwTmpnZ01DNHpOemt5T0RoSU1DNDFOemt6TVRsRE1DNDFPRGcwTnpRZ01DNHpOemt5T0RnZ01DNDFPVFU0T1RRZ01DNHpPRFkzTVNBd0xqVTVOVGc1TkNBd0xqTTVOVGcyTkVNd0xqVTVOVGc1TkNBd0xqUXdOVEF5SURBdU5UZzRORGMwSURBdU5ERXlORFF4SURBdU5UYzVNekU1SURBdU5ERXlORFF4U0RBdU16a3hORFk0UXpBdU16Z3lNekUxSURBdU5ERXlORFF4SURBdU16YzBPRGt6SURBdU5EQTFNRElnTUM0ek56UTRPVE1nTUM0ek9UVTROalJhVFRBdU16a3hORFk0SURBdU5EWTNOamszUXpBdU16Z3lNekUxSURBdU5EWTNOamszSURBdU16YzBPRGt6SURBdU5EYzFNVEU1SURBdU16YzBPRGt6SURBdU5EZzBNamN6UXpBdU16YzBPRGt6SURBdU5Ea3pOREk0SURBdU16Z3lNekUxSURBdU5UQXdPRFVnTUM0ek9URTBOamdnTUM0MU1EQTROVWd3TGpVM09UTXhPVU13TGpVNE9EUTNOQ0F3TGpVd01EZzFJREF1TlRrMU9EazBJREF1TkRrek5ESTRJREF1TlRrMU9EazBJREF1TkRnME1qY3pRekF1TlRrMU9EazBJREF1TkRjMU1URTVJREF1TlRnNE5EYzBJREF1TkRZM05qazNJREF1TlRjNU16RTVJREF1TkRZM05qazNTREF1TXpreE5EWTRXazB3TGpVNU16TTVOeUF3TGpjeE5USTBPRXd3TGpVeE16RTNOaUF3TGpZek5UQXlOVXd3TGpVek16SXpNaUF3TGpZeE5EazJPVXd3TGpZeE16UTFNeUF3TGpZNU5URTVNMHd3TGpVNU16TTVOeUF3TGpjeE5USTBPRnBOTUM0Mk1qY3pPVFFnTUM0MU9EZzNPRGxNTUM0Mk5EazJNamdnTUM0MU5URXpPVGRETUM0Mk5UVTBNRGNnTUM0MU5ERTJOemNnTUM0Mk5qYzVOek1nTUM0MU16ZzBPRElnTUM0Mk56YzJPVFFnTUM0MU5EUXlOakpETUM0Mk56a3hOVFVnTUM0MU5EVXhNeklnTUM0Mk9EQTFNRFFnTUM0MU5EWXhPQ0F3TGpZNE1UY3dOeUF3TGpVME56TTRNME13TGpZNE9UVTVOaUF3TGpVMU5USTNNU0F3TGpZNE9UVTVOaUF3TGpVMk9EQTJJREF1TmpneE56QTNJREF1TlRjMU9UUTRRekF1Tmpnd05EY3pJREF1TlRjM01UZ3lJREF1TmpjNU1EZzFJREF1TlRjNE1qVWdNQzQyTnpjMU56WWdNQzQxTnpreE1qZE1NQzQyTXprM015QXdMall3TVRFeU4wd3dMall5TnpNNU5DQXdMalU0T0RjNE9Wb2lJR1pwYkd3OUlpTXdRa0V3UWpjaUx6NG1JM2hoT3p3dlp6NG1JM2hoT3p3dmMzWm5QZz09O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjI5IiB2ZXJ0ZXg9IjEiPgogICAgICAgIDxteEdlb21ldHJ5IHg9IjUxMi4wIiB5PSIzNDAuMCIgd2lkdGg9IjkwLjAiIGhlaWdodD0iOTAuMCIgYXM9Imdlb21ldHJ5Ii8+CiAgICAgIDwvbXhDZWxsPgogICAgPC9vYmplY3Q+CiAgICAKICA8L3Jvb3Q+CjwvbXhHcmFwaE1vZGVsPgo=</schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
  </trustZones>
  <questions/>
  <assets>
    <asset type="" name="Credit Card Data" desc="Card holder data including the full PAN and CVV number." identifier="">
      <classification name="Cardholder data" desc="Credit card data under the remit of PCI" confidentiality="100" integrity="100" availability="30"/>
    </asset>
    <asset type="" name="Customer Data" desc="Data that uniquely identifies customers." identifier="">
      <classification name="Personally Identifiable Information" desc="Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity." confidentiality="80" integrity="80" availability="20"/>
    </asset>
    <asset type="" name="Personally Identifiable Information" desc="Any information relating to an identified or identifiable natural person ('Data Subject') an identifiable person is one who can be identified, directly or indirectly, in particular by reference to an identification number or to one or more factors specific to his physical, physiological, mental, economic, cultural or social identity." identifier="">
      <classification name="Personally Identifiable Information" desc="Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity." confidentiality="80" integrity="80" availability="20"/>
    </asset>
  </assets>
  <settings>
    <setting name="general.issue.tracker.provider" value="{&quot;values&quot;:[&quot;jira&quot;,&quot;redmine&quot;,&quot;tfs&quot;,&quot;ca&quot;,&quot;servicenow&quot;],&quot;selectedValue&quot;:&quot;tfs&quot;}" canOverride="true" type="LIST" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.closed.issue.names" value="Done" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.collection.url" value="https://dev.azure.com/bfd1964-IR" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.default.label" value="IriusRisk, Threats, Security" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.open.issue.names" value="Doing" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.password" value="" canOverride="true" type="PASSWORD" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.project.name" value="ThreatModelling" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.proxy.password" value="" canOverride="true" type="PASSWORD" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.proxy.user" value="david@doughty.uk.net" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.username" value="david@doughty.uk.net" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <setting name="tfs.work.item.type" value="Issue" canOverride="true" type="TEXT" groupName="ISSUE_TRACKER"/>
    <issueTrackers>
      <jira>
        <setting name="url" value="http://jira8.iriusrisk.com:8080"/>
        <setting name="username" value="demo"/>
        <setting name="password" value=""/>
        <setting name="projectKey" value="IRIUSDEMO"/>
        <setting name="proxyUrl" value=""/>
        <setting name="proxyUser" value=""/>
        <setting name="proxyPassword" value=""/>
        <setting name="issueType" value="Bug"/>
        <setting name="weaknessPriority" value="High"/>
        <setting name="countermeasurePriorityStrategy" value="jira.priority.strategy.automatic"/>
        <setting name="countermeasureManualPriorities" value=""/>
        <setting name="openIssueState" value="To Do"/>
        <setting name="closedIssueResolutionState" value="Fixed, Done"/>
        <setting name="rejectedIssueResolutionState" value="Won't Fix"/>
        <setting name="issueLinkTypeName" value="Relates"/>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="my web application -&gt; PostgreSQL" ref="0a25f712-e7c9-4451-9ebb-e6861b54dd63" source="3386b603-adf2-436d-95e6-eed427624678" target="4a398577-eccd-45dc-854f-a5da94d41fa2">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Authentication" ref="24d6dfa8-1f2f-4cf1-9901-a8e0b5b3627a" source="15f35397-5995-4b8c-ace6-212985895a6e" target="06a46eb5-e0a4-42cb-934b-8f2e40f09617">
      <assets/>
      <tags>
        <tag tag="HTTPS"/>
      </tags>
    </dataflow>
    <dataflow name="API gateway -&gt; Reset Password" ref="4af63754-22a3-4881-a0ed-e5f9373c2656" source="28c2e0b0-617b-41a7-8f3f-c96189d26594" target="552cc3c8-2b75-4d54-b676-14ad78d0956d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="API gateway -&gt; Login" ref="825cd007-c20c-4099-a670-982afcb079ff" source="28c2e0b0-617b-41a7-8f3f-c96189d26594" target="15f35397-5995-4b8c-ace6-212985895a6e">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Audit Log -&gt; S3 - Simple Storage Service" ref="88e7bbf6-7aa0-45ce-b52f-07992518cde1" source="8dbee567-420b-4207-be38-b84008f22b2a" target="4c8d0105-353c-4b4c-b261-efe668705655">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="User Profile -&gt; Login" ref="cce25f8b-232f-471b-a94c-f8d3f39edfb9" source="9a02ee97-31a3-4950-b6e4-a9c20169941a" target="15f35397-5995-4b8c-ace6-212985895a6e">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="User Profile -&gt; Change Password" ref="eacc321e-4104-4d23-80a7-1e108d634c23" source="9a02ee97-31a3-4950-b6e4-a9c20169941a" target="3a38ed20-f396-4194-9730-c75279816e9b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="API gateway -&gt; User Registration" ref="fc5a9a1c-3ecc-48e2-b3a4-f10c323347ba" source="28c2e0b0-617b-41a7-8f3f-c96189d26594" target="d9c59399-dc0b-45d1-abef-cb5504f0dfc4">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="PCF0001" value=""/>
    <customField ref="PCF0002" value=""/>
    <customField ref="PCF0003" value="bump"/>
    <customField ref="PCF0004" value=""/>
    <customField ref="PCF0005" value=""/>
    <customField ref="PCF0006" value=""/>
  </customFields>
  <components>
    <component uuid="4ce488de-b756-42d3-8203-eae0329dc8e7" diagramComponentId="29bed038-afbd-4a0b-bd1f-bf5bfcbc17a3" ref="d9c59399-dc0b-45d1-abef-cb5504f0dfc4" name="User Registration" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-USER-REGISTRATION" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionality requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. Together with asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action such as a button press on a FIDO hardware key or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionality, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.8" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.8" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.)&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SAFE-PASSWORD-CONSIDERATIONS" name="Don't force password updates" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The new password may have been used elsewhere, and attackers can exploit this too. The new password is also more likely to be written down, which represents another vulnerability. New passwords are also more likely to be forgotten, and this carries the productivity costs of users being locked out of their accounts, and service desks having to reset passwords.&lt;/p&gt;&lt;p&gt;Notice here that this does not apply if a data leak has occurred and user credentials are exposed, in this case users should be notified and passwords forced to be changed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security baseline (DRAFT) for Windows 10 v1903 and Windows Server v1903" url="https://docs.microsoft.com/en-us/archive/blogs/secguide/security-baseline-draft-for-windows-10-v1903-and-windows-server-v1903"/>
            <reference name="The problems with forcing regular password expiry" url="https://www.ncsc.gov.uk/blog-post/problems-forcing-regular-password-expiry"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the company's password policy.&lt;/li&gt;&lt;li&gt;Check application configuration&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.984">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-VERIFY-ACCOUNTS-AFTER-REGISTRATION" name="Emails addresses that are used for account creation should be confirmed" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The most common way to determine whether the email address is correct and legitimate is to send an email to the user, and require that they click a link in the email, or enter a code that has been sent to them. This provides a basic level of assurance that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The email address is correct.&lt;/li&gt;&lt;li&gt;The application can successfully send emails to it.&lt;/li&gt;&lt;li&gt;The user has access to the mailbox.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The links that are sent to users to prove ownership should contain a token that is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;At least 32 characters long.&lt;/li&gt;&lt;li&gt;Generated using a secure source of randomness.&lt;/li&gt;&lt;li&gt;Single use.&lt;/li&gt;&lt;li&gt;Time limited.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;After validating the ownership of the email address, the user should then be required to authenticate on the application through the usual mechanism.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Input Validation Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Register in the application and check if the confirmation email arrives and account verification is required.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.991">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;In every portion of the application where a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:11.022">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.686">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.659">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;, &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; or &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite &lt;/a&gt;to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:11.033">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:11.120">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:11.076">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should used be in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.538">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-70-WEAK-PASSWORD" name="A legitimate user sets a weak password in the sign up process putting their data at risk" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some web applications still allow passwords such as 111111 and abc123. These types of passwords typically result in weak and insecure passwords vulnerable to cracking. Weak passwords are a top contributor to security incidents and breaches.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SAFE-PASSWORD-CONSIDERATIONS" mitigation="33"/>
                <countermeasure ref="CWE-654" mitigation="34"/>
                <countermeasure ref="require-use-strong-passwords" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='" + request.getParameter("id") + "'";&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID='" + request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the ‘id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=' or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-210-SIGN-UP-ABUSE" name="Attackers use bots to automate account creation, and sometimes profile population, by abusing the application's account sign-up processes" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Bulk account creation, and sometimes profile population, by using the application's account sign-up processes. The accounts are subsequently misused for generating content spam, laundering cash and goods, spreading malware, a ecting reputation, causing mischief, and skewing search engine optimisation (SEO), reviews and surveys.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-VERIFY-ACCOUNTS-AFTER-REGISTRATION" mitigation="25"/>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="25"/>
                <countermeasure ref="network-rate-limit" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ac2723cf-9629-4543-a412-d02405841ce7" diagramComponentId="1152d8cd-b3c3-4a59-8aaf-12bc1b74a0e3" ref="15f35397-5995-4b8c-ace6-212985895a6e" name="Login" desc="" library="mitre-d3fend" parentComponentRef="" componentDefinitionRef="CD-LOGIN" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-SET-TIMESTAMP-ON-REQUEST" name="Attach timestamps or sequence numbers to each sent message" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To avoid replay attacks, a type of man in the middle attack, it is recommended to add a timestamp or sequence numbers in the exchanged messages, this will allow the receiver to discard messages with a duplicated sequence number or timestamp.&lt;/p&gt;&lt;p&gt;An example of sequence number in its messages is the TCP protocol with its ACK.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Transaction Authorization Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Transaction_Authorization_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review code application.&lt;/li&gt;&lt;li&gt;Check the exchanged messages and verifies if there is a timestamp or sequence number and that no duplicates are allowed.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.440">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionality requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. Together with asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action such as a button press on a FIDO hardware key or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionality, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.8" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.8" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.)&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.489">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-ANET" name="Authentication Event Thresholding" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Collecting authentication events, creating a baseline user profile, and determining whether authentication events are consistent with the baseline profile.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:33:18.601">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-AZET" name="Authorization Event Thresholding" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Collecting authorization events, creating a baseline user profile, and determining whether authorization events are consistent with the baseline profile.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:33:54.710">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AUTHZ-AFTER-AUTHN" name="Authorize after you authenticate" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Authorization should be conducted as an explicit check, and as necessary even after an initial authentication has been completed. Authorization depends not only on the privileges associated with an authenticated user, but also on the context of the request. The time of the request and the location of the requesting user may both need to be taken into account.&lt;/p&gt;&lt;p&gt;Sometimes a user's authorization for a system or service needs to be revoked, for example, when an employee leaves a company. If the authorization mechanism fails to allow for such revocation, the system is vulnerable to abuse by authenticated users exercising out-of-date authorizations.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authorize After You Authenticate" url="https://cybersecurity.ieee.org/blog/2015/11/13/authorize-after-you-authenticate/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate that no authorization process is conducted before an authentication process has previously finished.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.386">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SAML-VERIFY-IDP-X509" name="Check if the X509Certificate entity is really the correct certificate for your Identity Provider" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is necessary to ensure the identity of the supplier by verifying the certificate of the messages, to ensure that it is the correct one.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="SAML Raider - SAML2 Burp Extension" url="https://github.com/portswigger/saml-raider"/>
            <reference name="SAML Security Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/SAML_Security_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check if it is possible to remove the signature&lt;/li&gt;&lt;li&gt;Sign the SAML Response with own certificate&lt;/li&gt;&lt;li&gt;Check the signature algorithm in use&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.429">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-524" name="Clear caches of sensitive data" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications storing or caching data locally are at risk of attack and compromise of that data. Local temporary storage, thumbnail images, and configuration files often contain excerpts of sensitive information that may be left on the device during or after the application is used.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure all temporary files, caches, and storage are purged after use and when the application is closed.&lt;/li&gt;&lt;li&gt;Do not allow the application to cache sensitive information outside of the OS provided secure stores.&lt;/li&gt;&lt;li&gt;Use OS controls to restrict thumbnails of the application in cases where sensitive information is displayed.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Whether the Keyboard Cache Is Disabled for Text Input Fields" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05d-testing-data-storage#determining-whether-the-keyboard-cache-is-disabled-for-text-input-fields-mstg-storage-5"/>
            <reference name="OWASP MASVS - iOS - Testing for Sensitive Data in the Clipboard" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06d-testing-data-storage#finding-sensitive-data-in-the-keyboard-cache-mstg-storage-5"/>
          </references>
          <standards>
            <standard ref="2.4" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="2.4" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="2.4" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.4" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check the application for the use of caching.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify they are periodically emptied.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.246">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-IMPLEMENT-SSO" name="Consider using Single Sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Single Sign-on (SSO) occurs when a user logs in to one application and is then signed in to other applications automatically, regardless of the platform, technology, or domain the user is using. The user signs in only one time, hence the name of the feature (Single Sign-on).&lt;/p&gt;&lt;p&gt;SSO provides a seamless experience for users when using your applications and services. Instead of having to remember separate sets of credentials for each application or service, users can simply log in once and access your full suite of applications.&lt;/p&gt;&lt;p&gt;Whenever users go to a domain that requires authentication, they are redirected to the authentication domain where they may be asked to log in. If the user is already logged in at the authentication domain, they can be immediately redirected to the original domain without signing in again.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Single Sign-On" url="https://auth0.com/docs/authenticate/single-sign-on"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any chance to connect to a SSO from your application&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.401">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-CCSA" name="Credential Compromise Scope Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Determining which credentials may have been compromised by analyzing the user logon history of a particular system.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:34:23.060">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-DAM" name="Domain Account Monitoring" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Monitoring the existence of or changes to Domain User Accounts.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:34:46.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-603" name="Enforce authentication on the server-side" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data on the client-side must be considered tainted. &amp;nbsp;As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated on the server-side to prevent their subversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure credentials are passed securely from client-to server.&lt;/li&gt;&lt;li&gt;The server should compare the credentials with those stored on the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt;&lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt;&lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt;&lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. &amp;nbsp;Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify which functions the service provides which are authenticated or performing a privileged action.&lt;/li&gt;&lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A clear example of what you should look for would be an API endpoint which allows a client to update a resource, you should ensure this call checks the authentication on the server side (by checking the session having validated the authentication credentials previously).&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;In every portion of the application where a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.514">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.824">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.686">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.344">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.659">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-FORCE-LOGOUT" name="Force logout if account permissions have been revoked" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Active sessions could be used by a malicious actor even after the account has been removed or blocked from the system. This could open the door to MitM attacks and session hijacking attacks while the application connects to the IdP to confirm that the session has no more rights to operate.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Man-in-the-middle Attack" url="https://owasp.org/www-community/attacks/Manipulator-in-the-middle_attack"/>
            <reference name="Session Hijacking Attack" url="https://owasp.org/www-community/attacks/Session_hijacking_attack"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check periodically the session status with the SSO/IdP and force the log off process in case the active account was blocked/deleted.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should lead to temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failed login attempts, the account must be locked for a certain time period. This period must be increased after each new failed attempt up to a maximum of an hour.&lt;/li&gt;&lt;li&gt;When the application detects that an account is locked more times than usual, this account should be disabled (no more than 100 failed attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;, &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; or &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite &lt;/a&gt;to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.707">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-session-generation-and-expiration" name="Implement a secure Session Generation and Expiration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID exchange mechanism based on cookies provides multiple security features in the form of Session Generation and Expiration which is tracked in a session. This session is typically stored on the server for traditional web based session management. A session identifier is then given to the user so they can identify which server-side session contains the correct user data. The client only needs to maintain this session identifier, which also keeps sensitive server-side session data off of the client.&lt;/p&gt;&lt;p&gt;Here are a few controls to consider when building or implementing session management solutions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that the session id is long, unique and random. The session ID length must be at least 128 bits (16 bytes)&lt;/li&gt;&lt;li&gt;The session ID must be unpredictable (random enough) to prevent guessing attacks such as when an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good PRNG (Pseudo Random Number Generator) must be used. The session ID value must provide at least 64 bits of entropy (if a good PRNG is used, this value is estimated to be half the length of the session ID).&lt;/li&gt;&lt;li&gt;The application should generate a new session or at least rotate the session id during authentication and re-authentication.&lt;/li&gt;&lt;li&gt;The application should not treat OAuth and refresh tokens as their own session identifiers. Moreover, it should allow users to terminate trust relationships with linked applications.&lt;/li&gt;&lt;li&gt;The CSPs (Credential Service Provider) should re-authenticate the subscriber if it has not been authenticated since a given inactivity period. CSPs should inform the RP (Relying Parties) the last authentication time, to know if re-authentication is needed.&lt;/li&gt;&lt;li&gt;When a user chooses to log out (or otherwise has their session terminated), the user session must be terminated on the server-side, not solely at the client-side (for example by deleting or reissuing a session ID token/cookie).&lt;ul&gt;&lt;li&gt;Revoke user sessions on the server-side.&lt;/li&gt;&lt;li&gt;Redirect users to the login page, or provide a login prompt.&lt;/li&gt;&lt;li&gt;Where possible, ensure the session is not reused by the application server.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should implement an idle timeout after a period of inactivity and an absolute maximum lifetime for each session, after which users must re-authenticate. If the application has implemented a functionality to be always logged in, the application must force users to re-authenticate for more sensitive actions.&lt;/li&gt;&lt;li&gt;The length of the timeouts should be inversely proportional with the value of the data protected.&lt;ul&gt;&lt;li&gt;30 days&lt;/li&gt;&lt;li&gt;12 hours or 30 minutes of inactivity, 2FA optional&lt;/li&gt;&lt;li&gt;12 hours or 15 minutes of inactivity, with 2FA&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp Cheatsheet: Session Management" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="2.4.10.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.6.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
            <standard ref="7.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7.2.1" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check that sessions are renewed following the steps below:&lt;ul&gt;&lt;li&gt;Log in to the application.&lt;/li&gt;&lt;li&gt;Open another browser and go to the login page.&lt;/li&gt;&lt;li&gt;Log in to the application for the second time.&lt;/li&gt;&lt;li&gt;Check that the old session and session id are removed.&lt;/li&gt;&lt;li&gt;Check that a new session is created with new session id.&lt;/li&gt;&lt;li&gt;Check that the old and new session ids are different.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that sessions tokens are generated from a source with sufficient entropy and they are not predictable.&lt;/li&gt;&lt;li&gt;Check that the refresh tokens and OAuth sessions with linked applications have not been terminated by users.&lt;/li&gt;&lt;li&gt;Check the CSPs force the RP to re-authenticate after a certain period of inactivity.&lt;/li&gt;&lt;li&gt;Check that the logout and expiration invalidate the session token, following the steps below:&lt;ul&gt;&lt;li&gt;Open a browser.&lt;/li&gt;&lt;li&gt;Authenticate as a user A.&lt;/li&gt;&lt;li&gt;Get the Session ID and note it.&lt;/li&gt;&lt;li&gt;Logout of the service.&lt;/li&gt;&lt;li&gt;Set up the noted Session ID.&lt;/li&gt;&lt;li&gt;Try to access an authenticated section of the service and you should not be able to do it as user A.&lt;/li&gt;&lt;li&gt;To edit the cookies you can either use a proxy (i.e. OWASP ZAP, Burp, Fiddler, etc.) or a browser extension which allows you to tamper the cookies (i.e. Tamper Data, Cookie Manager, etc.).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check that the session expires after a certain period of inactivity following the steps below:&lt;ul&gt;&lt;li&gt;Verify the expected inactive timeout.&lt;/li&gt;&lt;li&gt;Check 'normal' use through a browser:&lt;ul&gt;&lt;li&gt;Go to the authentication feature of the component.&lt;/li&gt;&lt;li&gt;Authenticate as a user.&lt;/li&gt;&lt;li&gt;Leave the session open for a given time (check the expiration time that has been agreed to be implemented).&lt;/li&gt;&lt;li&gt;Revisit an authenticated page and determine if the session has expired (e.g. the session is no longer authenticated).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check the control is enforced on the server side and not using code in the browser:&lt;ul&gt;&lt;li&gt;Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and determine which cookies or other tokens are used to maintain session state. Alternatively, capture an authenticated application request for replay.&lt;/li&gt;&lt;li&gt;Store and replay the request after the timeout period to see if the application responds with authenticated data.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Review application operation and determine if any behavior artificially holds the session open, for example, heartbeat requests or calls to update data feeds sent from the client to the server are sometimes mistakenly interpreted as user activity, holding the session open.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.672">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.754">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-THREAD-CONCURRENCY" name="Implement threading, concurrency and asynchronicity" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to make your application more responsive to a user and maximize the performance of your user's computer, we have different coding techniques. Not so long ago, apps got faster simply by buying a newer PC or server and then that trend has reversed. Users still want responsive UI and business owners want servers that scale with their business. The transition to mobile and cloud and an internet-connected population of &amp;gt;3B users has resulted in a new set of software patterns.&lt;/p&gt;&lt;p&gt;Using multiple threads of execution is one of the most powerful ways to keep your application responsive to the user and at the same time make use of the processor in between or even during user events.&lt;/p&gt;&lt;p&gt;We use concurrency to take advantage of the hardware, so you can parallelize your code to distribute work across multiple processors.&lt;/p&gt;&lt;p&gt;Async programming is a key technique that makes it straightforward to handle blocking I/O and concurrent operations on multiple cores.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Parallel Processing, Concurrency, and Async Programming in .NET" url="https://docs.microsoft.com/en-us/dotnet/standard/parallel-processing-and-concurrency"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for bottlenecks in the workflow of the application that may cause a denial of service attack if exploited such as a misconfigured file reader that blocks the main thread if more than one file is uploaded to the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.452">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ACCOUNT-LOCKDOWN" name="Instead of completely locking out an account, place it in a lockdown mode with limited capabilities" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Depending on how critical the application is, accounts can be entirely locked out or just flagged to have most of their permissions removed. This is useful to ensure that the user experience remains good while at the same time protect the system of potential attacks due to an account misuse.&lt;/p&gt;&lt;p&gt;Developers should check that this lockdown mode doesn't reveal any potential information that could be relevant to an attacker as well as the actions that the user can do. Developers must provide a process to recover the account to its normal behavior.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Attempt to login several times with a wrong password&lt;/li&gt;&lt;li&gt;Login with the right password and check if the behavior is the same with and without having failed the login attempts.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.382">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-TOKEN-TIMEOUT" name="Invalidate a session after a predefined idle time has passed" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to keep the authenticated state and track the users progress, applications provide users with a session identifier or token which binds the user authentication credentials to the user HTTP traffic and the appropriate access controls enforced by the web application.&lt;/p&gt;&lt;p&gt;It is mandatory to set expiration timeouts for every session, establishing the amount of time a session will remain active. Insufficient session expiration by the web application increases the exposure of other session-based attacks, as for the attacker to be able to reuse a valid session ID and hijack the associated session.&lt;/p&gt;&lt;p&gt;The session expiration timeout values must be set accordingly with the purpose and nature of the web application, and balance security and usability. There are two automatic session expiration, iddle timeout and absolute timeout. Both values are highly dependent on how critical the web application and its data are. Common idle timeouts ranges are 2-5 minutes for high-value applications and 15-30 minutes for low risk applications. Absolute timeouts depend on how long a user usually uses the application. If the application is intended to be used by an office worker for a full day, an appropriate absolute timeout range could be between 4 and 8 hours.&lt;/p&gt;&lt;p&gt;When a session expires, the web application must take active actions to invalidate the session on both sides, client and server. The latter is the most relevant and mandatory from a security perspective.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Set session timeout to the minimal value possible depending on the context of the application.&lt;/li&gt;&lt;li&gt;Avoid "infinite" session timeout.&lt;/li&gt;&lt;li&gt;Prefer declarative definition of the session timeout in order to apply a global timeout for all application sessions.&lt;/li&gt;&lt;li&gt;Trace session creation/destruction in order to analyse the creation trend and try to detect a normal number of session creations (application profiling phase in a attack).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.457">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-JFAPA" name="Job Function Access Pattern Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Detecting anomalies in user access patterns by comparing user access activity to behavioral profiles that categorize users by role such as job title, function, department.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:35:16.683">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-LAM" name="Local Account Monitoring" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Analyzing local user accounts to detect unauthorized activity.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:35:44.213">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" name="Prevent Simultaneous Logins" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It's possible that the application needs or wants to have simultaneous session, in this case, please control the number of the total active session and limit it.&lt;/p&gt;&lt;p&gt;If the application does not want to allow simultaneous session logons, it must take effective actions after each new authentication event, implicitly terminating the previously available session, or asking the user (through the old, new or both sessions) about the session that must remain active.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Open different browsers, or a "normal" tab and an "anonymous" tab, and check the following points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Have you received some notification in some tab?&lt;/li&gt;&lt;li&gt;Was it possible to log in on the new login attempt? if the answer is yes, then has the previously open session been closed?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the first session has been closed, it is recommended to check that it has been carried out correctly. To do this, use a proxy in the process, and forward requests prior to logout and check the response.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SESSION-ID-ON-PARAMETER" name="Prevent the attacker from making the user use his session by accepting session IDs only from cookies, not from GET or POST parameters" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The preferred session ID exchange mechanism should allow defining advanced token properties, such as the token expiration date and time, or granular usage constraints. This is one of the reasons why cookies (RFCs 2109 &amp;amp; 2965 &amp;amp; 6265) are one of the most extensively used session ID exchange mechanisms, offering advanced capabilities not available in other methods.&lt;/p&gt;&lt;p&gt;The usage of specific session ID exchange mechanisms, such as those where the ID is included in the URL, might disclose the session ID (in web links and logs, web browser history and bookmarks, the Referer header or search engines), as well as facilitate other attacks, such as the manipulation of the ID or session fixation attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review the code and check where the session ID is set.&lt;/li&gt;&lt;li&gt;Functional test, review the traffic (requests and responses), and verify thtat the session ID only appears in the cookie.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.435">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.600">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-RAPA" name="Resource Access Pattern Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Analyzing the resources accessed by a user to identify unauthorized activity.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:36:39.231">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" name="Send a message to the user each time the system detects that the user is logging in from a new device or IP" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Aside from the IP address, there are a number of different factors that can be used to attempt to fingerprint a device. Some of these can be obtained passively by the server from the HTTP headers (particularly the "User-Agent" header), including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Operating system&lt;/li&gt;&lt;li&gt;Browser&lt;/li&gt;&lt;li&gt;Language&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using JavaScript it is possible to access far more information, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Screen resolution&lt;/li&gt;&lt;li&gt;Installed fonts&lt;/li&gt;&lt;li&gt;Installed browser plugins&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using these various attributes, it is possible to create a fingerprint of the device. This fingerprint can then be matched against any browser attempting to login to the account, and if it doesn't match then the user can be prompted for additional authentication. Many users will have multiple devices or browsers that they use, so it is not practical to block attempts that do not match the existing fingerprints.&lt;/p&gt;&lt;p&gt;To take in mind: data submitted from client can be spoofed by an attacker.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Credential Stuffing Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use the application and try to log in from different devices. Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Does the notification arrive?&lt;/li&gt;&lt;li&gt;Are the user's trusted devices saved in server (DB)?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.407">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-SDA" name="Session Duration Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Analyzing the duration of user sessions in order to detect unauthorized&lt;span class="Apple-converted-space" style=""&gt;&amp;nbsp; &lt;/span&gt;activity.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:37:03.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-525-CACHING" name="Set Cache-Control headers on sensitive and authenticated content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Browsers, servers, and upstream/intermediate devices may cache (temporarily store) data sent in
                        HTTP sessions for performance reasons. The protocol allows for a number of HTTP headers and
                        directives to control what data may be cached, where, and for how long. It is important to specify
                        cache-controls to prevent the exposure of sensitive data through the inappropriate caching
                        of authenticated and otherwise restricted access data, either in the users' browser or other
                        devices.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Configure the server or application to set cache-control headers on sensitive content.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The following headers are recommended:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;
                        &lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;
                        &lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;
                        &lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;
                        &lt;li&gt;Pragma: no-cache&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
          </references>
          <standards>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Review the HTTP Server responses to ensure appropriate cache directives are returned for all sensitive and authenticated content.&lt;/li&gt;&lt;li&gt;Using a browser:&lt;/li&gt;&lt;li&gt;Open the Web Developer Console.&lt;ul&gt;&lt;li&gt;Make requests to the different component end-points.&lt;/li&gt;&lt;li&gt;Verify the cache controls returned as part of these responses.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite):&lt;ul&gt;&lt;li&gt;Browse the site through the proxy.&lt;/li&gt;&lt;li&gt;Review server responses and/or use automated scanning to analyze cache headers.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;The following is an example of what should be set to prevent a disclosure of sensitive data:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;&lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;&lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;&lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;&lt;li&gt;Pragma: no-cache&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.264">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="store-passwords-unrecoverable-form" name="Store passwords in an unrecoverable form" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;To protect user passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the actual passwords.&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not store actual passwords in the data storage for verification during login.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance. Establish some restrictions, depending on the used function:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;The salt length must be at least 32 bits.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If bcrypt is used, the work factor must be as large as verification server performance allows, typically at least 13.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If we use the PBKDF2, the iteration count shall be as large as verification server performance allows, and it will typically allow at least 100,000 iterations.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt' value for every account.&amp;nbsp; Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks. The secret 'salt' value must be stored separately from the hashed passwords.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="Owasp CheatSheetSeries: Password Storage" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Password_Storage_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;Best practices dictate that the system should match a strong salted hash (SHA256 or greater and a unique hash for each account) to the one stored at the time the password was set.&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;For example, it is recommended to use a system salt of 32 bits or more, a keyed HMAC hash using &lt;span style="font-family: Arial; font-size: 11pt; font-weight: 700; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;SHA-2 or SHA-3,&lt;/span&gt;&lt;span style="font-family: Arial; font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt; and the stretching algorithm PBKDF2 with at least 10,000 iterations.&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not a clear-text password&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm).&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents the use of rainbow tables, or the identification of password collisions among users.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Consider using an algorithm with a configurable work factor, set to a high value to inhibit attacks.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/span&gt; 
&lt;span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.447">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-IMPLEMENT-LOGOUT" name="The logout function should be prominently visible to the user" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Developers must create a logout functionality that is clearly visible for the user when navigating the application.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if the logout functionality is accessible and how hard it is to disconnect from the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.397">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-SIGN-REQUESTS" name="Use of digital signatures to make it easier for the receiver to authenticate if the sender is really the person they think they are" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Making use of digital signatures on exchanged messages will make it more difficult for man-in-the-middle attacks to occur, so add a digital signature to your important messages if you want to verify the sender identity.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Top Ten Proactive Controls 2018 - C6: Implement Digital Identity" url="https://owasp.org/www-project-proactive-controls/v3/en/c6-digital-identity"/>
            <reference name="RFC7515" url="https://tools.ietf.org/html/rfc7515"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review code application and configuration&lt;/li&gt;&lt;li&gt;Check the exchanged messages and verify if signature is being used.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.445">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ONE-TIME-PASSWORD" name="Use one-time passwords" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use One Time Password (TOTP) codes. This can be achieved with:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Hardware&lt;/li&gt;&lt;li&gt;Software (cheaper option).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Software option would typically involve the user installing a TOTP application on their mobile phone, and then scanning a QR code provided by the web application which provides the initial seed. The authenticator app then generates a six digit number every 30 or 60 seconds.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Multi-Factor Authentication Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Multifactor_Authentication_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Try logging into the application several times:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Do you use the same password all the time?&lt;/li&gt;&lt;li&gt;Or do you use a different password each time?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.412">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should used be in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-RANDOM-SESSION-KEYS" name="Use random-session session keys, which are time-specific and will change with time making it difficult for an attacker to fool the receiver with an old message" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be unpredictable (random enough) to prevent guessing attacks, where an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good Cryptographically Secure Pseudorandom Number Generator must be used.&lt;/p&gt;&lt;p&gt;Additionally, a random session ID is not enough; it must also be unique to avoid duplicated IDs. A random session ID must not already exist in the current session ID space.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Log in and log out, while saving the session IDs and check:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The session id is different in every log in to the application?&lt;/li&gt;&lt;li&gt;Is it predictable? For example, one session ID is 123ABC&lt;strong&gt;D&lt;/strong&gt; and the next 123ABC&lt;strong&gt;E&lt;/strong&gt; (the example contains a short key to understanding).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To perform these checks it is possible to use DevTools from the browser or an easier way using a proxy to logall requests.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.424">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-UDTA" name="User Data Transfer Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Analyzing the amount of data transferred by a user.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:37:47.659">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-UGLPA" name="User Geolocation Logon Pattern Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Monitoring geolocation data of user logon attempts and comparing it to a baseline user behavior profile to identify anomalies in logon location.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:38:14.675">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RFC6819-5.1.5.3" name="Use short expiration time" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>A short expiration time for tokens is a means of protection against
   the following threats:&amp;nbsp;  
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;replay&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;token leak (a short expiration time will reduce impact)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;online guessing (a short expiration time will reduce the
      likelihood of success)&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
Note: Short token duration requires more precise clock synchronization between the authorization server and resource server. Furthermore, shorter duration may require more token refreshes (access token) or repeated end-user authorization processes (authorization "code" and refresh token).</desc>
          <implementations/>
          <references>
            <reference name="RFC6819" url="https://tools.ietf.org/html/rfc6819"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the token expiration time in the authorization server policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.526">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.538">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SAML-2.0-SC-C-6.4.3" name="Verify SAML assertion signatures and authenticate the issuer" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  The browser/POST profile requires the SAML response carrying SAML assertions to be signed, thus providing both message integrity and authentication. The Service Provider site MUST verify the signature and authenticate the issuer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   The following recommendations were proposed in response: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Always perform schema validation on the XML document prior to using it for any security--related purposes:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Always use local, trusted copies of schemas for validation.&lt;/li&gt; 
    &lt;li&gt;Never allow automatic download of schemas from third party locations.&lt;/li&gt; 
    &lt;li&gt;If possible, inspect schemas and perform schema hardening, to disable possible wildcard -type or relaxed processing statements.&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;li&gt;Securely validate the digital signature:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If you expect only one signing key, use StaticKeySelector. Obtain the key directly from the identity provider, store it in local file and ignore any KeyInfo elements in the document.&lt;/li&gt; 
    &lt;li&gt;If you expect more than one signing key, use X509KeySelector (the JKS variant). Obtain these keys directly form the identity providers, store them in local JKS and ignore any KeyInfo elements in the document.&lt;/li&gt; 
    &lt;li&gt;If you expect a heterogeneous signed documents (many certificates from many identity providers, multi-level validation paths), implement full trust establishment model based on PKIX and trusted root certificates.&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;li&gt;Avoid signature-wrapping attacks.&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Never use getElementsByTagName to select security related elements in an XML document without prior validation.&lt;/li&gt; 
    &lt;li&gt;Always use absolute XPath expressions to select elements, unless a hardened schema is used for validation.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Assertions and Protocols for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf"/>
            <reference name="OWASP SAML Cheat Sheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/SAML_Security_Cheat_Sheet.md"/>
            <reference name="Profiles for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-profiles-2.0-os.pdf"/>
            <reference name="Security and Privacy Considerations for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-sec-consider-2.0-os.pdf"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.532">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-WSAA" name="Web Session Activity Analysis" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Monitoring changes in user web session behavior by comparing current web session activity to a baseline behavior profile or a catalog of predetermined malicious behavior.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:38:45.072">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="detect" name="Detect" desc="" library="mitre-d3fend">
          <threats>
            <threat ref="D3-UBA" name="User Behaviour Analysis" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="mitre-d3fend" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="D3-ANET" mitigation="100"/>
                <countermeasure ref="D3-AZET" mitigation="100"/>
                <countermeasure ref="D3-CCSA" mitigation="100"/>
                <countermeasure ref="D3-DAM" mitigation="100"/>
                <countermeasure ref="D3-JFAPA" mitigation="100"/>
                <countermeasure ref="D3-LAM" mitigation="100"/>
                <countermeasure ref="D3-RAPA" mitigation="100"/>
                <countermeasure ref="D3-SDA" mitigation="100"/>
                <countermeasure ref="D3-UDTA" mitigation="100"/>
                <countermeasure ref="D3-UGLPA" mitigation="100"/>
                <countermeasure ref="D3-WSAA" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-37-CRACK-PASSWORD-HASH" name="A malicious user has access to the users' password hashes and tries to crack the passwords" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Although it is not possible to "decrypt" password hashes to obtain the original passwords, it is possible to "crack" the hashes in some circumstances.&lt;/p&gt;&lt;p&gt;The basic steps are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Select a password you think the victim has chosen (e.g.password1!).&lt;/li&gt;&lt;li&gt;Calculate the hash.&lt;/li&gt;&lt;li&gt;Compare the hash you calculated with the hash of the victim. If they match, you have correctly "cracked" the hash and now know the plaintext value of their password.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This process is repeated for a large number of potential passwords. Different methods can be used to select candidate passwords, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Lists of passwords obtained from other compromised sites.&lt;/li&gt;&lt;li&gt;Brute force (trying every possible candidate).&lt;/li&gt;&lt;li&gt;Dictionaries or wordlists of common passwords&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-600-SESSION-REUSE" name="An attacker can reuse old session credentials or session IDs for authorization" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;At his town's public library, John logs onto his bank's Web site to transfer money from his checking account to his savings account. Once John completes his transaction he gets distracted, forgets to sign off from his bank's Web site, and walks away from the computer.&amp;nbsp;&lt;/p&gt;&lt;p&gt;A second user, Malcolm, now uses the same computer as John. Instead of using the browser to navigate to a new site, Malcolm simply explores the browser history to return to the previous URL where John's account information was displayed.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Because John's session is still active Malcolm can now transfer money, open new accounts, order additional credit cards, or perform any other actions available to John via the bank's Web site.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-IMPLEMENT-LOGOUT" mitigation="50"/>
                <countermeasure ref="C-TOKEN-TIMEOUT" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-593-SSO-SYNC" name="Attackers are able to keep their application session active after the SSO/IdP blocks/deletes their account" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If a user successfully logs in via SSO and falls prey to a phishing attack, the attacker gets access to all the endpoints of the external applications within the cloud that the user is provisioned for.&lt;/p&gt;&lt;p&gt;If the attack is detected, the user account can be disabled. However, the user may still remain logged in. This could allow the attacker to stay logged on with access to the linked application.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-FORCE-LOGOUT" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-49-BRUTE-FORCE-AUTH" name="Attackers can brute force the authentication system to find valid credentials" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Hackers launch brute-force attacks using widely available tools that utilize wordlists and smart rulesets to intelligently and automatically guess user passwords. Although such attacks are easy to detect, they are not so easy to prevent.&lt;/p&gt;&lt;p&gt;For example, many HTTP brute-force tools can relay requests through a list of open proxy servers. Since each request appears to come from a different IP address, you cannot block these attacks simply by blocking the IP address. To further complicate things, some tools try a different username and password on each attempt, so you cannot lock out a single account for failed password attempts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="16"/>
                <countermeasure ref="C-ACCOUNT-LOCKDOWN" mitigation="16"/>
                <countermeasure ref="CWE-654" mitigation="16"/>
                <countermeasure ref="network-rate-limit" mitigation="20"/>
                <countermeasure ref="require-use-strong-passwords" mitigation="16"/>
                <countermeasure ref="security-logging" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-115-LOGIN-BYPASS" name="Attackers can bypass the login system using a less hardened alternative for accessing the system" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The basic way to take advantage of the application's access control flaws is called "forced browsing".&lt;/p&gt;&lt;p&gt;Let's say that the website http://mysite.com It is a website that supports the authenticity of the user and the administrator will be taken to the appropriate webpage after validation. But if an attacker knows the URL, he or she can enter it in their browser, for example&lt;/p&gt;&lt;p&gt;http://mysite.com/admin_page or http://mysite.com/user_page&lt;/p&gt;&lt;p&gt;If it is a secure website, it will be redirected to the login page. But if those pages are allowed to be accessed, it will be incomplete access control and will cause damage.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="20"/>
                <countermeasure ref="C-AUTHZ-AFTER-AUTHN" mitigation="20"/>
                <countermeasure ref="CWE-603" mitigation="20"/>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130-DOS-AUTH" name="Attackers can execute Denial of Service attacks to prevent valid users from accessing the system" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker leverages the security functionality of the system aimed at thwarting potential attacks (like automatic block of accounts after a number of failed login attempts) to launch a denial of service attack against a legitimate system user.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="25"/>
                <countermeasure ref="C-THREAD-CONCURRENCY" mitigation="25"/>
                <countermeasure ref="network-rate-limit" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-180-SAML-SPOOFING" name="Attackers can modify the SAML response from the Identify Provider and change assertions' values to impersonate valid users in the Service Provider" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Sometimes not only does the Service Provider fail to check the validity of the signature in the SAML response, but it doesn't even verify its mere presence. The equivalent of a Service Provider accepting unsigned SAML assertions is accepting a username without checking the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SAML-VERIFY-IDP-X509" mitigation="50"/>
                <countermeasure ref="SAML-2.0-SC-C-6.4.3" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='" + request.getParameter("id") + "'";&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID='" + request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the ‘id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=' or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-600-CRED-STUFFING" name="Attackers take control of another user's account without being detected if they get to know the password for that account" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Credential stuffing is the automated injection of stolen username and password pairs ("credentials") in to website login forms, in order to fraudulently gain access to user accounts.&lt;/p&gt;&lt;p&gt;Since many users will re-use the same password and username/email, when those credentials are exposed (by a database breach or phishing attack, for example) submitting those sets of stolen credentials into dozens or hundreds of other sites can allow an attacker to compromise those accounts too.&lt;/p&gt;&lt;p&gt;Credential Stuffing is a subset of the brute force attack category. Brute forcing will attempt to try multiple passwords against one or multiple accounts; guessing a password, in other words. Credential Stuffing typically refers to specifically using known (breached) username / password pairs against other websites.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-IMPLEMENT-SSO" mitigation="20"/>
                <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" mitigation="20"/>
                <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" mitigation="20"/>
                <countermeasure ref="CWE-654" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-60-MALICIOUS-REPLY" name="Attackers use replay attacks to execute malicious actions" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;A replay attack is a kind of man-in-the-middle attack in which an attacker sniffs messages being sent on a channel to intercept them and resend them under the cloak of authentic messages. What makes the replay attack particularly harmful is that the attacker does not even need to decrypt the message they resend but can still fool the receiver into thinking that the received message is legitimate.&lt;/p&gt;&lt;p&gt;One example of replay attack is called pass the hash. This is referring to the hash value that is associated with a password that is sent across the network during the authentication process. If the attacker can gain access to the hash, they may be able to replay that hash back to the server and pretend that they are the original workstation.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ONE-TIME-PASSWORD" mitigation="20"/>
                <countermeasure ref="C-RANDOM-SESSION-KEYS" mitigation="20"/>
                <countermeasure ref="C-SET-TIMESTAMP-ON-REQUEST" mitigation="20"/>
                <countermeasure ref="C-SIGN-REQUESTS" mitigation="20"/>
                <countermeasure ref="RFC6819-5.1.5.3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-37-CACHED-DATA" name="Sensitive data is compromised by inspecting cached data in the client side" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker can also use a decompiler to decompile a downloaded Java applet in order to look for information such as hardcoded IP addresses, file paths, passwords or other such contents.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-524" mitigation="50"/>
                <countermeasure ref="CWE-525-CACHING" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-37-SENSITIVE-DATA-URL" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Regardless of using encryption, the following URL will expose information in the locations detailed below:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;https://vulnerablehost.com/authuser?user=bob&amp;amp;authz_token=1234&amp;amp;expire=1500000000&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The parameter values for user, authz_token, and expire will be exposed in the following locations when using HTTP or HTTPS:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Referer Header&lt;/li&gt;&lt;li&gt;Web Logs&lt;/li&gt;&lt;li&gt;Shared Systems&lt;/li&gt;&lt;li&gt;Browser History&lt;/li&gt;&lt;li&gt;Browser Cache&lt;/li&gt;&lt;li&gt;Shoulder Surfing&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-61-SESSION-FIXATION" name="The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The attack consists of obtaining a valid session ID (e.g. by connecting to the application), inducing a user to authenticate himself with that session ID, and then hijacking the user-validated session by the knowledge of the used session ID. The attacker has to provide a legitimate Web application session ID and try to make the victim's browser use it. There are several techniques to execute the attack; it depends on how the Web application deals with session tokens. Below are some of the most common techniques:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Session token in the URL argument.&lt;/li&gt;&lt;li&gt;Session token in a hidden form field.&lt;/li&gt;&lt;li&gt;Session ID in a cookie.&lt;/li&gt;&lt;li&gt;Client-side script.&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SESSION-ID-ON-PARAMETER" mitigation="50"/>
                <countermeasure ref="secure-session-generation-and-expiration" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ff56a7c8-541b-4b05-841d-7e69279e6760" diagramComponentId="035d8447-a8c0-46d2-9d5c-7d73c3b1b39e" ref="06a46eb5-e0a4-42cb-934b-8f2e40f09617" name="SAML SSO Implmentation" desc="" library="" parentComponentRef="" componentDefinitionRef="saml-sso-implmentation" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="3c16b1c5-71cb-4d5e-82dd-8ec98dd8cf22" diagramComponentId="71b8156d-f422-4ef2-81b8-cd1c1f97d847" ref="28c2e0b0-617b-41a7-8f3f-c96189d26594" name="API gateway" desc="" library="microservices-library-dev" parentComponentRef="" componentDefinitionRef="api-gateway-microservice" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AG-LM-1" name="Framework complexities may make logging and monitoring difficult to use" state="0" impact="100" issueId="" issueLink="">
          <desc>There are many objects in a microservice which generate logs, and the capabilities of each may be very different.&amp;nbsp; This can result in a large body of disparate information, which makes it difficult to track and use effectively. In addition to routine logging features, to detect attacks and identify factors for degradation of services which may impact availability&amp;nbsp;it is necessary to monitor network traffic into and out of microservices.&amp;nbsp; The monitoring service should include analytics capabilities.&amp;nbsp;&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T18:58:21.141">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AG-AA-1" name="Misconfiguration with enterprise-wide authentication and authorization frameworks" state="0" impact="100" issueId="" issueLink="">
          <desc>Microservices generally communicate with each other using Application Programming Interfaces (APIs), which requires several core features to support complex interactions between a substantial number of components.&amp;nbsp; Authentication and access policy may vary depending on the type of APIs exposed by microservices-some may be public APIs; some may be private APIs; and some may be partner APIs, which are available only for business partners.&amp;nbsp; This creates a security challenge as it can be difficult ensure that all entry points are configured to the same robust settings despite their differing capabilities for doing so.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To address the challenges of authorizing of such a complex array of interfaces and services, API gateways offer a single entry point to a system.&amp;nbsp; However, while this simplifies things from the standpoint of external user access, the API Gateway will still need to effectively authenticate itself with the internal objects of the cluster.&amp;nbsp; There are a number of areas of potential weakness which must be supported to maintain the overall security of the cluster. 
&lt;/div&gt;Access tokens are a significant security measure in all systems and the internal objects of microservices should be created to use them where possible.&amp;nbsp; Integrating these successfully with API gateways can be a challenge. Distributed gateway deployments add yet more complexity as they provide an even wider variety of services and objects which must be integrated.&amp;nbsp; If authorization cannot be resolved consistently across distributed gateways, this will open up vulnerabilities which may be exploited by adversaries. Identity management is a strongly suggested strategy for configuring authentication and authorization.&amp;nbsp; It allows fine grained control of systems by allowing administrators to control which activities are authorized based on user identity and role.&amp;nbsp; API gateways must integrate with internal IAM policies as settings mismatches can result in users acting beyond their scope.&amp;nbsp; &amp;nbsp;&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T18:56:11.103">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="NIST-SMAS-MS-SS-12(2)" name="Connectors should be provided for integrating with identity providers (IdPs)" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When invoking IAM through an API gateway, it is essential to integrate with the identity providers in question.&amp;nbsp; This ensures that policies are robust and effective, and that changes are applied consistently from the IAM service to the gateway.&amp;nbsp; This is essential for maintaining security.&amp;nbsp; There are a number of tools available depending on the specific tools and requirements of the system.&amp;nbsp;&amp;nbsp;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="MS-SS-12" supportedStandardRef="NIST-Secure-Microservice-Strategies"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Implementation will depend on the individual API gateway in use.&amp;nbsp; Please follow the instructions in the documentation and apply according to the needs of your architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T18:54:57.189">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="NIST-SMAS-MS-SS-12(5)" name="Distributed gateway deployments should have a token translation (exchange) service between gateways" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The token presented to the initial gateway should have permissions with a broad scope whereas the token presented to inside gateways (or microgateways) should be more narrowly scoped with specific permissions or an entirely different token type that is appropriate for the target microservice platform. This helps to implement the least privilege paradigm. This can also work for a combination of initial gateway (that intercepts all client accesses) and microgateways (closer to microservices).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="MS-SS-12" supportedStandardRef="NIST-Secure-Microservice-Strategies"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Implementation will depend on the individual API gateway in use.&amp;nbsp; Please follow the instructions in the documentation and apply according to the needs of your architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T19:00:56.777">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="NIST-SMAS-MS-SS-12(1)" name="Integrate the API gateway with an identity management application to provision credentials before activating the API" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Identity management is such a key security component that it should be integrated at the earliest stages of implementation.&amp;nbsp; API gateways which are activated without IAM capabilities immediately leave the connected services vulnerable to exploitation.&amp;nbsp; Certain services may not work at all if IAM credentials are not provided.&amp;nbsp; The complexity of microservice architectures also makes it more difficult to add these capabilities after the fact.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="MS-SS-12" supportedStandardRef="NIST-Secure-Microservice-Strategies"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Implementation will depend on the individual API gateway in use.&amp;nbsp; Please follow the instructions in the documentation and apply according to the needs of your architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T18:53:31.939">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="NIST-SMAS-MS-SS-12(4)" name="Securely channel all traffic information to a monitoring and/or analytics application" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>This is essential both for detecting attacks (e.g., denial of service, malicious actions) and unearthing explanations for degrading performance.&amp;nbsp; Implementation will depend on the individual API gateway in use.&amp;nbsp;&amp;nbsp;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="MS-SS-12" supportedStandardRef="NIST-Secure-Microservice-Strategies"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Implementation will depend on the individual API gateway in use.&amp;nbsp; Please follow the instructions in the documentation and apply according to the needs of your architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T18:58:57.695">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="NIST-SMAS-MS-SS-12(3)" name="The API gateway should have a connector to an artifact that can generate an access token for the client request" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Access token are, and should be, used widely in microservices.&amp;nbsp; They provide credentials for authorization and can be used to specify the scope that was granted during authorization.&amp;nbsp; If the API gateway cannot also access these tokens then they cannot be used to authorize any users who enter through the gateway.&amp;nbsp; An artifact should exist which provides the gateway with tokens which will be accepted by internal system objects, and which provide the same level of access control (e.g., OAuth 2.0 Authorization Server).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="MS-SS-12" supportedStandardRef="NIST-Secure-Microservice-Strategies"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Implementation will depend on the individual API gateway in use.&amp;nbsp; Please follow the instructions in the documentation and apply according to the needs of your architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-08-19T18:56:31.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-115" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AG-AA-1">
                  <countermeasures>
                    <countermeasure ref="NIST-SMAS-MS-SS-12(1)" mitigation="25"/>
                    <countermeasure ref="NIST-SMAS-MS-SS-12(2)" mitigation="25"/>
                    <countermeasure ref="NIST-SMAS-MS-SS-12(3)" mitigation="25"/>
                    <countermeasure ref="NIST-SMAS-MS-SS-12(5)" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-SMAS-MS-SS-12(1)" mitigation="25"/>
                <countermeasure ref="NIST-SMAS-MS-SS-12(2)" mitigation="25"/>
                <countermeasure ref="NIST-SMAS-MS-SS-12(3)" mitigation="25"/>
                <countermeasure ref="NIST-SMAS-MS-SS-12(5)" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AG-LM-1">
                  <countermeasures>
                    <countermeasure ref="NIST-SMAS-MS-SS-12(4)" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-SMAS-MS-SS-12(4)" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c7e2696c-da88-4da0-9b38-15e0f93c5134" diagramComponentId="416ebb5d-d453-4e9d-9276-5c4e7502993d" ref="552cc3c8-2b75-4d54-b676-14ad78d0956d" name="Reset Password" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-RESET-PASSWORD" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-REFERRER-POLICY-RESET-PASSWORD" name="Consider using a Referrer-Policy HTTP header for the reset password page" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If you use URL tokens to reset password, ensure that the reset password page adds the Referrer Policy tag with the noreferrer value in order to avoid referrer leakage.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Forgot Password Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html"/>
            <reference name="Testing for Weak Password Change or Reset Functionalities" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/09-Testing_for_Weak_Password_Change_or_Reset_Functionalities"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the application configuration to verify if the Referrer header is configured&lt;/li&gt;&lt;li&gt;Check the traffic on the password reset functionality and verify the headers&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.755">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.824">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.686">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.659">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should lead to temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failed login attempts, the account must be locked for a certain time period. This period must be increased after each new failed attempt up to a maximum of an hour.&lt;/li&gt;&lt;li&gt;When the application detects that an account is locked more times than usual, this account should be disabled (no more than 100 failed attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;, &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; or &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite &lt;/a&gt;to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.707">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-password-recovery" name="Implement Secure Password Recovery Mechanism" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is common for an application to have a mechanism for a user to gain access to their account in the event they forget their password. A good design workflow for a password recovery feature will use multi-factor authentication elements. For example, it may ask a security question - something they know, and then send a generated token to a device - something they own.&lt;/p&gt;&lt;p&gt;To get this control in our approach, we have to abide by the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Send a Token Over a Protected Side-Channel: &lt;/strong&gt;Send a multi-factor token challenge with a randomly-generated code longer than 6 characters (containing both letters and numbers), by a secure channel, such TLS and&amp;nbsp;valid for a specific time period (no longer than 20 minutes) or until the password is successfully reset.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Allow user to change password in the existing session:&lt;/strong&gt; Display a simple HTML form with one input field for the code, one for the new password, and one to confirm the new password. Verify the correct code is provided and be sure to enforce all password complexity requirements that exist in other areas of the application. Avoid sending the username as a parameter when the form is submitted.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notify user: &amp;nbsp;&lt;/strong&gt;Ensure the application notifies the user, when the password is changed.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; It is important to keep audit records when password change requests are submitted, when reset messages were sent to users and when users utilize them. It is especially important to log failed attempts to answer security questions and failed attempted use of expired tokens. This data can be used to detect abuse and malicious behavior. Data such as time, IP address, and browser information can be used to spot trends of suspicious use.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Other Considerations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Whenever a successful password reset occurs, all other sessions should be invalidated.&lt;/li&gt;&lt;li&gt;Strength of the questions used for password reset should vary based on the nature of the credentials. Administrator credentials should have a higher requirement.&lt;/li&gt;&lt;li&gt;The ideal implementation should rotate the questions asked in order to avoid automation.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp CheatSheetSeries: Forgot Password" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Forgot_Password_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the recovery secret code is not sent in clear text to the user.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password hints or secret questions are not present.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password credential recovery does not reveal the current password in any way..&lt;/li&gt;&lt;li&gt;Check that the user is notified, when&amp;nbsp;an authentication factor is changed or replaced.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.902">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.754">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DELETE-SESSIONS-MENU" name="Offer to destroy all active sessions when users change their password" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be renewed or regenerated by the web application after any privilege level change within the associated user session. The most common scenario where the session ID regeneration is mandatory is during the authentication process, as the privilege level of the user changes from the unauthenticated (or anonymous) state to the authenticated state though in some cases still not yet the authorized state.&lt;/p&gt;&lt;p&gt;Common scenarios to consider include; password changes, permission changes, or switching from a regular user role to an administrator role within the web application. For all sensitive pages of the web application, any previous session IDs must be ignored, only the current session ID must be assigned to every new request received for the protected resource, and the old or previous session ID must be destroyed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The most common web development frameworks provide session functions and methods to renew the session ID, such as request.getSession(true) &amp;amp; HttpSession.invalidate() (J2EE), Session.Abandon() &amp;amp; Response.Cookies.Add(new...) (ASP .NET), or session_start() &amp;amp; session_regenerate_id(true) (PHP).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.747">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="pseudo-random-number-generator" name="Use a cryptographically secure pseudo-random number generator" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use a well-vetted algorithm that is currently considered to be strong and secure by experts in the field and ensure well-tested implementation with adequate length seeds. In general, if a pseudo-random number generator is not advertised as being cryptographically secure, then it is probably a statistical PRNG and should not be used in a security-sensitive context.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Pseudo-random number generators can produce predictable numbers if the generator is known and the seed can be guessed. A 256-bit seed is a good starting point for producing a "random enough" number.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure that all random numbers, especially those used for cryptographic parameters (keys, IV's, MAC tags), random file names, random GUIDs, and random strings are generated in a cryptographically strong fashion.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that random algorithms are seeded with sufficient entropy, containing at least 112 bits of entropy (typically a six digit random number is sufficient).&amp;nbsp; If less than 112 bits of entropy, ensure salting with a unique and random 32-bit salt and hashed with an approved one-way hash.&lt;/p&gt;&lt;p&gt;Use a secure pseudo-random number generator ensuring it leverages an appropriate length seed. The recommendation by FIPS 140-2 is 256-bit seed.&lt;/p&gt;&lt;p&gt;Ensure that the challenge nonce was generated with at least 64 bits and it is unique over the lifetime of the cryptographic device.&lt;/p&gt;&lt;p&gt;Tools like NIST RNG Test tool (as used in PCI PTS Derived Test Requirements) can be used to comprehensively assess the quality of a Random Number Generator by reading e.g. 128MB of data from the RNG source and then assessing its randomness properties with the tool.&amp;nbsp;&lt;/p&gt;&lt;p&gt;The following libraries are considered weak random numbers generators and should not be used.&amp;nbsp;&lt;/p&gt;&lt;p&gt;C library: random(), rand() instead use getrandom(2)&amp;nbsp;&lt;/p&gt;&lt;p&gt;Java library: java.util.Random() instead use java.security.SecureRandom&lt;/p&gt;&lt;p&gt;For secure random number generation, refer to NIST SP 800-90A. CTR-DRBG, HASH-DRBG, HMAC-DRBG. Refer to NIST SP800-22 A Statistical Test Suite for Random and Pseudorandom Number Generators for Cryptographic Applications, and the testing toolkit.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST Security Policies for Random and Pseudorandom Number Generators for Cryptographic Applications" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-22r1a.pdf"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
          </references>
          <standards>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.7.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Check that an adequately strong algorithm is used to generate random values, and that those random values are of a minimum 256-bit seed.&lt;/span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.760">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-MFA-FOR-PASSWORD-RECOVERY" name="Use MFA to implement a secure self-service password recovery process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Multi-factor authentication can be used as a safe method to recover a lost password.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Go to the Recover password functionality of the application&lt;/li&gt;&lt;li&gt;Follow the necessary steps until a MFA process shows up&lt;/li&gt;&lt;li&gt;Check that the MFA process works successfully&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should used be in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.538">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-114-CRED-CHANGE" name="An attacker abuses the password change functionallity to change the password of other users without knowing their credentials" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Example 1 (password change):&lt;/p&gt;&lt;p&gt;Step 1. An attacker logs in with their account and go to the change password function.&lt;/p&gt;&lt;p&gt;Step 2. The attacker uses an HTTP proxy to intercept the request.&lt;/p&gt;&lt;p&gt;Step 3. After intercepting the request, they modify the user ID of the request and they update it to the victim user ID. If the server process sucessfully this request the attacker was able to change the password of the user ID account to one of their election.&lt;/p&gt;&lt;p&gt;Example 2 (password reset):&lt;/p&gt;&lt;p&gt;Step 1. An attacker does a password reset in their account.&lt;/p&gt;&lt;p&gt;Step 2. The attacker receives the password reset link and this includes two parameters in the URL: the user ID and the token (https://host.com/resetpassword?userid=1232&amp;amp;token=xodkdosff32eksl)&lt;/p&gt;&lt;p&gt;Step 3. The attacker copy the received URL, edit the userid parameter (victim account) and launches the request. If the server process sucessfully this request the attacker was able to reset the password of the user ID account to one of their election.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="secure-password-recovery" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-131-REFERRER-TOKEN" name="A potential attacker that manages an external site can access the password reset token for an account inspecting the HTTP Referrer header" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If the page that the user is taken to includes content from other parties (such as loading scripts from other domains), then the reset token in the URL may be exposed in the HTTP Referer header sent in these requests.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-REFERRER-POLICY-RESET-PASSWORD" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-115-PASS-RESET-BYPASS" name="Attackers can bypass the change password process using a less hardened alternative for accessing the system" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The password reset process provides an alternative mechanism to access a user's account, and so should be at least as secure as the usual authentication process. However, it can provide an easier way to compromise the account, especially if it uses weaker authentication factors such as security questions.&lt;/p&gt;&lt;p&gt;The majority of pre-generated security questions are fairly simplistic in nature and can lead to insecure answers. For example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The answers may be known to family members or close friends of the user, e.g. "What is your mother's maiden name?", "What is your date of birth?".&lt;/li&gt;&lt;li&gt;The answers may be easily guessable, e.g. "What is your favorite color?", "What is your favorite baseball team?".&lt;/li&gt;&lt;li&gt;The answers may be brute forcible, e.g. "What is the first name of your favorite high school teacher?" - the answer is probably on some easily downloadable lists of popular first names, and therefore a simple brute force attack can be scripted.&lt;/li&gt;&lt;li&gt;The answers may be publicly discoverable, e.g. "What is your favorite movie?" - the answer may easily be found on the user's social media profile page.&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-MFA-FOR-PASSWORD-RECOVERY" mitigation="50"/>
                <countermeasure ref="secure-password-recovery" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='" + request.getParameter("id") + "'";&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID='" + request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the ‘id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=' or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-180-SESS-PERSISTENCE" name="Attackers keep their stolen sessions active even after the legitimate users have reset their passwords" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker is able to persist their access to a victim account in the application even when the legitimate user of the account reset their password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DELETE-SESSIONS-MENU" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-59-BRUTE-FORCE-TOKENS" name="Attackers may attempt to detect patterns in the password reset tokens and try all possible combinations of letters and numbers" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If tokens are generated based on known values, such as by taking the MD5 hash of the user's email with md5($email), an attacker will be able to generate password reset tokens for any account to compromise any account.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="pseudo-random-number-generator" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-37-SENSITIVE-DATA-URL" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Regardless of using encryption, the following URL will expose information in the locations detailed below:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;https://vulnerablehost.com/authuser?user=bob&amp;amp;authz_token=1234&amp;amp;expire=1500000000&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The parameter values for user, authz_token, and expire will be exposed in the following locations when using HTTP or HTTPS:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Referer Header&lt;/li&gt;&lt;li&gt;Web Logs&lt;/li&gt;&lt;li&gt;Shared Systems&lt;/li&gt;&lt;li&gt;Browser History&lt;/li&gt;&lt;li&gt;Browser Cache&lt;/li&gt;&lt;li&gt;Shoulder Surfing&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e4a5f7ad-3bb3-4bec-a54b-9e2bb97392dd" diagramComponentId="e1de2a25-9163-4edc-a287-5eb63a2a5ab5" ref="3386b603-adf2-436d-95e6-eed427624678" name="my web application" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="web-application-server-side" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-03-19T07:50:48.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-352" name="Cross Site Request Forgery" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application does not, or can not, sufficiently verify whether a well-formed, valid,
                        consistent request was intentionally provided by the user who submitted the request.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;When a web server is designed to receive a request from a client without any
                        mechanism for verifying that it was intentionally sent, then it might be possible for an
                        attacker to trick a client into making an unintentional request to the web server which will be
                        treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc.
                        and can result in exposure of data or unintended code execution.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-30T14:40:32.015">
              <output/>
            </source>
            <references>
              <reference name="CWE-352: Cross-Site Request Forgery (CSRF)" url="https://cwe.mitre.org/data/definitions/352.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-502" name="Deserialization of Untrusted Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The application deserializes untrusted data without sufficiently verifying that the resulting
                        data will be valid.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-29T09:15:58.113">
              <output/>
            </source>
            <references>
              <reference name="CWE-502: Deserialization of Untrusted Data" url="https://cwe.mitre.org/data/definitions/502.html"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-15" name="External Control of System or Configuration Setting" state="0" impact="100" issueId="" issueLink="">
          <desc>One or more system settings or configuration elements can be externally controlled by a user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-04T15:34:47.617">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-27T13:08:23.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-460" name="Improper Cleanup on Thrown Exception" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-09-02T15:18:22.543">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-116" name="Improper Encoding or Escaping of Output" state="0" impact="100" issueId="" issueLink="">
          <desc>The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-24T14:30:12.412">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-841" name="Improper Enforcement of Behavioral Workflow" state="0" impact="100" issueId="" issueLink="">
          <desc>The software supports a session in which more than one behavior
                        must be performed by an actor, but it does not properly ensure that the actor
                        performs the behaviors in the required sequence.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T10:02:51.060">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-173" name="Improper Handling of Alternative Encoding" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software does not properly handle cases in which the input uses an alternative encoding scheme that is valid for the control sphere to which the input is being sent.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-04T16:22:19.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-235" name="Improper Handling of Extra Parameters" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-26T15:17:10.402">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-22" name="Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Many file operations are intended to take place within a restricted directory. By using special elements such as ".." and "/" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the "../" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Path traversal also covers the use of absolute pathnames such as "/usr/local/bin", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal. In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add ".txt" to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:16.198">
              <output/>
            </source>
            <references>
              <reference name="CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" url="https://cwe.mitre.org/data/definitions/22.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-95" name="Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. "eval").</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-07-31T11:52:01.669">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-78" name="Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component. This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There are at least two subtypes of OS command injection:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(&amp;quot;nslookup [HOSTNAME]&amp;quot;) to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.The application accepts an input that it uses to fully select which program to run, as well as which commands to use.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The application simply redirects this entire command to the operating system. For example, the program might use &amp;quot;exec([COMMAND])&amp;quot; to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line. From a weakness standpoint, these variants represent distinct programmer errors.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;In the first variant, the programmer clearly intends input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:46.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes
                        output that is written to logs.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T08:43:58.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-915" name="Improperly Controlled Modification of Dynamically-Determined Object Attributes" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;If the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability. This weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, auto-binding, or object injection.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:16.210">
              <output/>
            </source>
            <references>
              <reference name="CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes" url="https://cwe.mitre.org/data/definitions/915.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-276" name="Incorrect Default Permissions" state="0" impact="100" issueId="" issueLink="">
          <desc>The software, upon installation, sets incorrect permissions for an object that exposes it to an unintended actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-30T14:51:59.821">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-29T09:16:00.999">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-548" name="Information Exposure Through Directory Listing" state="0" impact="100" issueId="" issueLink="">
          <desc>A directory listing is inappropriately exposed, yielding
                        potentially sensitive information to attackers.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-06T16:31:57.933">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Information Exposure Through Log Files" state="0" impact="100" issueId="" issueLink="">
          <desc>Information written to log files can be of a sensitive nature
                        and give valuable guidance to an attacker or expose sensitive user
                        information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-11-18T18:22:57.405">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-29T09:15:57.803">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-29T02:34:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-29T09:15:58.413">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-272" name="Least Privilege Violation" state="0" impact="100" issueId="" issueLink="">
          <desc>The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-27T14:25:25.098">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-779" name="Logging of Excessive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software logs too much information, making log files hard
                        to process and possibly hindering recovery efforts or forensic analysis after an
                        attack.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T08:29:02.372">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-350" name="Reliance on Reverse DNS Resolution for a Security-Critical Action" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-17T13:10:51.240">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-07-31T16:49:52.024">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DOS-APP" name="The application exposes high resource consuming functions without any protection (Layer 7 attacks)" state="0" impact="100" issueId="" issueLink="">
          <desc>A highly resource consuming function could be exploited by an attacker to bring the service down.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T08:12:55.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-541" name="The service returns back-end source code without interpreting it" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;If an include file source is accessible, the file may contain usernames and passwords, as well as sensitive information pertaining to the application and system. The source code can also be sent back to a client because of an error condition or an improperly configured handler.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-08T12:42:59.317">
              <output/>
            </source>
            <references>
              <reference name="CWE-541: Information Exposure Through Include Source Code" url="https://cwe.mitre.org/data/definitions/541.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L3" name="There is no network protection to protect against Layer 3" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no measures in place to mitigate (D)DoS at a network level.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T08:12:55.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L4" name="There is no network protection to protect against Layer 4" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T08:12:56.035">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-TLS" name="There is no protection against Layer 6 attacks (SSL/TLS)" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T08:12:56.017">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-650" name="Trusting HTTP Permission Methods on the Server Side" state="0" impact="100" issueId="" issueLink="">
          <desc>The server contains a protection mechanism that assumes that
                        any URI that is accessed using HTTP GET will not cause a state change to the
                        associated resource. This might allow attackers to bypass intended access
                        restrictions and conduct resource modification and deletion attacks, since some
                        applications allow GET to modify state.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T09:54:59.319">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;A web application accepts a user-controlled input specifying a link to an external site, and uses this link in a Redirect. This functionality aids phishing attacks.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-11-16T15:10:52.273">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-2" name="Unexpected Environment Condition" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;This is a generic weakness which includes several different situations that are all connected to unexpected environmental conditions and could be related to:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify the areas of the application that can be affected by the following causes:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Misconfiguration.&lt;/li&gt;
                            &lt;li&gt;Uncleared buffers, shared memory, files, etc.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Problems between the interaction of two different entities that cause unexpected
                            behavior.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;div&gt;
                            Perform testing on them to look for a security problem.&amp;nbsp;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-26T16:00:00.084">
              <output/>
            </source>
            <references>
              <reference name="CWE-2: Unexpected Environment Condition" url="https://cwe.mitre.org/data/definitions/2.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="D3-ACH" name="Application Configuration Hardening" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Modifying an application's configuration to reduce its attack surface.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:03:19.133">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="dyn-exec" name="Assure that the application avoids the use of eval() or other dynamic code execution features" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Assure that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for scripts that do not properly validate user inputs in the page parameter. A remote user can supply a specially crafted URL to pass arbitrary code to an eval() statement, which results in code execution.&lt;/p&gt;&lt;p&gt;Note 1: This attack will execute the code with the same permissions, potentially including operation system commands.&lt;/p&gt;&lt;p&gt;Note 2: Eval injection is prevalent in handler/dispatch procedures that want to invoke a large number of functions, or set a large number of variables.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-07-31T12:00:09.301">
              <output/>
            </source>
            <references>
              <reference name="Direct Dynamic Code Evaluation (Eval Injection)" url="https://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection"/>
              <reference name="[SCRIPT_ENGINE_INJECTION] Potential code injection when using Script Engine" url="https://find-sec-bugs.github.io/bugs.htm"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny-default-enf" name="Assure that the principle of deny by default exists for new users/roles" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deny by default is the principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny by default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Proactive Controls [C7]: Enforce Access Controls" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c7-enforce-access-controls.html"/>
          </references>
          <standards>
            <standard ref="4.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-07-19T09:05:56.295">
              <output/>
            </source>
            <references>
              <reference name="Testing for Bypassing Authorization Schema (OTG-AUTHZ-002)" url="https://www.owasp.org/index.php/Testing_for_Bypassing_Authorization_Schema_(OTG-AUTHZ-002)"/>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-639" name="Avoid using direct references to files" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method. Many flaws in applications result from unsafe handling of filenames or path data, for example directory traversal and arbitrary file disclosure. Use of filenames or other direct references to objects such as files on the server-side increases the risk of compromise of the system or unauthorized access to other files, content, or functionality.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Avoid using direct references to files or validate file name.&lt;/li&gt;&lt;li&gt;For example, instead of using:&amp;nbsp;www.example.com/open.jsp?file=details.txt&amp;nbsp;use:&amp;nbsp;www.example.com/open.jsp?file=[GUID]&amp;nbsp;and then use a lookup table on the server to associate the [GUID] value with file details.txt.&lt;/li&gt;&lt;li&gt;Files should be stored outside the web-root to prevent an attacker browsing directly to them.&lt;/li&gt;&lt;li&gt;Do not use obscurity to prevent access; for example do not rely on renaming a file to include a random string to prevent direct download or disclosure.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If direct references are used to access files from within the web-root deviating from recommended security practice, the following must be implemented:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String input validation must be applied.&amp;nbsp; Identify and filter for directory traversal meta-characters such as "../" or "..\" or "/", together with encoded variations and derivations.&lt;/li&gt;&lt;li&gt;Use of a strict white-list of files that may be downloaded.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;When a parameter that represents a file or a file path is found in the application:&lt;/li&gt;&lt;li&gt;For each of them try to change this parameter to gain access to unexpected files.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For example: www.example.com/open.jsp?file=details.txt&amp;nbsp;&lt;br&gt;Shouldn't be implemented that way and if so, it should not be possible to access locations outside of this domain (i.e. file=/etc/passwd or file= &lt;a href="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;, etc.).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:16.241">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-DCE" name="Dead Code Elimination" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Removing unreachable or "dead code" from compiled source code.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:08:28.825">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-SRV-XML" name="Define and enforce secure validation through an XSD or DSD schema on XML input data" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The XML standards provides for formal validation criteria to be specified in a schema (XSD or DTD). Defining a schema with security in mind, and enforcing it on input data, will mitigate many attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Define an XSD or DTD schema with secure input validation criteria.&lt;/li&gt;&lt;li&gt;Validate all XML input data against the schema before processing it.&lt;/li&gt;&lt;li&gt;The acceptance of unvalidated or non compliant data could have unexpected impact on the behavior of the application, and may facilitate attacks such as SQL injection.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API6:2019-Mass Assignment" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;For every endpoint which consumes XML data.&lt;/li&gt;
                            &lt;li&gt;Get the permitted structure of this data.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Construct non-compliant samples and send them to the endpoints.&lt;/li&gt;
                            &lt;li&gt;Check they are not accepted.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-30T22:40:28.032">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC" name="Detect and notify the usage of automated tools or unusual behavior" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Don't allow users to manipulate a system or guess its behavior based on input or output timing and detect the usage of automated tools or unusual behavior, such as actions not performed in reasonable "human time" or other abnormal time patterns.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;When the usage of automated tools is detected, the application should respond by denying access and notifying the security group.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Use several automated tools to perform normal user actions.&lt;/li&gt;
                            &lt;li&gt;Check that the applications detects these actions, denies the users access and
                            notifies the security group.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T10:11:35.026">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection-against-data-mining" name="Detect and protect against data mining techniques" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data mining is an analytical process that attempts to find correlations or patterns in large data sets for the purpose of data or knowledge discovery. Data storage objects include database records and database fields. Sensitive information can be extracted from data mining operations. When information is personally identifiable information, it may lead to unanticipated revelations about individuals and give rise to privacy risks. Prior to performing data mining activities, organizations determine whether such activities are authorized. Organizations may be subject to applicable laws, executive orders, directives, regulations, or policies that address data mining requirements. Organizational personnel consult with the senior agency official for privacy and legal counsel regarding such requirements.&lt;/p&gt;&lt;p&gt;Data mining prevention and detection techniques include limiting the number and frequency of database queries to increase the work factor needed to determine the contents of databases, limiting types of responses provided to database queries, applying differential privacy techniques or homomorphic encryption, and notifying personnel when atypical database queries or accesses occur. Data mining protection focuses on protecting information from data mining while such information resides in organizational data stores. In contrast, AU-13 focuses on monitoring for organizational information that may have been mined or otherwise obtained from data stores and is available as open-source information residing on external sites, such as social networking or social media websites.&lt;/p&gt;&lt;p&gt;EO 13587 requires the establishment of an insider threat program for deterring, detecting, and mitigating insider threats, including the safeguarding of sensitive information from exploitation, compromise, or other unauthorized disclosure. Data mining protection requires organizations to identify appropriate techniques to prevent and detect unnecessary or unauthorized data mining. Data mining can be used by an insider to collect organizational information for the purpose of exfiltration.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
          </references>
          <standards>
            <standard ref="AC-23" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your system supports policies that protect against data mining such as filtering, throttling and anomaly detection.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-29T09:57:45.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T08:30:04.021">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DIRECTORY_LISTING" name="Disable web server directory listing and ensure file metadata (e.g. .git) and backup files are not present within web roots" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Indexable directories allow an attacker to easily discover the existence of content on your web server that should remain private.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Disable directory listings in the web - or application - server configuration by default.&lt;/li&gt;&lt;li&gt;Restrict access to unnecessary directories and files.&lt;/li&gt;&lt;li&gt;Create an index (default) file for each directory.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="Apache - auto index" url="https://httpd.apache.org/docs/trunk/mod/mod_autoindex.html"/>
            <reference name="Apache - directory listing" url="https://wiki.apache.org/httpd/DirectoryListings"/>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP Directory_Indexing" url="https://www.owasp.org/index.php/OWASP_Periodic_Table_of_Vulnerabilities_-_Directory_Indexing"/>
            <reference name="OWASP Insecure Indexing" url="https://www.owasp.org/index.php/File_System#Insecure_Indexing"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check that the directory listing is disabled on the web server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-06T16:26:48.341">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-11.5" name="Do not share system information in HTTP headers and responses" issueId="" issueLink="" platform="" cost="0" risk="55" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should not share detailed version information of system components or other information that would assist attackers in the HTTP header or HTTP responses.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the HTTP responses and headers do not reveal sensitive data about the system.
                            Using a command line web client like telnet or netcat could help on this task.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-24T08:56:31.081">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-FILE-DATA" name="Do not use untrusted client-side data in server-side file operations" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application may be required to perform server-side file operations based on client-side actions. This can expose the application to attack through remote or local file-inclusion, or remote code execution attacks if unsafe data is used in file inclusion, class loader, or reflection capabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tainted, untrusted, client-side data must not be used directly in server-side file load operations.&lt;/li&gt;&lt;li&gt;Where server-side operations are dependent on client-side input, this should be mapped to pre-defined operations on the server-side rather than using tainted client-side input directly.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify sources of data entering the application.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Classify them into trusted and untrusted.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;if they are untrusted, make sure there is a validation and sanitization mechanism before sending this data into another system (Database, Command, etc.).&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-30T12:59:27.639">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-532" name="Do not write secrets to the log files" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        The logs may be accessed by attackers and in order to protect sensitive data, no such sensitive
                        data should be included in the logs
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Review the logs.&lt;/li&gt;
                            &lt;li&gt;Check that no sensitive data is included in the logs.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-24T08:53:30.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:18.133">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;In every portion of the application where a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-27T14:26:48.645">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-28T17:37:42.406">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-HTTP-METHODS" name="Ensure that the application accepts only a defined set of required HTTP request methods" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP offers a number of methods that can be used to perform actions on the web server. Many of theses methods are designed to aid developers in deploying and testing HTTP applications. These HTTP methods can be used for nefarious purposes if the web server is misconfigured. For example, Cross Site Tracing (XST), a form of cross site scripting using the server's HTTP TRACE method.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;While GET and POST are by far the most common methods that are used to access information provided by a web server, the Hypertext Transfer Protocol (HTTP) allows several other (and somewhat less known) methods. RFC 2616 (which describes HTTP version 1.1 which is the standard today) defines the following eight methods:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;HEAD&lt;/li&gt;&lt;li&gt;GET&lt;/li&gt;&lt;li&gt;POST&lt;/li&gt;&lt;li&gt;PUT&lt;/li&gt;&lt;li&gt;DELETE&lt;/li&gt;&lt;li&gt;TRACE&lt;/li&gt;&lt;li&gt;OPTIONS&lt;/li&gt;&lt;li&gt;CONNECT&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Some of these methods can potentially pose a security risk for a web application, as they allow an attacker to modify the files stored on the web server and, in some scenarios, steal the credentials of legitimate users. More specifically, the methods that should be disabled are the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;PUT: &lt;/strong&gt;This method allows a client to upload new files onto the web server. An attacker may exploit this by uploading malicious files (e.g.: an asp file that executes commands by invoking cmd.exe), or by simply using the victim's server as a file repository.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;DELETE:&lt;/strong&gt; This method allows a client to delete a file on the web server. An attacker may exploit it as a very simple and direct way to deface a web site or to mount a DoS attack.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CONNECT: &lt;/strong&gt;This method could allow a client to use the web server as a proxy.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;TRACE: &lt;/strong&gt;This method simply echoes back to the client whatever string has been sent to the server, and is used mainly for debugging purposes. This method, originally assumed harmless, can be used to mount an attack known as Cross Site Tracing, which was discovered by Jeremiah Grossman (see links at the bottom of the page).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If an application needs one or more of these methods, such as REST Web Services (which may require PUT or DELETE), it is important to check their usage is properly limited to trusted users and safe conditions.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure the application accepts only the HTTP requests GET and POST. The HTTP requests TRACE, PUT and DELETE are blocked.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP test HTTP methods" url="https://github.com/ManhNho/OWASP-Testing-Guide-v5/blob/master/document/4%20Web%20Application%20Security%20Testing/4.3%20Configuration%20and%20Deployment%20Management%20Testing/4.3.6%20Test%20HTTP%20Methods%20(OTG-CONFIG-006).md"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application only accepts the request with the following HTTP
                            methods: GET and POST.&lt;/li&gt;
                            &lt;li&gt;Check that the application rejects and blocks the following requests with the HTTP
                            methods: TRACE, PUT and DELETE.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T09:56:11.228">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SAME-ENCODING-STYLE" name="Ensure that the client-side and the server-side are using the same encoding style" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the client-side and the server-side are using the same encoding style.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the server-side and the client-side are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T11:32:37.119">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SEC-DEPLOY" name="Ensure the build pipeline contains a build step to automatically build and verify the secure deployment of the application" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the build pipeline contains a build step to automatically build and verify the secure deployment of the application, particularly if the application infrastructure is software defined, such as cloud environment build scripts.</desc>
          <implementations/>
          <references>
            <reference name="Secure development and deployment guidance" url="https://www.ncsc.gov.uk/collection/developers-collection?curPage=/collection/developers-collection/principles/secure-the-build-and-deployment-pipeline"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.14.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>
                            Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
                            &lt;br /&gt;
                            &lt;br /&gt;In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
                            &lt;br /&gt;
                            &lt;br /&gt;4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
                            &lt;br /&gt;4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
                            &lt;br /&gt;4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
                            &lt;br /&gt;4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
                            &lt;br /&gt;4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
                            &lt;br /&gt;4.3.6 Test HTTP Methods (OTG-CONFIG-006)
                            &lt;br /&gt;4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
                            &lt;br /&gt;4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
                            &lt;br /&gt;4.3.9 Test File Permission (OTG-CONFIG-009)
                            &lt;br /&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-26T16:08:42.940">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="configuration-integrity" name="Ensure the integrity of all security-relevant configurations to detect tampering" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Web server and application server configurations play a key role in the security of a web application. These servers are responsible for serving content and invoking applications that generate content. In addition, many application servers provide a number of services that web applications can use, including data storage, directory services, mail, messaging, and more. Failure to manage the proper configuration of your servers can lead to a wide variety of security problems.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation:&lt;/b&gt;
&lt;/div&gt;
&lt;div&gt;
  Authorized administrators need to ensure the integrity of all security-relevant configurations to detect tampering.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="14.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
&lt;/div&gt;
&lt;div&gt;
  4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
&lt;/div&gt;
&lt;div&gt;
  4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
&lt;/div&gt;
&lt;div&gt;
  4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
&lt;/div&gt;
&lt;div&gt;
  4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
&lt;/div&gt;
&lt;div&gt;
  4.3.6 Test HTTP Methods (OTG-CONFIG-006)
&lt;/div&gt;
&lt;div&gt;
  4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
&lt;/div&gt;
&lt;div&gt;
  4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
&lt;/div&gt;
&lt;div&gt;
  4.3.9 Test File Permission (OTG-CONFIG-009)&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-04T15:35:59.265">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOGS-INTEGRITY" name="Ensure the integrity of the logging system" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure Log integrity for the application generated logs, such as storing logs on write-once
                        media, forwarding a copy of the logs to a centralized SIEM or generating message digests for
                        each log file.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-04 Audit Storage Capacity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/173-08_02_AU-04"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SA-18" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the logs integrity is controlled by making daily backups or leveraging external
                            tools for log monitoring.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T08:47:41.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ENV-USE" name="Ensure there are no environmental security weaknesses" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Application security can be undermined by misconfiguration of the underlying server or
                        development environment.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Ensure that vendor and best-practice guidelines have been applied, in particular affecting areas
                        such as:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographic strength of elements such as session tokens, GUIDs, and protection of
                        data in transit and at rest.&lt;/li&gt;
                        &lt;li&gt;Removal of debugging and compiler options and artifacts used during development.&lt;/li&gt;
                        &lt;li&gt;Configuration of error trapping and use of generic error messages and pages (e.g.
                        stack traces should not be returned to users).&lt;/li&gt;
                        &lt;li&gt;Appropriate access controls over software components, variables (e.g. EJBs and
                        methods).&lt;/li&gt;
                        &lt;li&gt;Insecure or inappropriate storage of data in configuration files or other data
                        structures (e.g. passwords in configuration files).&lt;/li&gt;
                        &lt;li&gt;Use of compilation/build features or security enhancements provided by the IDE&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;&lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Vulnerable Components" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/vulnerable-components.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A06:2021-Vulnerable and Outdated Components" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A9:2017-Using Components with Known Vulnerabilities" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;figure class="table"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Identify the areas of the application that could potentially be affected by the following:&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Verify they are correctly implemented.&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2017-06-19T10:25:59.986">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-11-19T07:11:21.980">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-EHPV" name="Exception Handler Pointer Validation" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Validates that a referenced exception handler pointer is a valid exception handler.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:08:58.724">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="harden-http-headers" name="Harden HTTP Headers" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP headers are a fundamental part of website security.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The Referrer-Policy HTTP header controls how much referrer information (sent via the Referrer header) should be included with requests. This security header was designed to prevent cross-domain Referrer leakage.&lt;/li&gt;&lt;li&gt;The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.&lt;/li&gt;&lt;li&gt;The Content-Disposition response header tells the browser to download a file rather than displaying it in the browser window.&lt;/li&gt;&lt;li&gt;If a response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use a suitable "Referrer-Policy" header, such as "no-referrer" or "same-origin".&lt;/li&gt;&lt;li&gt;Don't use the Origin header for authentication or access control decisions, as the Origin header can easily be changed by an attacker.&lt;/li&gt;&lt;li&gt;Use the Content-Disposition response header for file downloading in all API responses with the following directives: Content-Disposition: attachment; filename="api.json" (or other appropriate filename for the content type).&lt;/li&gt;&lt;li&gt;Use a content-type header specifying a safe character set (e.g., UTF-8, ISO 8859-1) in every HTTP response.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="HTML does not specify charset" url="https://portswigger.net/kb/issues/00800200_html-does-not-specify-charset"/>
            <reference name="OWASP Secure Headers Project" url="https://www.owasp.org/index.php/OWASP_Secure_Headers_Project"/>
            <reference name="Origin Header" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin"/>
            <reference name="Referrer-Policy" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"/>
            <reference name="Reflected File Download" url="https://www.owasp.org/index.php/Reflected_File_Download"/>
            <reference name="Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP)" url="https://tools.ietf.org/html/rfc6266"/>
          </references>
          <standards>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;An easy way to access your HTTP security headers, as part of your response headers, is to fire up Chrome DevTools. To run this click into the "Network" panel and press Ctrl + R (Cmd + R) to refresh the page. Click into your domain's request and you will see a section for response headers.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Check if "Referrer-Policy" header exists in HTTP responses and has the right directives to prevent cross-domain Referrer leakage.&lt;/li&gt;&lt;li&gt;From a penetration testing perspective you should look for insecure configurations; for example, when the server returns back the Origin header in the Access-Control-Allow-Origin without any additional checks AND returns Access-Control-Allow-Credentials: true, which can lead to access of sensitive data. Note that this configuration is very insecure, and is not acceptable in general terms, except in the case of a public API that is intended to be accessible by everyone.&lt;/li&gt;&lt;li&gt;Try Reflected File Download input payloads to launch commands on the client machine. Reflected File Download is an attack combining URL path segments (now deprecated) with pages that reflect user inputs in the response. Generally web services vulnerable to JSONP Injection are leveraged to deliver malware to end users.&lt;/li&gt;&lt;li&gt;Character encoding has a popular misuse; namely, being used for encoding malicious injection strings in a way that obfuscates them. Try different character encoding schemes (like UTF-7) to bypass input validation filters, or take advantage of particular ways in which browsers render encoded text.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-04T16:26:41.554">
              <output/>
            </source>
            <references>
              <reference name="A new security header: Referrer Policy" url="https://scotthelme.co.uk/a-new-security-header-referrer-policy/"/>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
              <reference name="Reflected File Download - A New Web Attack Vector" url="https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/reflected-file-download-a-new-web-attack-vector/"/>
              <reference name="Test Cross Origin Resource Sharing (OTG-CLIENT-007)" url="https://www.owasp.org/index.php/Test_Cross_Origin_Resource_Sharing_(OTG-CLIENT-007)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="identify-dns-domains" name="Identify the DNS domains periodically to update the information about them" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should have a protection from sub-domain takeovers if the application relies upon DNS entries or DNS sub-domains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (autogen-bucket-id.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify the forward and reverse DNS lookups.&lt;/li&gt;&lt;li&gt;Verify the connection to the DNS was authenticated successfully by username/password or certificate and that they are active.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-17T13:12:21.684">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-L7" name="Identity which functions of the application are resource consuming and protect and monitor them (optionally set up a WAF)" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DoS attacks against the application layer also aim to use up the memory and process time that the application requires to function properly while minimizing the resources employed by the attacker by using vulnerabilities or flaws in the application. The main characteristics of this type of attack are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The requirement for less bandwidth compared to other methods such as SYN Flood attacks, and as such, the infrastructure necessary to launch a successful attack is usually minor.&lt;/li&gt;&lt;li&gt;Greater difficulty in distinguishing between malicious and legitimate traffic. Many of the most common protection measures or systems focus on the network or transport layer, and as such, they would not be efficient when the target of the attack is the application layer. It is even difficult for the defense systems that monitor this layer to distinguish between malicious and legitimate traffic.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As we have indicated, this type of attack is very specific, and generally require fewer resources from the attacker to achieve devastating effects in the systems attacked. However, this type of attack requires more time to analyze the targeted system in order to discover vulnerabilities or bottlenecks that can be exploited during the attack.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Analyze weaknesses or bottlenecks in the design, the implementation, or even the functioning of the application to identify "heavy" requests that are resource consuming. For example, if the web application has a search engine, an attack could be to carry out searches that require a high level of resources to generate a bottleneck and eventually disable the service.&lt;/li&gt;&lt;li&gt;Implement a challenge to the device making the network request in order to test whether or not it is a bot. This is done through a test much like the CAPTCHA test commonly found when creating an account online. By giving a requirement such as a JavaScript computational challenge, many attacks can be mitigated.&lt;/li&gt;&lt;li&gt;Use of a web application firewall, managing and filtering traffic through an IP reputation database, and through on-the-fly network analysis by engineers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Layer 7 DDoS Attacks" url="https://owasp.org/www-pdf-archive/Layer_7_DDOS.pdf"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 7 DDoS PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space. One well-known application attack is Slowloris, which targets web servers. Verify that the implemented Layer 7 protection mechanisms (Javascript challenges, CAPTCHA tests, WAF) are effective.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T07:59:20.892">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="implement-monitoring-unusual-activities" name="Implement and monitor Business Logic Limits for actions and transactions" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement in the application the appropriate limits for specific business actions and transactions, to enforce the correct usage of the application for each user ensuring they cannot bypass important steps in the flow. This business logic limits provide us protection against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/p&gt;&lt;p&gt;All business actions or transactions that exceed the established limits, should be recorded in the logs and monitored as unusual events.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A04:2021-Insecure Design" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.&lt;/li&gt;
   &lt;li&gt;Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/li&gt;
  &lt;li&gt;Verify the application monitors for unusual events or activity from a business logic perspective.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-28T16:02:57.670">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;, &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; or &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite &lt;/a&gt;to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:42.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="error-handling-centralized" name="Implement centralized mechanisms to manage errors and exceptions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a functionality or a mechanism to manage exceptions in a centralized manner and avoid including duplicated try/catch blocks in the code.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;A well-planned error/exception handling strategy is important for three reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Good error handling does not give an attacker any information which can be leveraged for attacking the application.&lt;/li&gt;&lt;li&gt;A proper centralized error strategy is easier to maintain and reduces the chances of any uncaught errors "Bubbling up" to the front-end of an application.&lt;/li&gt;&lt;li&gt;Information leakages can lead to social engineering exploits.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Building an infrastructure for consistent error reporting proves more difficult than error handling. All exceptions should be caught as events with the severity of the error. These events will be logged.&lt;/p&gt;&lt;p&gt;The centralized system should reorganize all events and throw the corresponding error or system message in a consistent manner, depending on the severity of the error.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Code Review: Error Handling" url="https://www.owasp.org/index.php/Codereview-Error-Handling"/>
            <reference name="OWASP Error Handling" url="https://www.owasp.org/index.php/Error_Handling"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="14.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify that a centralized system is in place to catch errors and exceptions, and these errors are shown in a correct manner.&lt;/li&gt;&lt;li&gt;Verify all errors thrown from the centralized system are displayed in a correct fashion.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-09-02T15:20:46.813">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-01-20T16:01:40.000">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-TLS" name="Inspect the TLS/SSL traffic on a capable device before sending the connection down on your infrastructure" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;TLS adds another vector for computational attacks since a client can easily (with little computational effort) force the server to expend relatively large computational work. If a web application is delivered over TLS, an attacker can also choose to attack the TLS negotiation process. TLS is computationally expensive so an attacker can reduce a server's availability by sending unintelligible data. In a variation of this attack, an attacker completes the TLS handshake but perpetually renegotiates the encryption method. Or an attacker can attempt to exhaust server resources by opening and closing many TLS sessions.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;To mitigate consider options like offloading the SSL from the origin infrastructure and inspecting the application traffic for signs of attack traffic or violations of policy at an application delivery platform (ADP).&lt;br&gt;A good ADP will also ensure that your traffic is then re-encrypted and forwarded back to the origin infrastructure with unencrypted content only ever residing in protected memory on a secure bastion host.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 6 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt;. It covers all the required tests for TLS &amp;amp; SSL assessments and is regularly updated.&lt;/p&gt;&lt;p&gt;There are many testing options that can be used with &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; and the options you should use will depend greatly on your testing requirements. Below are some useful examples, for an overview of &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; command-line options. run ./testssl.sh with no other options.&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to console&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Test all hosts on a Subnet and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Same as above, but only enumerate each servers supported ciphers:&lt;br&gt;./testssl.sh -E 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T08:01:23.312">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" name="Limit the number of accounts with privileges allowing modification and/or deletion of audit logs files" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit the number of accounts with privileges to modify and/or delete audit logs files.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the number of accounts with privileges to modify the logs is limited and
                            controlled.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T08:31:39.414">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-VAL-LOG" name="Log and reject all data validation failures" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Data validation failures, together with access control violations, are symptomatic of malicious activity where an attacker is attempting to subvert the protections in place. It is therefore likely that unexpected input detected by the application relates to an attack. Rejecting and logging such activity, and ideally terminating the session, increases the likelihood of detecting and inhibiting structured attacks against the application.
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Log all validation failures when rejecting requests.&lt;/li&gt;
  &lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;
  &lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;
  &lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.5.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-29T18:33:15.202">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="IR-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-24T13:07:20.403">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-LOGGING" name="Logging the data access and the modification of personal data" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that every access and modification of personal data is logged (The log should be precise enough to know who changed what and when). This includes data access from the application as well as data access from privileged accounts, such as database admins. In practice, this means logging both on application, middleware and operating system (OS) level.
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="Art.5" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Test accessing and modifying user personal data as legitimate users, employees, administrators and malicious actors.&lt;/li&gt;
                &lt;li&gt;Verify appropriate logging of all the above activities are successful and sufficiently detailed.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-01-18T15:00:32.431">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-TLS-FAILURES" name="Log the backend TLS connection failures" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to record backend TLS connection failures and include these in the
                        logs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that backend TLS connection failures are recorded in the logs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T09:24:21.504">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-PAN" name="Pointer Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Comparing the cryptographic hash or derivative of a pointer's value to an expected value.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:09:31.030">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-541" name="Prevent unauthorised access to source code through the service" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to the source-code for the application can aid an attacker in determining bugs or vulnerabilities in the code or logic. For closed-source projects it is therefore important to control and restrict access to the source. Application services may unexpectedly expose code, for example a service providing files to a user could be manipulated to access source code if implemented insecurely.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure source code is not inadvertently disclosed through misconfiguration or vulnerabilities in the service.&lt;/li&gt;&lt;li&gt;Check configuration files are not downloadable directly from the service, and cannot be read and viewed through the service itself.&lt;/li&gt;&lt;li&gt;Ensure backups, operating systems, and version control artifacts do not expose code.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the source code of the application is never returned in cases in which it cannot be interpreted.&lt;/li&gt;&lt;li&gt;Web Servers have a concept called handlers which manage the source code interpretation before sending it to the client. If those handlers are not properly configured, the plain source code could be sent as a default.&lt;/li&gt;&lt;li&gt;Check the handlers are correctly configured to support the types of languages your server uses.&lt;/li&gt;&lt;li&gt;Check also that the source code is not leaked in case of failure.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-08T12:43:53.588">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-PSEP" name="Process Segment Execution Prevention" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Preventing execution of any address in a memory region other than the code segment.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:10:03.189">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent in both a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). Reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden headers list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-30" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-17T12:58:23.186">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-ICMP-Flooding" name="Rate-limit ICMP traffic and prevent the attack from impacting bandwidth and firewall performance" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Common attacks are ICMP Flooding, Ping flood and Ping of death - Layer 3 infrastructure DDoS attack methods that use ICMP messages to overload the targeted network's bandwidth. These kind of attacks can be prevented from taking place by rate-limiting ICMP traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;For example, iptables can be used on Linux systems as follows:&lt;/p&gt;&lt;p&gt;To protect against ping flood attacks the 'limit' module of iptables can be used:&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note that the above lines will protect only against ping request attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;To protect against generic ICMP flood attacks we can remove the constraint '--icmp-type echo-request'. This is only good enough to protect against PC to PC attacks. If flood is done using multiple sources or using hardware then this configuration may not be enough. The configuration will also cause denial of service to other users when under attack even from single source, as we are limiting based on protocol without considering the source address of the packet.&lt;/p&gt;&lt;p&gt;Iptables can also be used to prevent abuse of network resources by rate limiting them:&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 4/second --limit-burst 12 -j ACCEPT&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 1/minute --limit-burst 1 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;In the above example we are limiting outgoing connections to port 80. This is useful when we can't completely block outgoing connections but we do not want it to become channel from where people start browsing net or downloading. The limit module can also be used in rate limiting incoming traffic for performance reasons.&lt;/p&gt;&lt;p&gt;Disabling a ping flood is most easily accomplished by disabling the ICMP functionality of the targeted router, computer or other device. A network administrator can access the administrative interface of the device and disable its ability to send and receive any requests using the ICMP, effectively eliminating both the processing of the request and the Echo Reply. The consequence of this is that all network activities that involve ICMP are disabled, making the device unresponsive to ping requests, traceroute requests, and other network activities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Ping (ICMP) Flood DDoS Attack" url="https://www.cloudflare.com/learning/ddos/ping-icmp-flood-ddos-attack/"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="Rate limiting using iptables" url="https://www.sbarjatiya.com/notes_wiki/index.php/Rate_limiting_using_iptables"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can execute a Smurf attack (denial-of-service attack that floods a target system via spoofed broadcast ping messages) using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 -1 - flood -a VICTIM_IP BROADCAST_ADDRESS&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T07:56:52.358">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-18.8" name="Reject requests containing unexpected or missing content type headers" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Reject requests containing unexpected or missing content type headers with HTTP response status
                        &amp;quot;406 Unacceptable&amp;quot; or &amp;quot;415 Unsupported Media Type&amp;quot;.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Validate request content-type" url="https://www.owasp.org/index.php/REST_Security_Cheat_Sheet#Validate_request_content_types"/>
            <reference name="Spring docs: CSRF" url="https://docs.spring.io/spring-security/site/docs/current/reference/html/csrf.html"/>
          </references>
          <standards>
            <standard ref="13.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that HTTP requests with non-valid Content-type are rejected.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-24T09:00:10.234">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-SESS-REAUTH" name="Require additional authentication for sensitive operations / high value transactions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Having gained access to an account, for example through session hijacking or cross-site scripting, an attack may compromise data and functionality accessible to the victim. This may include elevating privileges or accessing sensitive data and functionality, such as changing passwords, creating accounts, or transferring funds.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;These critical functions and sensitive data should be further protected from attack using a risk-based authentication model requiring re-authentication via multi-factor authentication, or use of a token to sign transactions or operations.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement re-authentication on key functions (such as requiring the old password before setting a new one).&lt;/li&gt;&lt;li&gt;Use secondary authentication such as a transaction PIN to allow financial transfers.&lt;/li&gt;&lt;li&gt;Critical administrative functionality should require multi-factor authentication (such as a hard or soft token).&lt;/li&gt;&lt;li&gt;Consider use of signing technologies or tokens that enable the server-side to verify the authenticity of a request and mitigate Man in the Middle (MiTM) or Man in the Browser (MiTB) attacks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
          </references>
          <standards>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify critical functionalities of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the risk appetite for those functionalities.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Validate that re-authentication is required for those functions if deemed
                            necessary.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-24T12:47:31.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC-006" name="Restrict actions of users that follow unusual patterns" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict actions that users can do outside of the approved/required business process flow.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;This is important because without this safeguard in place attackers may be able to bypass or circumvent work-flows and checks allowing them to prematurely enter or skip required sections of the application potentially allowing actions/transactions to be completed without successfully completing the entire business process, leaving the system with incomplete back-end tracking information.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-02 Flaw Remediation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/40-08_02_SI-02"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
            <reference name="OWASP testing for the circumvention of work flows" url="https://www.owasp.org/index.php/Testing_for_the_Circumvention_of_Work_Flows_(OTG-BUSLOGIC-006)"/>
          </references>
          <standards>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application only processes business logic flows in sequential step order and in realistic human time.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T10:04:15.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-17T12:53:45.100">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-SAOR" name="Segment Address Offset Randomization" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Randomizing the base (start) address of one or more segments of memory during the initialization of a process.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:14:44.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="D3-SFCV" name="Stack Frame Canary Validation" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="mitre-d3fend" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;font face="Helvetica Neue" color="#000000" style="font-style: normal; font-variant: common-ligatures; font-weight: normal; font-stretch: normal; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;; color: rgb(0, 0, 0);" size="4"&gt;Comparing a value stored in a stack frame with a known good value in order to prevent or detect a memory segment overwrite.&lt;/font&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-03-18T16:15:32.828">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-662" name="Use a synchronised time source" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to correlate logs and data from different internal and external systems, and to preserve forensic quality of the logs, it is important a unified and trusted synchronized time source is used throughout the environment.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Servers should synchronize to an internal or external NTP server&lt;/li&gt;&lt;li&gt;The centralized source should in turn use (or be) a trusted central time source.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This control is critical in identifying application events (including attacks) through logging, and in conducting post-event analysis, and in particular to track the entire user (or attacker) journey through the system should it be compromised.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;It is good practice to use the concept of Indicators of Compromise (IoC) which should be leveraged to detect possible situations in which the system has been compromised and give an appropriate response.&amp;nbsp; IoCs are often tracked through logs, and accurate time is essential.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-08 Time Stamps" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/177-08_02_AU-08"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA AU-11 Audit Record Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/180-08_02_AU-11"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that mechanisms are installed to keep the host's clock synchronized (i.e.
                            ntpd in Linux based systems).&lt;/li&gt;
                            &lt;li&gt;Inspect the logs created by the app and check they have the correct timestamp.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-24T13:05:33.389">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="56" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API6:2019-Mass Assignment" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:16.263">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-BH" name="Use blackholing to mitigate L4 DDoS attacks" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DDoS attack blocking, commonly referred to as blackholing, is a method typically used by ISPs to stop a DDoS attack on one of its customers. This approach to block DDoS attacks makes the site in question completely inaccessible to all traffic, both malicious attack traffic and legitimate user traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Blackholing is typically deployed by the ISP to protect other customers on its network from the adverse effects of DDoS attacks such as slow network performance and disrupted service. Common attacks are SYN flood and Smurf attack. For Smurf attack a simple solution is to disable IP broadcasting addresses at each network router and firewall.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Older routers are likely to enable broadcasting by default, while newer routers will likely already have it disabled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Disable broadcasting by default on old routers.&lt;/p&gt;&lt;p&gt;To implement RTBH (Remote Triggered Black Hole) Network Operator sets up a null route for the 192.0.2.1 address on all the backbone routers which participate in BGP:&lt;/p&gt;&lt;p&gt;ip route 192.0.2.1 255.255.255.255 null 0 254&lt;/p&gt;&lt;p&gt;192.0.2.1 is part of 192.0.2.0/24, the TEST-NET, one of the reserved IPv4 address blocks.&lt;/p&gt;&lt;p&gt;Create a route-map to catch routes which need to be blackholed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static routes can be tagged in Cisco IOS - we will tag routes to be blackholed with the value of 66&lt;/li&gt;&lt;li&gt;Set origin to be iBGP&lt;/li&gt;&lt;li&gt;Set local-preference to be 150&lt;ul&gt;&lt;li&gt;higher than any other local-preference set in the backbone&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set community to be no-export and internal marker community (ASN:666)&amp;nbsp;&lt;ul&gt;&lt;li&gt;Don't want prefix to leak outside the AS&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set next-hop to 192.0.2.1 (IPv4) or 100::1 (IPv6)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Then introduce the route-map into the BGP configuration.&lt;/p&gt;&lt;p&gt;To implement the trigger, simply null route whatever address or address block needs to be blackholed:&lt;/p&gt;&lt;p&gt;ip route 50.62.124.1 255.255.255.255 null0 tag 66&amp;nbsp;&lt;/p&gt;&lt;p&gt;And this ensures that (for example) 50.62.124.1/32 is announced to the entire backbone with next-hop 192.0.2.1 set.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="RFC 4987 - TCP SYN Flooding Attacks and Common Mitigations" url="https://tools.ietf.org/html/rfc4987"/>
            <reference name="RFC 5635 - Remote Triggered Black Hole Filtering               with Unicast Reverse Path Forwarding (uRPF)" url="https://tools.ietf.org/html/rfc5635"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can simulate a TCP SYN DDoS Attack using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 VICTIM_IP -flood -rand-source -destport 80 -syn -d 120 -w 64&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-09-16T08:02:32.961">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-07-30T08:44:22.165">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="same-encoding-parsers" name="Use the same encodings and parsers in all application components" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Errors may occur when converting between differently coded character data.&amp;nbsp; There are two general types of encoding errors. If the byte sequence is not valid for the specified charset then the input is considered malformed. If the byte sequence cannot be mapped to an equivalent character sequence then an unmappable character has been encountered.
&lt;/div&gt;
&lt;div&gt;
  Special care should be taken when decoding untrusted byte data to ensure that malformed input or unmappable character errors do not result in defects and vulnerabilities.&amp;nbsp; Encoding errors can also occur, for example, encoding a cryptographic key containing malformed input for transmission will result in an error. Encoding and decoding errors typically result in data corruption.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation&lt;/b&gt;
&lt;/div&gt;Use the same encodings and parsers in all application components to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.</desc>
          <implementations/>
          <references>
            <reference name="STR51-J. Use the charset encoder and decoder classes when more control over the encoding process is required" url="https://wiki.sei.cmu.edu/confluence/display/java/STR51-J.+Use+the+charset+encoder+and+decoder+classes+when+more+control+over+the+encoding+process+is+required"/>
          </references>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all application components are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-10-24T14:37:19.477">
              <output/>
            </source>
            <references>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:48.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-147" name="Validate input parameters to prevent HTTP Parameter Pollution" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>All data received from external sources should be considered tainted and a potential risk, regardless of the source or transport method. HTTP Parameter Pollution attacks result when parameters are added or inserted into requests, and are inappropriately or unsafely handled by the server. For example, injection of parameters into strings or cookies sent to the application can result in the variables being interpreted out of sequence, exploiting flaws in the business logic and flow.
&lt;div&gt;
 &lt;div&gt;
  &lt;ul&gt;
  &lt;/ul&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;p&gt;For example, there was a bug in the Blogger platform which illustrates this vulnerability. The bug allowed malicious users to take ownership of the victim's blog by using the following HTTP request:&lt;/p&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;POST /add-authors.do HTTP/1.1&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;security_token=attackertoken&amp;amp;&lt;b&gt;blogID=attackerblogidvalue&lt;/b&gt;&amp;amp;&lt;b&gt;blogID=victimblogidvalue&lt;/b&gt;&amp;amp;authorsList=goldshlager19test%40gmail.com(attacker email)&amp;amp;ok=Invite&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;p&gt;The flaw resided in the authentication mechanism used by the web application, as the security check was performed on the first&amp;nbsp;&lt;code&gt;blogID&lt;/code&gt;&amp;nbsp;parameter, whereas the actual operation used the second occurrence.&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify parameters within the application used for authentication decisions, or critical business logic.&lt;/li&gt;&lt;li&gt;Send specially forged requests to the application in which those parameters are duplicated, or passed through other methods (e.g. POST parameters in the URL as GET fields, cookies as form fields etc.)&lt;ul&gt;&lt;li&gt;Review the application logic to ensure:&lt;/li&gt;&lt;li&gt;The same parameter is for all the decisions.&lt;/li&gt;&lt;li&gt;Parameters received over unexpected or non compliant methods result in a security exception.&lt;/li&gt;&lt;li&gt;Duplicate parameters are identified and result in a security exception.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should fail-safe; i.e. unexpected or suspicious behavior should result in termination of the user's session and a security event being logged.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A number of tools can be used to aid in testing:&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly inside your browser with the Developer Tools&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data)&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-29T19:21:35.402">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for HTTP Parameter Pollution" url="https://www.owasp.org/index.php/Testing_for_HTTP_Parameter_pollution_(OTG-INPVAL-004)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-601" name="Whitelist which URLs the application may redirect to" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should maintain a list of URLs to which it may redirect users. This whitelisting can also be achieved by applying regular expressions. The application should only allow redirects to trusted URLS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-04 Information Flow Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/26-08_02_AC-04"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the points of the application in which a redirection takes place. Redirections are usually indicated by the use of the "Location" HTTP header along with the "3xx" code.&lt;/li&gt;&lt;li&gt;Verify if the value inside the Location header is coming from user input (URL string, Cookies, HTTP headers, forms, etc.).&lt;/li&gt;&lt;li&gt;Modify the input value which will be part of the Location header to redirect to domains which should not be permitted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-08-07T10:15:05.730">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="availability" name="Availability" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-607" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="AV-DOS-APP">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L3">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L4">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-TLS">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="CS-Default">
          <threats>
            <threat ref="7k-CWE-Environment" name="Attackers gain unauthorised access to the application through an environment flaw" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This section includes everything that is outside of the source code but is still critical to the security of the product that is being created. Because the issues covered by this section are not directly related to source code, we separated it from the rest of the realms.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-2">
                  <countermeasures>
                    <countermeasure ref="ENV-USE" mitigation="50"/>
                    <countermeasure ref="SEC-DEPLOY" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ENV-USE" mitigation="50"/>
                <countermeasure ref="SEC-DEPLOY" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-1" name="Accessing Functionality Not Properly Constrained by ACLs" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;In applications, particularly web applications, access to functionality is mitigated by the authorization framework, whose job it is to map ACLs to elements of the application's functionality; particularly URL's for web-apps. In cases in which the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker could potentially access resources that should only be available to users of a higher privilege level, or access management sections of the application, or can run queries for data that he is otherwise not supposed to.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-276">
                  <countermeasures>
                    <countermeasure ref="deny-default-enf" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny-default-enf" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-214" name="An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-460">
                  <countermeasures>
                    <countermeasure ref="error-handling-centralized" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="error-handling-centralized" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="hostile-subdomain-takeover" name="Attackers claim subdomains with the help of external services" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  This attack vector utilizes DNS entries pointing to Service Providers where the pointed sub-domain is currently not in use. Depending on the DNS-entry configuration and which Service Provider it points to, some of these services will allow unverified users to claim these sub-domains as their own.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In the not so rare case, the attacker can also "inherit" the Domain Owner's Wildcard SSL used inside the Service Provider.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;div&gt;
  &lt;b&gt;Attack Scenario&lt;/b&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;ol&gt;
   &lt;li&gt;Your company starts using a new service, eg an external Support Ticketing-service.&lt;/li&gt;
   &lt;li&gt;Your company points a sub-domain to the Support Ticketing-service, eg support.your-domain.com&lt;/li&gt;
   &lt;li&gt;Your company stops using this service but does not remove the sub-domain redirection pointing to the ticketing system.&lt;/li&gt;
   &lt;li&gt;Attacker signs up for the Service and claims the domain as theirs. No verification is done by the Service Provider, and the DNS-setup is already correctly setup.&lt;/li&gt;
   &lt;li&gt;Attacker can now build a complete clone of the real site, add a login form, redirect the user, steal credentials (e.g. admin accounts), cookies and/or completely destroy business credibility for your company.&lt;/li&gt;
  &lt;/ol&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Hostile Subdomain Takeover using Heroku/Github/Desk + more" url="https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-350">
                  <countermeasures>
                    <countermeasure ref="identify-dns-domains" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-dns-domains" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="SOURCE-LEAK" name="Attackers gain control of the system through a source code leakage" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Attackers gain unauthorized access to a service by reading raw source code returned by the service, and this code contains confidential information such as authentication credentials or other secrets that can be used to access the service.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Configuration files that can be downloaded from the service could also be leveraged to gain access to sensitive information.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-541">
                  <countermeasures>
                    <countermeasure ref="CWE-541" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-541" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-172" name="Attackers subvert the intended workflow of the application in order to perform unauthorised operations" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;If an application enforces an order in workflows, then attackers could attempt to bypass this order so that they can perform operations for which they are not authorized. The technique can also be used to gain access to unauthorized data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-841">
                  <countermeasures>
                    <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                    <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                    <countermeasure ref="network-rate-limit" mitigation="34"/>
                    <countermeasure ref="protection-against-data-mining" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="protection-against-data-mining" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-272">
                  <countermeasures>
                    <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="harden" name="Harden" desc="" library="mitre-d3fend">
          <threats>
            <threat ref="D3-AH" name="Application Hardening" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="mitre-d3fend" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="D3-ACH" mitigation="100"/>
                <countermeasure ref="D3-DCE" mitigation="100"/>
                <countermeasure ref="D3-EHPV" mitigation="100"/>
                <countermeasure ref="D3-PAN" mitigation="100"/>
                <countermeasure ref="D3-PSEP" mitigation="100"/>
                <countermeasure ref="D3-SAOR" mitigation="100"/>
                <countermeasure ref="D3-SFCV" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG-MANAGEMENT" name="Log Management" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-93" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.8" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                    <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-778-AUTH" name="Attacks against the authentication system may go undetected" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>Automated attacks against many user accounts, or successful attacks against an account
                                require a response. &amp;nbsp;If audit logs are not kept of both successful and
                                unsuccessful authentication operations, then post attack forensics will be hampered.&amp;nbsp;&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Without a dynamic response to mass automated attacks against the
                                authentication system, attackers stand a greater chance of success.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="CDS-USER-TRACK" mitigation="16"/>
                    <countermeasure ref="CSD-VAL-LOG" mitigation="14"/>
                    <countermeasure ref="CWE-662" mitigation="14"/>
                    <countermeasure ref="EU-GDPR-LOGGING" mitigation="14"/>
                    <countermeasure ref="LOG-TLS-FAILURES" mitigation="14"/>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="14"/>
                    <countermeasure ref="security-logging" mitigation="14"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="16"/>
                <countermeasure ref="CSD-VAL-LOG" mitigation="14"/>
                <countermeasure ref="CWE-662" mitigation="14"/>
                <countermeasure ref="EU-GDPR-LOGGING" mitigation="14"/>
                <countermeasure ref="LOG-TLS-FAILURES" mitigation="14"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="14"/>
                <countermeasure ref="security-logging" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="CWE-532" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-779">
                  <countermeasures>
                    <countermeasure ref="LOG-RETENTION" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-532" mitigation="70"/>
                <countermeasure ref="LOG-RETENTION" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="post-data" name="Post data" desc="Data is received (posted) here" library="CS-Default">
          <threats>
            <threat ref="ssrf-threat" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                    <countermeasure ref="CWE-601" mitigation="25"/>
                    <countermeasure ref="DATA-VAL" mitigation="25"/>
                    <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                <countermeasure ref="CWE-601" mitigation="25"/>
                <countermeasure ref="DATA-VAL" mitigation="25"/>
                <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-35" name="Attackers can leverage Executable Code in Non-Executable Files" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>An attack of this type exploits a system's trust in configuration and resource files, when the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.
&lt;br /&gt;The attack can be directed at a client system, such as causing buffer overrun through loading seemingly benign image files, as in Microsoft Security Bulletin MS04-028 where specially crafted JPEG files could cause a buffer overrun once loaded into the browser. Another example targets clients reading pdf files. In this case the attacker simply appends javascript to the end of a legitimate url for a pdf (http://www.gnucitizen.org/blog/danger-danger-danger/)
&lt;br /&gt;http://path/to/pdf/file.pdf#whatever_name_you_want=javascript:your_code_here
&lt;br /&gt;The client assumes that they are reading a pdf, but the attacker has modified the resource and loaded executable javascript into the client's browser process.
&lt;br /&gt;The attack can also target server processes. The attacker edits the resource or configuration file, for example a web.xml file used to configure security permissions for a J2EE app server, adding role name &amp;quot;public&amp;quot; grants all users with the public role the ability to use the administration functionality.
&lt;br /&gt;The server trusts its configuration file to be correct, but when they are manipulated, the attacker gains full control.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-95">
                  <countermeasures>
                    <countermeasure ref="dyn-exec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="dyn-exec" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-176" name="Attackers can manipulate Configuration/Environment" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-15">
                  <countermeasures>
                    <countermeasure ref="configuration-integrity" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="configuration-integrity" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-94" name="Attackers gain access to the system through Server-Side Code Injection" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Server-Side Code Injection happens when an attacker is able to direct input under his control and mix it with executed code on the server side by modifying the logic executed on it.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Depending on the code isolation, this event could grant the user access to system resources and data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-78">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="80"/>
                    <countermeasure ref="SAME-ENCODING-STYLE" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="80"/>
                <countermeasure ref="SAME-ENCODING-STYLE" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-73" name="Attackers upload code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attack of this type involves an attacker inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to exploit these vulnerabilities.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-116">
                  <countermeasures>
                    <countermeasure ref="same-encoding-parsers" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="same-encoding-parsers" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-586-SER" name="An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-502">
                  <countermeasures>
                    <countermeasure ref="SER-UNTRUST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SER-UNTRUST" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-62" name="An attacker crafts malicious web links and distributes them hoping to induce users to click on the link and execute a malicious action" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level.
&lt;br&gt;This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply "riding" the existing session cookie.
&lt;br&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-352">
                  <countermeasures>
                    <countermeasure ref="ASVS-18.8" mitigation="34"/>
                    <countermeasure ref="CSD-SESS-REAUTH" mitigation="33"/>
                    <countermeasure ref="cwe-352-csrf" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-18.8" mitigation="34"/>
                <countermeasure ref="CSD-SESS-REAUTH" mitigation="33"/>
                <countermeasure ref="cwe-352-csrf" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="open-redirect-threat" name="An attacker leverages the redirection functionality in the application to conduct more convincing phishing attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An http parameter may contain a URL value for redirecting the request to another specified URL. By modifying this URL value to point towards a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy and convincing appearance.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="CWE-601" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-601" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-117" name="An attacker monitors HTTP headers from a target in order to gather information" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>An attacker monitors data streams to or from a target in order to gather information.
                                This attack may be undertaken in order to gather information to support a later attack,
                                or the data collected may be the end goal of the attack. This attack usually involves
                                sniffing network traffic, but may include observing other types of data streams, such as
                                radio. In most varieties of this attack, the attacker is passive and simply observes
                                regular communication, however in some variants the attacker may attempt to initiate the
                                establishment of a data stream or influence the nature of the data transmitted. However,
                                in all variants of this attack, and distinguishing this attack from other data
                                collection methods, the attacker is not the intended recipient of the data stream.
                                Unlike some other data leakage attacks, the attacker is observing explicit data channels
                                (e.g. network traffic) and reading the content. This differs from attacks that collect
                                more qualitative information, such as communication volume, or other information not
                                explicitly communicated via a data stream.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="ASVS-11.5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-11.5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-267" name="Attackers encode potentially harmful input and submit it to bypass input filtering protections" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This attack leverages the possibility of encoding potentially harmful input and submitting it to applications not expecting or effective at validating this encoding, thus, thwarting the validation.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-173">
                  <countermeasures>
                    <countermeasure ref="harden-http-headers" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-235">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="50"/>
                <countermeasure ref="harden-http-headers" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-300" name="Attackers gain control of the connection through a Man In The Middle attack" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
                                This type of attack targets the communication between two components (typically client
                                and server). The attacker places himself in the communication channel between the two
                                components. Whenever one component attempts to communicate with the other (data flow,
                                authentication challenges, etc.), the data first goes to the attacker, who has the
                                opportunity to observe or alter it, and it is then passed on to the other component as
                                if it was never intercepted. This interposition is transparent leaving the two
                                compromised components unaware of the potential corruption or leakage of their
                                communications. The potential for Man-in-the-Middle attacks yields an implicit lack of
                                trust in communication or identify between two components.&amp;nbsp; &amp;nbsp;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-MASS" name="Functionality could be subverted through mass assignment" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>If the application binds parameters to back-end objects, then attackers could potentially set fields on those objects that were not designed to be modified by the user.</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-915">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                    <countermeasure ref="WEB-SRV-XML" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                <countermeasure ref="WEB-SRV-XML" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-101" name="Unauthorised data could be accessed by manipulating parameters sent to the application" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>The application could be tricked into exposing data to unauthorized users by
                                manipulating the parameters it accepts. All data received from the client side could be
                                subject to manipulation, including fields like cookies and HTTP headers, if these are
                                used as inputs to the application.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-22">
                  <countermeasures>
                    <countermeasure ref="CWE-639" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-548">
                  <countermeasures>
                    <countermeasure ref="DIRECTORY_LISTING" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-650">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-HTTP-METHODS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="25"/>
                <countermeasure ref="CWE-639" mitigation="25"/>
                <countermeasure ref="DIRECTORY_LISTING" mitigation="25"/>
                <countermeasure ref="RESTRICT-HTTP-METHODS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="eb5a65a9-b496-407a-8ff2-a978c9b4399c" diagramComponentId="9d58c279-9da8-4ded-8514-c8a9887e9ab7" ref="4c8d0105-353c-4b4c-b261-efe668705655" name="S3 - Simple Storage Service" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="s3" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-S3-7.2" name="Data is easily removed" state="0" impact="100" issueId="" issueLink="">
          <desc>Someone without credentials can remove sensitive data, the remove function is not protected
                        for an MFA.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="misconfigured-s3-access-policies" name="Misconfigured S3 access policies" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Amazon S3 buckets use misconfigured policies that allow unauthorized users to:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt; Read sensitive information. &lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;Add malicious content to a bucket and overwrite content.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-15T13:16:12.065">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:26.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.3" name="Sensitive data is exposed in transit" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Sensitive data is not encrypted in transit with HTTPS or SSL, and is accessible while traversing the network.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-11T03:47:18.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SYSTEM-VUL-DOS" name="System is vulnerable to a denial of service attack" state="0" impact="100" issueId="" issueLink="">
          <desc>Attackers can perform a successful denial of service on the system</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-05-14T07:17:58.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.1" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently, the data cannot be easily recovered or they cannot be recovered at all.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-05-06T04:54:01.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-IAM-2.7" name="Allocate privileges via groups or roles" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Granting least privilege ensures that users only have the permissions required to complete
                their jobs rather than additional privileges that are not required. Following this model ensures
                that, should an account be compromised, the blast radius of damage is limited.
                &lt;br /&gt;
                &lt;br /&gt;
                &lt;b&gt;Remediation:&lt;/b&gt;
                &lt;div&gt;
                &lt;ul&gt;
                &lt;li&gt;Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC
                with pre-defined policies added into groups or roles&amp;quot;.&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/div&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="AWS Lambda Permissions Model" url="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html"/>
            <reference name="AWS Use API Gateway Lambda Authorizers" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html"/>
            <reference name="Configure Lambda Authorizer Using the API Gateway Console" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/configure-api-gateway-lambda-authorization-with-console.html"/>
            <reference name="Security best practices in Amazon API Gateway" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for AWS Lambda" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html"/>
            <reference name="Using Resource-Based Policies for AWS Lambda (Lambda Function Policies)" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"/>
          </references>
          <standards>
            <standard ref="1.22" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Follow the audit check in &amp;quot;Use RBAC with pre-defined policies added into
                            groups or roles&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Ensure the privileges granted to these groups or roles only give the user the
                            ability to perform their and no more.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.3" name="Apply IAM roles" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Applications that run on an Amazon EC2/S3 instance need credentials in order to access other AWS services. To provide credentials to the application in a secure way, use IAM roles. A role is an entity that has its own set of permissions, but that isn't a user or group. Roles also don't have their own permanent set of credentials the way IAM users do. In the case of Amazon EC2/S3, IAM dynamically provides temporary credentials to the EC2/S3 instance, and these credentials are automatically rotated for you. 
&lt;br /&gt; 
&lt;br /&gt;When you launch an EC2/S3 instance, you can specify a role for the instance as a launch parameter. Applications that run on the EC2/S3 instance can use the role's credentials when they access AWS resources. The role's permissions determine what the application is allowed to do. It is recommended that all EC2/S3 instances are launched with a role, even if the role has no permissions (as they can be added later if desired). 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt; 
  &lt;li&gt;Select EC2/S3 from the services menu.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Launch Instance&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Complete the wizard until step 3 at which point ensure an IAM role is selected for the &amp;quot;IAM role&amp;quot; option (note the role must already exist).&lt;/li&gt; 
  &lt;li&gt;Complete the wizard to launch the instance.&lt;/li&gt; 
 &lt;/ol&gt;NB: You cannot add a role to an instance that has been launched without one. In these cases create an AMI from an existing instance and launch a new instance, assigning an IAM role as detailed above. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.18" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt;
                            &lt;li&gt;Select EC2/S3 from the services menu.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Instances&amp;quot; from the left hand menu.&lt;/li&gt;
                            &lt;li&gt;For each instance in the list:&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;select the instance&lt;/li&gt;
                            &lt;li&gt;in the preview pane confirm the instance has an &amp;quot;IAM Role&amp;quot;
                            assigned (if a hyphen &amp;quot;-&amp;quot; is shown then your instance has no role
                            assigned).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-3.11" name="Configure S3 bucket versioning for sensitive data" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. 
&lt;br&gt; 
&lt;br&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. 
&lt;br&gt; 
&lt;br&gt;To add an extra layer of security to data stored within S3 it is possible to enable object versioning. Object versioning enables the recovery of objects from accidental overwrite or accidental deletion. If an object is deleted, instead of being removed, S3 write a delete marker which becomes the current version that means previous versions can always be recovered. It is recommended that versioning be enabled for buckets storing sensitive data. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   aws s3api put-bucket-versioning --bucket my-bucket --versioning-configuration Status=Enabled 
 &lt;/div&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get bucket versioning" url="https://docs.aws.amazon.com/cli/latest/reference/s3api/get-bucket-versioning.html"/>
            <reference name="List buckets" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/list-buckets.html"/>
            <reference name="Put bucket versioning" url="https://docs.aws.amazon.com/cli/latest/reference/s3api/put-bucket-versioning.html"/>
            <reference name="S3 Versioning" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"/>
          </references>
          <standards>
            <standard ref="3.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws s3api get-bucket-versioning --bucket my-bucket&amp;nbsp;
                            &lt;/blockquote&gt;If you don't see &amp;quot;Status&amp;quot;: &amp;quot;Enabled&amp;quot;
                            then your bucket has no versioning enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-S3-1" name="Discover, classify and secure all data" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Amazon S3 buckets can contain sensitive data, that for security purposes should be discovered, monitored, classified and protected. Macie along with other 3rd party tools can automatically provide an inventory of Amazon S3 buckets.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Using a Cloud service or 3rd Party software to continuously monitor and automate the process of data discovery and classification for S3 buckets using machine learning and pattern matching is a strong defense in protecting that information.&lt;/p&gt;&lt;p&gt;Amazon Macie is a fully managed data security and data privacy service that uses machine learning and pattern matching to discover and protect your sensitive data in AWS.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Perform the steps below to enable and configure Amazon Macie From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log on to the Macie console at https://console.aws.amazon.com/macie/&lt;/li&gt;&lt;li&gt;Click Get started.&lt;/li&gt;&lt;li&gt;Click Enable Macie.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Setup a repository for sensitive data discovery results&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Left pane, under Settings, click Discovery results.&lt;/li&gt;&lt;li&gt;Make sure Create bucket is selected.&lt;/li&gt;&lt;li&gt;Create a bucket, enter a name for the bucket. The name must be unique across all S3 buckets. In addition, the name must start with a lowercase letter or a number.&lt;/li&gt;&lt;li&gt;Click on Advanced.&lt;/li&gt;&lt;li&gt;Block all public access, make sure Yes is selected.&lt;/li&gt;&lt;li&gt;KMS encryption, specify the AWS KMS key that you want to use to encrypt the results. The key must be a symmetric, customer master key (CMK) that's in the same Region as the S3 bucket.&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Create a job to discover sensitive data&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the left pane, click S3 buckets. Macie displays a list of all the S3 buckets for your account.&lt;/li&gt;&lt;li&gt;Select the check box for each bucket that you want Macie to analyze as part of the job&lt;/li&gt;&lt;li&gt;Click Create job.&lt;/li&gt;&lt;li&gt;Click Quick create.&lt;/li&gt;&lt;li&gt;For the Name and description step, enter a name and, optionally, a description of the job.&lt;/li&gt;&lt;li&gt;Then click Next.&lt;/li&gt;&lt;li&gt;For the Review and create step, click Submit.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Review your findings&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the left pane, click Findings.&lt;/li&gt;&lt;li&gt;To view the details of a specific finding, choose any field other than the check box for the finding.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;If you are using a 3rd Party tool to manage and protect your s3 data, follow the Vendor documentation for implementing and configuring that tool.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.1.4" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following steps to determine if Macie is running: From Console:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the Macie console at https://console.aws.amazon.com/macie/&amp;nbsp;&lt;/li&gt;&lt;li&gt;In the left hand pane click on By job under findings.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Confirm that you have a Job setup for your S3 Buckets&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;When you log into the Macie console if you aren't taken to the summary page and you don't have a job setup and running then refer to the remediation procedure below. If you are using a 3rd Party tool to manage and protect your s3 data you meet this recommendation.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-04T12:12:54.872">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-S3-2" name="Enable Object-level logging for read and write events" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;S3 object-level API operations such as GetObject, DeleteObject, and PutObject are called data events. By default, CloudTrail trails don't log data events and so it is recommended to enable Object-level logging for S3 buckets.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Enabling object-level logging will help you meet data compliance requirements within your organization, perform comprehensive security analysis, monitor specific patterns of user behavior in your AWS account or take immediate actions on any object-level API activity within your S3 Buckets using Amazon CloudWatch Events.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console and navigate to S3 dashboard at https://console.aws.amazon.com/s3/&lt;/li&gt;&lt;li&gt;In the left navigation panel, click buckets and then click on the S3 Bucket Name that you want to examine.&lt;/li&gt;&lt;li&gt;Click Properties tab to see in detail bucket configuration.&lt;/li&gt;&lt;li&gt;Click on the Object-level logging setting, enter the CloudTrail name for the recording activity. You can choose an existing Cloudtrail or create a new one by navigating to the Cloudtrail console link https://console.aws.amazon.com/cloudtrail/&lt;/li&gt;&lt;li&gt;Once the Cloudtrail is selected, check the Write event checkbox, so that object-level logging for Write events is enabled.&lt;/li&gt;&lt;li&gt;Repeat steps 2 to 5 to enable object-level logging of write events for other S3 buckets.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;To enable object-level data events logging for S3 buckets within your AWS account, run put-event-selectors command using the name of the trail that you want to reconfigure as identifier: aws cloudtrail put-event-selectors --region &amp;lt;region-name&amp;gt; --trail-name &amp;lt;trail-name&amp;gt; --event-selectors '[{ "ReadWriteType": "WriteOnly", "IncludeManagementEvents":true, "DataResources": [{ "Type": "AWS::S3::Object", "Values": ["arn:aws:s3:::&amp;lt;s3-bucket-name&amp;gt;/"] }] }]'&lt;/li&gt;&lt;li&gt;The command output will be object-level event trail configuration.&lt;/li&gt;&lt;li&gt;If you want to enable it for all buckets at once then change Values parameter to ["arn:aws:s3"] in command given above.&lt;/li&gt;&lt;li&gt;Repeat step 1 for each s3 bucket to update object-level logging of write events.&lt;/li&gt;&lt;li&gt;Change the AWS region by updating the --region command parameter and perform the process for other regions.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.10" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.11" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console and navigate to S3 dashboard at https://console.aws.amazon.com/s3/&lt;/li&gt;&lt;li&gt;In the left navigation panel, click buckets and then click on the S3 Bucket Name that you want to examine.&lt;/li&gt;&lt;li&gt;Click Properties tab to see in detail bucket configuration.&lt;/li&gt;&lt;li&gt;If the current status for Object-level logging is set to Disabled, then object-level logging of read/write events for the selected s3 bucket is not set.&lt;/li&gt;&lt;li&gt;If the current status for Object-level logging is set to Enabled, but the Read event check-box is unchecked, then object-level logging of read events for the selected s3 bucket is not set.&lt;/li&gt;&lt;li&gt;Repeat steps 2 to 5 to verify object level logging status of other S3 buckets.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Run list-trails command to list the names of all Amazon CloudTrail trails currently available in the selected AWS region:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail list-trails --region &amp;lt;region-name&amp;gt; --query Trails[*].Name&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. The command output will be a list of the requested trail names.&lt;/p&gt;&lt;p&gt;3. Run get-event-selectors command using the name of the trail returned at the previous step and custom query filters to determine if Data events logging feature is enabled within the selected CloudTrail trail configuration for s3bucket resources:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --region &amp;lt;region-name&amp;gt; --trail-name &amp;lt;trail-name&amp;gt; --query EventSelectors[*].DataResources[]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. The command output should be an array that contains the configuration of the AWS resource(S3 bucket) defined for the Data events selector.&lt;/p&gt;&lt;p&gt;5. If the get-event-selectors command returns an empty array '[]', the Data events are not included into the selected AWS Cloudtrail trail logging configuration, therefore the S3 object-level API operations performed within your AWS account are not recorded.&lt;/p&gt;&lt;p&gt;6. Repeat steps 1 to 5 for auditing each s3 bucket to identify other trails that are missing the capability to log Data events.&lt;/p&gt;&lt;p&gt;7. Change the AWS region by updating the --region command parameter and perform the audit process for other regions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-04T12:17:32.258">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-S3-7.4" name="Encrypt sensitive data at rest with KMS" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. &lt;/p&gt; 
&lt;p&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. &lt;/p&gt; 
&lt;p&gt;To ensure that sensitive data is encrypted at rest you can use AWS KMS-managed keys (SSE-KMS). This provides several advantages: &lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can create and manage the CMK encryption keys yourself.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;You can use a single CMK to encrypt and decrypt log files for multiple accounts across all regions.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;You have control over who can use your key for encrypting and decrypting CloudTrail log files. You can assign permissions for the key to the users in your organization according to your requirements.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;You have enhanced security. With this feature, in order to read log files, you now need to meet two conditions: 1) you must have S3 read permission on the bucket, and 2) you must be granted decrypt permission by the CMK policy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;It is recommended to encrypt all sensitive data with SSE-KMS to avoid undue disclosure of information and provide an extra layer of security.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Remediation: &lt;/b&gt;&lt;br /&gt; The following example shows how to upload data using AWS KMS Encryption: &lt;br /&gt; aws s3api put-object --bucket --server-side-encryption aws:kms --ssekms-key-id --key &lt;/p&gt; 
</desc>
          <implementations/>
          <references>
            <reference name="AWS Secrets Manager" url="https://aws.amazon.com/secrets-manager/"/>
            <reference name="Protecting data using Encryption" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingEncryption.html"/>
            <reference name="Storing Lambda function encrypted secrets using environment variables and KMS" url="https://docs.aws.amazon.com/lambda/latest/dg/tutorial-env_console.html"/>
            <reference name="Storing and Retrieving a Secret (AWS Tutorial)" url="https://docs.aws.amazon.com/secretsmanager/latest/userguide/tutorials_basic.html"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt; 
 &lt;p&gt;aws s3api head-object --bucket my-bucket --key my-key &lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt; Look for the line "ServerSideEncryption" and verify that it is set to "aws:kms" which indicates KMS Encryption.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-16T07:44:07.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="identify-audit-s3" name="Identify and audit all your Amazon S3 buckets" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Identification of your IT assets is a crucial aspect of governance and security. You need to have visibility of all your Amazon S3 resources to assess their security posture and take action on potential areas of weakness. 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Use Tag Editor to identify security-sensitive or audit-sensitive resources, then use those tags when you need to search for these resources. For more information, see Searching for Resources to Tag. 
&lt;/div&gt; 
&lt;br /&gt;Use Amazon S3 inventory to audit and report on the replication and encryption status of your objects for business, compliance, and regulatory needs. For more information, see Amazon S3 Inventory. 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Create resource groups for your Amazon S3 resources. For more information, see What Is AWS Resource Groups? 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon S3 Inventory" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html"/>
            <reference name="Searching for Resources to Tag" url="https://docs.aws.amazon.com/ARG/latest/userguide/tag-editor.html"/>
            <reference name="What Is AWS Resource Groups?" url="https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Use Amazon S3 inventory tool to review the replication and encryption status of your S3 buckets. 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-15T15:40:07.036">
              <output/>
            </source>
            <references>
              <reference name="Amazon S3 Inventory" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-1.16" name="Require server-side and in transit encryption" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; Data in transit is data being accessed over the network, and therefore could be intercepted by someone else on the network or with access to the physical media the network uses. On an ethernet network, that could be someone with the ability to tap a cable, configure a switch to mirror traffic, or fool your client or a router into directing traffic to them before it moves on to the final destination. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; Server-side encryption (SSE) is about data encryption at rest-that is, Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; Amazon S3 offers 3 options of encrypting data at rest, depending on how you choose to manage the encryption keys: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use SSE with Amazon S3-Managed Keys&lt;/li&gt; 
  &lt;li&gt;Use SSE with AWS KMS-Managed Keys&lt;/li&gt; 
  &lt;li&gt;Use SSE with Customer-Provided Keys&lt;/li&gt; 
 &lt;/ul&gt; At the time of object creation-that is, when you are uploading a new object or making a copy of an existing object-you can specify if you want Amazon S3 to encrypt your data by adding the "x-amz-server-side-encryptionheader" to the request. Set the value of the header to the encryption algorithm AES256 that Amazon S3 supports. Amazon S3 confirms that your object is stored using server-side encryption by returning the response header "x-amz-server-side-encryption". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; No matter which of the three options you choose, you can create and attach a S3 bucket policy, that will deny any object creation S3 API (PUT Object, PUT Object - Copy, POST Object, Initiate Multipart Upload), if the request does not include the "x-amz-server-sideencryption" header requesting server-side encryption, and if the request was not done using SSL\TLS. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; When it comes to data at rest, if kept unencrypted, there are a few threats that one can think of, especially when the data is stored in the cloud: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;the threat that attackers are able to compromise Amazon S3 and gain access to the data that is stored in the Amazon S3 buckets.&lt;/li&gt; 
  &lt;li&gt;the "insider threat" where a malicious or rogue administrator steals a physical disk drive or server that contains data a customer has in the Amazon S3 buckets.&lt;/li&gt; 
  &lt;li&gt;the threat that a government uses a subpoena or warrant to get access to a customer's data in Amazon S3 without their knowledge.&lt;/li&gt; 
 &lt;/ul&gt; If data in transit is kept unencrypted: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Malicious users may intercept or monitor plaintext data transmitting across unencrypted network and gain unauthorized access to that jeopardize the confidentiality of the sensitive data.&lt;/li&gt; 
 &lt;/ul&gt; In all of these scenarios, encrypting data at rest and in transit, and properly managing the encryption keys can help mitigate the risk of unauthorized access to that data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     Perform the following to ensure all objects placed in S3 are encrypted in transit and at rest: 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Create a new file, add the following to it, and save it as policy.json:&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;"Version":"2012-10-17", 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;"Id":"PutObjPolicy", 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;"Statement":{ 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Sid":"DenyUnEncryptedObjectUploads", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Effect":"Deny", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Principal":"*", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Action":"s3:PutObject", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Resource":"arn:aws:s3:::&amp;lt;s3_bucket_name&amp;gt;/*", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Condition":{ 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt;
          &amp;nbsp;"Null":{ "s3:x-amz-server-side-encryption":"true" }, 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt;
          &amp;nbsp;"Bool": { "aws:SecureTransport": "false" } 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;} 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;} 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       } 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Attach the above bucket policy to each S3 bucket:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws s3api put-bucket-policy --bucket &amp;lt;s3_bucket_name&amp;gt; --policy file://policy.json 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get bucket policy" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/get-bucket-policy.html"/>
            <reference name="List buckets" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/list-buckets.html"/>
            <reference name="Put bucket policy" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/put-bucket-policy.html"/>
            <reference name="Using Server-side Encryption" url="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all the S3 buckets from the AWS account:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws s3api list-buckets --output table
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;For each S3 bucket, list the bucket policy and verify that a policy exists, the policy contains a statement to deny PutObject calls that do not require server-side encryption, and the policy denies requests that do not occur over a secure transport:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws s3api get-bucket-policy --bucket &amp;lt;s3_bucket_name&amp;gt; --query 'Policy'
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            ...
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;{
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Sid": "DenyUnEncryptedObjectUploads",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Effect": "Deny",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Principal": "*",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Action": "s3:PutObject",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Resource": "arn:aws:s3:::/*",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Condition": {
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Null": { "s3:x-amz-server-side-encryption": "true",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Bool": { "aws:SecureTransport": "false" }
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;}
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;}
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-03-17T11:46:08.089">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict-s3-bucket-access" name="Restrict Amazon S3 Bucket Access" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Unless you explicitly require anyone on the Internet to be able to read or write to your S3 bucket, you shall ensure that your S3 bucket is not public. The following are some of the steps you can take: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use Amazon S3 block public access. Account administrators and bucket owners can easily set up centralized controls to limit public access to their Amazon S3 resources that are enforced regardless of how the resources are created. For more information, see Using Amazon S3 Block Public Access.&lt;/li&gt; 
  &lt;li&gt;Identify Amazon S3 bucket policies that allow a wildcard identity such as Principal "*" (which effectively means "anyone") or allows a wildcard action "*" (which effectively allows the user to perform any action in the Amazon S3 bucket).&lt;/li&gt; 
  &lt;li&gt;Similarly, note Amazon S3 bucket access control lists (ACLs) that provide read, write, or full-access to "Everyone" or "Any authenticated AWS user."&lt;/li&gt; 
  &lt;li&gt;Use the ListBuckets API to scan all of your Amazon S3 buckets. Then use GetBucketAcl, GetBucketWebsite, and GetBucketPolicy to determine whether the bucket has compliant access controls and configuration.&lt;/li&gt; 
  &lt;li&gt;Use AWS Trusted Advisor to inspect your Amazon S3 implementation.&lt;/li&gt; 
  &lt;li&gt;Consider implementing on-going detective controls using the s3-bucket-public-read-prohibited and s3-bucket-public-write-prohibited managed AWS Config Rules.&lt;br&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;br&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Checklist" url="https://d1.awsstatic.com/whitepapers/Security/AWS_Security_Checklist.pdf"/>
            <reference name="Amazon S3 Security Best Practices" url="https://github.com/awsdocs/amazon-s3-developer-guide/blob/master/doc_source/security-best-practices.md"/>
            <reference name="Introduction to Managing Access Permissions to Your Amazon S3 Resources" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-managing-access-s3-resources.html"/>
            <reference name="Setting Bucket and Object Access Permissions" url="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/set-permissions.html"/>
          </references>
          <standards>
            <standard ref="1.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.1.5" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Prowler is a command line tool for AWS Security Best Practices Assessment, Auditing, Hardening and Forensics Readiness Tool.
                            It follows guidelines of the CIS Amazon Web Services Foundations Benchmark (49 checks) and has 40 additional checks including related to GDPR and HIPAA.
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            If you'd like to check there are no S3 buckets open to the Everyone or Any AWS user you can run the tool with the following arguments:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            ./prowler -c extra73
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-15T14:10:10.879">
              <output/>
            </source>
            <references>
              <reference name="Prowler: AWS CIS Benchmark Tool" url="https://github.com/toniblyx/prowler"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-S3-7.3" name="Set HTTPS for sensitive information" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. 
&lt;br&gt; 
&lt;br&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. 
&lt;br&gt; 
&lt;br&gt;To ensure that data is only accessible via HTTPS (as opposed to both HTTP and HTTPS) it is possible to add a condition to the S3 bucket policy. It is recommended to enable this for any bucket containing sensitive data to ensure that data is encrypted in transit. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt;The following is an example of how to create an S3 bucket policy that enforces HTTPS/SSL only 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with S3 update privileges)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Go to the S3 Service on the AWS Console&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Select a bucket under "All buckets"&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click the properties tab&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Under the permissions select "Add a bucket policy"&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Add the following policy to ensure all objects are accessed via https only&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;i&gt; {&lt;/i&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;i&gt; "Statement":[&lt;/i&gt; 
   &lt;i&gt;{&lt;/i&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;i&gt; "Action": "s3:*",&lt;/i&gt; 
    &lt;/div&gt; 
    &lt;div&gt; 
     &lt;i&gt;"Effect":"Allow",&lt;/i&gt; 
    &lt;/div&gt; 
    &lt;div&gt; 
     &lt;i&gt;"Principal": "*",&lt;/i&gt; 
    &lt;/div&gt; 
    &lt;div&gt; 
     &lt;i&gt;"Resource":"arn:aws:s3:::bucketname/*",&lt;/i&gt; 
    &lt;/div&gt; 
    &lt;div&gt; 
     &lt;i&gt;"Condition":{&lt;/i&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;blockquote&gt; 
      &lt;div&gt; 
       &lt;i&gt;"Bool":&lt;/i&gt; 
      &lt;/div&gt; 
     &lt;/blockquote&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;blockquote&gt; 
      &lt;blockquote&gt; 
       &lt;div&gt; 
        &lt;i&gt;{&amp;nbsp;&lt;/i&gt; 
       &lt;/div&gt; 
      &lt;/blockquote&gt; 
     &lt;/blockquote&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;blockquote&gt; 
      &lt;blockquote&gt; 
       &lt;div&gt; 
        &lt;i&gt;"aws:SecureTransport": true&amp;nbsp;&lt;/i&gt; 
       &lt;/div&gt; 
      &lt;/blockquote&gt; 
     &lt;/blockquote&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;blockquote&gt; 
      &lt;blockquote&gt; 
       &lt;div&gt; 
        &lt;i&gt;}&lt;/i&gt; 
       &lt;/div&gt; 
      &lt;/blockquote&gt; 
     &lt;/blockquote&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;blockquote&gt; 
      &lt;i&gt;}&lt;/i&gt; 
     &lt;/blockquote&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;i&gt; }&lt;/i&gt; 
     &lt;i&gt;]&lt;/i&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;i&gt;} &lt;/i&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click ""Save"&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
  
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.1.2" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>The following checks that HTTPS is forced on a bucket policy:&amp;nbsp;
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with S3 update privileges).&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Go to the S3 Service on the AWS Console.&lt;/li&gt;
                            &lt;li&gt;Select the S3 bucket under &amp;quot;All buckets&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the &amp;quot;properties&amp;quot; tab.&lt;/li&gt;
                            &lt;li&gt;Click &amp;quot;edit bucket policy&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the policy document check for the presence of the line &amp;quot;Condition&amp;quot;:
                            {&amp;quot;Bool&amp;quot;: {&amp;quot;aws:SecureTransport&amp;quot;: &amp;quot;true&amp;quot;}}&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the same statement as &amp;quot;Effect&amp;quot;:&amp;quot;Allow&amp;quot;,&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AWS-SRA-4" name="Use AWS Macie to scan for sensitive data on S3 buckets" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Macie findings flow to AWS Security Hub for review and analysis. Macie also integrates with Amazon EventBridge to facilitate automated responses to findings such as alerts, feeds to security information and event management (SIEM) systems, and automated remediation.&lt;/p&gt;&lt;p&gt;If S3 objects are encrypted with an AWS Key Management Service (AWS KMS) customer master key (CMK) that you manage, you can add the Macie service-linked role as a key user to that CMK to enable Macie to scan the data.&lt;/p&gt;&lt;p&gt;Macie is optimized for scanning objects in Amazon S3. As a result, any Macie-supported object type that can be placed in Amazon S3 (permanently or temporarily) can be scanned for sensitive data. This means that data from other sources-for example, periodic snapshot exports of Amazon Relational Database Service (Amazon RDS) or Amazon Aurora databases, exported Amazon DynamoDB tables, or extracted text files from native or third-party applications-can be moved to Amazon S3 and evaluated by Macie.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Reference Architecture" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/welcome.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure Macie is used to scan S3 buckets.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-08-26T04:43:10.003">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-6.3" name="Use Cloudfront CDN" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront can be used to deliver either the entire website, including dynamic, 
  static, streaming, and interactive content using a global network of edge locations. 
  Requests for your content are automatically routed to the nearest edge location, so content 
  is delivered with the best possible performance. Amazon CloudFront is optimized to work 
  with other Amazon Web Services, like Amazon Simple Storage Service (Amazon S3), 
  Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Load Balancing, and 
  Amazon Route 53. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront gives you three options for accelerating your entire website while 
  delivering your content securely over HTTPS from all of CloudFront's edge locations. In 
  addition to delivering securely from the edge, you can also configure CloudFront to use 
  HTTPS connections for origin fetches so that your data is encrypted end-to-end from your 
  origin to your end users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can either create a Cloudfront distribution only by specifying the origin domain name (ELB, S3 bucket or web server):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --origin-domain-name &amp;lt;your_original_domain_name&amp;gt; -- default-root-object index.html 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Or by creating locally a distribution config file distconfig.json with all the Cloudfront distribution parameters:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --distribution-config file://distconfig.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Working with distributions" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-working-with.html"/>
          </references>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the Cloudfront distributions present in the AWS account, and check in the aliases field for the presence of the domain name used by the application:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront list-distributions --query "DistributionList.Items[*].{Id:Id, Status:Status, DomainName:DomainName, Aliases:Aliases.Items}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-03-18T09:18:52.378">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-S3-7.2" name="Use S3 MFA to delete sensitive information" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. 
&lt;br /&gt; 
&lt;br /&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. 
&lt;br /&gt; 
&lt;br /&gt;To add an extra layer of security to data stored within S3 the account owner (root) can enable MFA Delete which means that buckets and the objects within them can only be deleted with the use of Multi-factor authentication device. It is recommended to enable MFA Delete on any buckets containing sensitive data to protect against accidental deletion 
&lt;br /&gt;Remediation 
&lt;br /&gt;1. aws s3api put-bucket-versioning --bucket my-bucket --versioning-configuration Status=Enabled,MFADelete=Enabled 
&lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.1.3" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws s3api get-bucket-versioning --bucket my-bucket&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            If you don't see &amp;quot;MFADelete&amp;quot;: &amp;quot;Enabled&amp;quot; then your bucket
                            has no MFA delete enabled.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-CF-DOS" name="Attackers perform a denial of service" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;A Denial of Service (DoS) attack is a deliberate attempt to make your website unavailable. Attackers use a variety of techniques that consume large amount of resources.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="SYSTEM-VUL-DOS">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-6.3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-DELETED-EASY-AWS" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.11" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-S3-7.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="misconfigured-s3-access-policies">
                  <countermeasures>
                    <countermeasure ref="AWS-S3-2" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-S3-2" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="50"/>
                <countermeasure ref="aws-tier-3.11" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA-AWS" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-S3-7.3" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SRA-4" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-S3-7.4" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="misconfigured-s3-access-policies">
                  <countermeasures>
                    <countermeasure ref="AWS-S3-1" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-EC2-6.3" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.16" mitigation="10"/>
                    <countermeasure ref="identify-audit-s3" mitigation="10"/>
                    <countermeasure ref="restrict-s3-bucket-access" mitigation="10"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-S3-1" mitigation="10"/>
                <countermeasure ref="C-AWS-SRA-4" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-EC2-6.3" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-S3-7.3" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-S3-7.4" mitigation="10"/>
                <countermeasure ref="aws-tier-1.16" mitigation="10"/>
                <countermeasure ref="identify-audit-s3" mitigation="10"/>
                <countermeasure ref="restrict-s3-bucket-access" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b200171a-b477-4f6f-b7c6-76316d877f6d" diagramComponentId="898f6cf3-d41a-417e-b7eb-69b2cd9fd3f3" ref="9a02ee97-31a3-4950-b6e4-a9c20169941a" name="User Profile" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-USER-PROFILE" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-285" name="Apply authorization checks to segregate and control access to user data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Applications protecting sensitive or otherwise restricted resources must ensure that only appropriate
                        and authorized users can access the application data. It is important that an application
                        prevent unauthorized users gaining inappropriate access to each other's data. Although user A
                        and user B may both be trusted to access data within the application, they may be only authorized to
                        access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be
                        able to access user B's personal data by manipulating a request (typical examples are the
                        manipulation of an ID value or other object reference sent in the URL or body of an HTTP
                        request).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames.
                        The application must validate each request for protected data against the proven identity of the
                        user. Before providing access to restricted resources the application must:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure the user has undergone appropriate authentication (identification and
                        verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this
                        with a password, token, or other verification. Typically this is done by checking the
                        validity of the session token issued after login.&lt;/li&gt;
                        &lt;li&gt;Confirm the user is authorized to access the data or resource they are requesting. E.g.
                        their confirmed identify is checked against a server-side access control matrix to determine
                        whether they may access the requested resource.&lt;/li&gt;
                        &lt;li&gt;Access controls should be granular and make it possible to issue to individual resources 
                        to individual users or roles.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        URL and asset based access control is provided by most web-frameworks, and it is preferable to
                        use an established and proven framework.
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA CM-07 Least Functionality" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/158-08_02_CM-07"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="CM-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Using two different browsers configured with an intercepting proxy:&lt;/li&gt;
                            &lt;li&gt;Login as user A in browser A.&lt;/li&gt;
                            &lt;li&gt;Login as user B in browser B.&lt;/li&gt;
                            &lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Perform the operation as user A and view their sensitive data.&lt;/li&gt;
                            &lt;li&gt;Obtain the session ID of user B.&lt;/li&gt;
                            &lt;li&gt;Configure the proxy to intercept.&lt;/li&gt;
                            &lt;li&gt;Perform the operation as user A again, but this time intercept all the requests
                            and replace user A's session ID with that of user B.&lt;/li&gt;
                            &lt;li&gt;Ensure that user A's sensitive data is &lt;b&gt;not &lt;/b&gt;visible.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.082">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny-default-enf" name="Assure that the principle of deny by default exists for new users/roles" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deny by default is the principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny by default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Proactive Controls [C7]: Enforce Access Controls" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c7-enforce-access-controls.html"/>
          </references>
          <standards>
            <standard ref="4.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.208">
              <output/>
            </source>
            <references>
              <reference name="Testing for Bypassing Authorization Schema (OTG-AUTHZ-002)" url="https://www.owasp.org/index.php/Testing_for_Bypassing_Authorization_Schema_(OTG-AUTHZ-002)"/>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-USER-INTERACTION-BASED-PROTECTION" name="Consider implementing user interaction based protection for highly sensitive operations" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implementing user interaction based protection is one of the principles that should be followed to defend against Cross-Site Request Forgery (CSRF). CSRF is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated.&lt;/p&gt;&lt;p&gt;While other techniques do not require any user interaction, sometimes it's easier or more appropriate to involve the user in the transaction to prevent unauthorized operations. The following are some examples of techniques that can act as strong CSRF defense when implemented correctly.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Authorization mechanism&lt;/li&gt;&lt;li&gt;One-time Token&lt;/li&gt;&lt;li&gt;CAPTCHA&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if the post requests are using CSRF token or captcha.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-CSP" name="Define a restrictive 'least privilege' Content Security Policy" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The Content-Security-Policy instructs compliant browsers on how they may interact with external sites while in the current context. This enables the server to control interactive code and content from third parties, mitigating some client-side code injection attacks. The policy allows the server to specify what connections are permitted for each type of resource.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;For example, the following policy tells the browser to allow connections (including websockets) to the same domain to which the page was served: *.iriusrisk.com.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Content-Security-Policy: default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss://*.iriusrisk.com; img-src 'self' data:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Define and set a Content-Security-Policy with least-privileges to allow only those interactions which are explicitly required.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP Secure Headers Project" url="https://www.owasp.org/index.php/OWASP_Secure_Headers_Project"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14.4.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Review the HTTP Server responses to determine if a&amp;nbsp;&lt;i&gt;Content-Security-Policy&amp;nbsp;&lt;/i&gt;header is returned, and if so, that it follows the security practice of least-privilege.&lt;/li&gt;&lt;li&gt;Using a browser:&lt;/li&gt;&lt;li&gt;Open the Web Developer Console.&lt;ul&gt;&lt;li&gt;Make requests to the different component end-points.&lt;/li&gt;&lt;li&gt;Verify the header is always returned as part of these responses&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite):&lt;ul&gt;&lt;li&gt;Browse the site through the proxy.&lt;/li&gt;&lt;li&gt;Review server responses and/or use automated scanning to analyze headers.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information on &lt;i&gt;Content-Security-Policy&lt;/i&gt; policy setup, see:&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.423">
              <output/>
            </source>
            <references>
              <reference name="Mozilla Developer Documentation - CSP" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AVOID-GET-SENSITIVE-OPERATIONS" name="Do not use GET requests for state changing operations" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use GET requests to retrieve resource representation/information only - and not modify it in any way. As GET requests do not change the resource's state, these are said to be safe methods.&lt;/p&gt;&lt;p&gt;Additionally, GET APIs should be idempotent. Making multiple identical requests must produce the same result every time until another API (POST or PUT) has changed the state of the resource on the server.&lt;/p&gt;&lt;p&gt;If the Request-URI refers to a data-producing process, it is the produced data that shall be returned as the entity in the response and not the source text of the process, unless that text happens to be the output of the process.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="HTTP Methods" url="https://restfulapi.net/http-methods/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate all GET controller methods and ensure that they don't modify the state of the server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.928">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;In every portion of the application where a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.187">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure that roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:08.991">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FEAT-ACC-CTRL" name="Ensure that attribute or feature-based access control is used" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that attribute or feature-based access control is used whereby the code checks the user's authorization for a feature/data item rather than just their role. Permissions should still be allocated using roles.
&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.172">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.659">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.962">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="IR-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.012">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent in both a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). Reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden headers list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-30" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:10.939">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="excessive-permissions" name="Request only the minimum required permissions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Security best practices dictate that the practice of least-privilege be followed, thereby reducing the attack surface and risk of compromise. By limiting the access an application has to the system, developers may reduce the impact a compromise may have.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
  Request only the minimum required permissions. For example, if there is no requirement to use the camera then the application should not request this permission.
&lt;/div&gt;
&lt;div&gt;
  Review features and functionalities present in the application, in particular legacy features, to determine if they are relevant and required, and if not remove them along with associated OS permissions.
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that the application only requests the necessary permissions to work correctly.
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.230">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should used be in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.538">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-50-MALICIOUS-PROFILE-UPDATE" name="An attacker can force users to update their profile without noticing it" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker's choosing. This attack could allow an attacker to change one's account information (for example the "Name " or "Adress" attributes) without having to login to victim account or without having to login but only by using CSRF technique.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-AVOID-GET-SENSITIVE-OPERATIONS" mitigation="25"/>
                <countermeasure ref="C-USER-INTERACTION-BASED-PROTECTION" mitigation="25"/>
                <countermeasure ref="cwe-352-csrf" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-180-BROKEN-ACCESS-CONTROL" name="An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the application" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An Access Control functionality often spans many areas of software depending on the complexity of the access control system. For example, managing access control metadata or building caching for scalability purposes are often additional components in an access control system that need to be built or managed. Vulnerabilities appear when a user is able to successfully request access to something they usually shouldn't have access to. Oftentimes this is found when the authorization is not implemented properly. A typical example would be a certain endpoint on a website that throws a 403 forbidden error which is then bypassed by adding an X-Forwarded-For: "127.0.0.1" header.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="14"/>
                <countermeasure ref="CDS-USER-TRACK" mitigation="14"/>
                <countermeasure ref="CWE-285" mitigation="16"/>
                <countermeasure ref="FEAT-ACC-CTRL" mitigation="14"/>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="14"/>
                <countermeasure ref="deny-default-enf" mitigation="14"/>
                <countermeasure ref="excessive-permissions" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-103-CLICKJACKING" name="An attacker uses multiple transparent or opaque layers to trick a user into clicking on a button or link on another page when they were intending to click on the top level page" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;For example, imagine an attacker who builds a web site that has a button on it that says "click here for a free iPod". However, on top of that web page, the attacker has loaded an iframe with your mail account, and lined up exactly the "delete all messages" button directly on top of the "free iPod" button. The victim tries to click on the "free iPod" button but instead actually clicked on the invisible "delete all messages" button. In essence, the attacker has "hijacked" the user's click, hence the name "Clickjacking".&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="WEB-CSP" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='" + request.getParameter("id") + "'";&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID='" + request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the ‘id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=' or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="03d1d729-ccfe-4be3-96c5-1b6092d96af7" diagramComponentId="a53dc076-8226-4ad8-8a30-70b5ee669794" ref="3a38ed20-f396-4194-9730-c75279816e9b" name="Change Password" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-CHANGE-PASSWORD" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionalities requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. In addition to asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action, such as a button press on a FIDO hardware key, or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionalities, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase, for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.8" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.8" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.).&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.313">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AVOID-GET-SENSITIVE-OPERATIONS" name="Do not use GET requests for state changing operations" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use GET requests to retrieve resource representation/information only - and not modify it in any way. As GET requests do not change the resource's state, these are said to be safe methods.&lt;/p&gt;&lt;p&gt;Additionally, GET APIs should be idempotent. Making multiple identical requests must produce the same result every time until another API (POST or PUT) has changed the state of the resource on the server.&lt;/p&gt;&lt;p&gt;If the Request-URI refers to a data-producing process, it is the produced data that shall be returned as the entity in the response and not the source text of the process, unless that text happens to be the output of the process.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="HTTP Methods" url="https://restfulapi.net/http-methods/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate all GET controller methods and ensure that they don't modify the state of the server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.285">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.686">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.659">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should lead to temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failed login attempts, the account must be locked for a certain time period. This period must be increased after each new failed attempt up to a maximum of an hour.&lt;/li&gt;&lt;li&gt;When the application detects that an account is locked more times than usual, this account should be disabled (no more than 100 failed attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;, &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; or &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite &lt;/a&gt;to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.707">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-password-recovery" name="Implement Secure Password Recovery Mechanism" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is common for an application to have a mechanism for a user to gain access to their account in the event they forget their password. A good design workflow for a password recovery feature will use multi-factor authentication elements. For example, it may ask a security question - something they know, and then send a generated token to a device - something they own.&lt;/p&gt;&lt;p&gt;To get this control in our approach, we have to abide by the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Send a Token Over a Protected Side-Channel: &lt;/strong&gt;Send a multi-factor token challenge with a randomly-generated code longer than 6 characters (containing both letters and numbers), by a secure channel, such TLS and&amp;nbsp;valid for a specific time period (no longer than 20 minutes) or until the password is successfully reset.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Allow user to change password in the existing session:&lt;/strong&gt; Display a simple HTML form with one input field for the code, one for the new password, and one to confirm the new password. Verify the correct code is provided and be sure to enforce all password complexity requirements that exist in other areas of the application. Avoid sending the username as a parameter when the form is submitted.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notify user: &amp;nbsp;&lt;/strong&gt;Ensure the application notifies the user, when the password is changed.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; It is important to keep audit records when password change requests are submitted, when reset messages are sent to users and when users utilize them. It is especially important to log failed attempts to answer security questions and failed attempted use of expired tokens. These data can be used to detect abuse and malicious behavior. Data such as time, IP address, and browser information can be used to spot trends of suspicious use.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Other Considerations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Whenever a successful password reset occurs, all other sessions should be invalidated.&lt;/li&gt;&lt;li&gt;The strength of the questions used for password reset should vary based on the nature of the credentials. Administrator credentials should have a higher requirement.&lt;/li&gt;&lt;li&gt;The ideal implementation should rotate the questions asked in order to avoid automation.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp CheatSheetSeries: Forgot Password" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Forgot_Password_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the recovery secret code is not sent in clear text to the user.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password hints or secret questions are not present.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password credential recovery does not reveal the current password in any way..&lt;/li&gt;&lt;li&gt;Check that the user is notified, when&amp;nbsp;an authentication factor is changed or replaced.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.366">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.754">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DELETE-SESSIONS-MENU" name="Offer to destroy all active sessions when users change their password" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be renewed or regenerated by the web application after any privilege level change within the associated user session. The most common scenario where the session ID regeneration is mandatory is during the authentication process, as the privilege level of the user changes from the unauthenticated (or anonymous) state to the authenticated state, though in some cases not yet the authorized state.&lt;/p&gt;&lt;p&gt;Common scenarios to consider include; password changes, permission changes, or switching from a regular user role to an administrator role within the web application. For all sensitive pages of the web application, any previous session IDs must be ignored, only the current session ID must be assigned to every new request received for the protected resource, and the old or previous session ID must be destroyed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The most common web development frameworks provide session functions and methods to renew the session ID, such as request.getSession(true) &amp;amp; HttpSession.invalidate() (J2EE), Session.Abandon() &amp;amp; Response.Cookies.Add(new...) (ASP .NET), or session_start() &amp;amp; session_regenerate_id(true) (PHP).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.292">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" name="Prevent Simultaneous Logins" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It's possible for the application to need or want to have simultaneous sessions. In this case, please control the number of the total active sessions and limit it.&lt;/p&gt;&lt;p&gt;If the application does not want to allow simultaneous session logons, it must take effective actions after each new authentication event, implicitly terminating the previously available session, or asking the user (through the old, new or both sessions) about the session that must remain active.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Open different browsers, or a "normal" tab and an "anonymous" tab, and check the following points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Have you received some notification in some tab?&lt;/li&gt;&lt;li&gt;Was it possible to log in on the new login attempt? If the answer is yes, then has the previously open session been closed?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the first session has been closed, it is recommended to check that it has been carried out correctly. To do this, use a proxy in the process, forward requests prior to logout and check the response.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.307">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent both in a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits a site (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). The reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden header list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-30" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.343">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" name="Send a message to the user each time the system detects that the user is logging in from a new device or IP" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Aside from the IP address, there are a number of different factors that can be used to attempt to fingerprint a device. Some of these can be obtained passively by the server from the HTTP headers (particularly the "User-Agent" header), including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Operating system&lt;/li&gt;&lt;li&gt;Browser&lt;/li&gt;&lt;li&gt;Language&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using JavaScript it is possible to access far more information, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Screen resolution&lt;/li&gt;&lt;li&gt;Installed fonts&lt;/li&gt;&lt;li&gt;Installed browser plugins&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using these various attributes, it is possible to create a fingerprint of the device. This fingerprint can then be matched against any browser attempting to log in to the account, and if it doesn't match then the user can be prompted to provide additional authentication. Many users will have multiple devices or browsers that they use, so it is not practical to block attempts that do not match the existing fingerprints.&lt;/p&gt;&lt;p&gt;To bear in mind: data submitted from the client can be spoofed by an attacker.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Credential Stuffing Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use the application and try to log in from different devices. Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Does the notification arrive?&lt;/li&gt;&lt;li&gt;Are the user's trusted devices saved in the server (DB)?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.300">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should used be in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.538">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:09.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-114-CRED-CHANGE" name="An attacker abuses the password change functionallity to change the password of other users without knowing their credentials" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Example 1 (password change):&lt;/p&gt;&lt;p&gt;Step 1. An attacker logs in with their account and go to the change password function.&lt;/p&gt;&lt;p&gt;Step 2. The attacker uses an HTTP proxy to intercept the request.&lt;/p&gt;&lt;p&gt;Step 3. After intercepting the request, they modify the user ID of the request and they update it to the victim user ID. If the server process sucessfully this request the attacker was able to change the password of the user ID account to one of their election.&lt;/p&gt;&lt;p&gt;Example 2 (password reset):&lt;/p&gt;&lt;p&gt;Step 1. An attacker does a password reset in their account.&lt;/p&gt;&lt;p&gt;Step 2. The attacker receives the password reset link and this includes two parameters in the URL: the user ID and the token (https://host.com/resetpassword?userid=1232&amp;amp;token=xodkdosff32eksl)&lt;/p&gt;&lt;p&gt;Step 3. The attacker copy the received URL, edit the userid parameter (victim account) and launches the request. If the server process sucessfully this request the attacker was able to reset the password of the user ID account to one of their election.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="secure-password-recovery" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-62-CRED-CHANGE" name="An attacker can force the user to change their credentials without noticing it" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If the user isn't required to re-authenticate, then it may be possible to carry out a CSRF attack against the password reset form, allowing their account to be compromised.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-AVOID-GET-SENSITIVE-OPERATIONS" mitigation="25"/>
                <countermeasure ref="cwe-352-csrf" mitigation="25"/>
                <countermeasure ref="secure-password-recovery" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-600-CRED-CHANGE" name="An attacker uses user's credentials to get access to their account and change their password, preventing the legitimate user from logging in" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Reusing public breached credentials, an attacker is able to log in to the victim's account and update their credentials to maintain the account takeover attack and be able to use stored card data to execute fraudulent transactions.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" mitigation="25"/>
                <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" mitigation="25"/>
                <countermeasure ref="CWE-654" mitigation="25"/>
                <countermeasure ref="secure-password-recovery" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='" + request.getParameter("id") + "'";&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID='" + request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the ‘id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=' or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-180-ACTIVE-SESSION" name="Attackers keep their stolen sessions active even after the legitimate users have changed their passwords" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker is able to maintain their access to a victim account in the application even when the legitimate user of the account changes their password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DELETE-SESSIONS-MENU" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="be133e18-8b5d-41e1-add6-a681f91ca4ef" diagramComponentId="18883c8d-2c5a-4f3e-87d9-89744fa10f17" ref="8dbee567-420b-4207-be38-b84008f22b2a" name="Audit Logging" desc="" library="IR-Functional-Components" parentComponentRef="3386b603-adf2-436d-95e6-eed427624678" componentDefinitionRef="CD-AUDIT-LOG" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:08.964">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AUDIT-SENSITIVE-OPERATIONS" name="Ensure high-value transactions have an audit trail with integrity controls to prevent tampering or deletion" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Application logging should be consistent within the application, consistent across an organization's application portfolio and use industry standards where relevant, so the logged event data can be consumed, correlated, analyzed and managed by a wide variety of systems.&lt;/p&gt;&lt;p&gt;Specifically, those processes which perform significant operations must be logged and audited correctly. Developers should take care of:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Creating an audit trail for each sensitive operation.&lt;/li&gt;&lt;li&gt;Performing integrity checks to prevent tampering (e.g. hash functions).&lt;/li&gt;&lt;li&gt;Assigning permissions to avoid deletion of logs.&lt;/li&gt;&lt;li&gt;Applying different techniques like trusted timestamping or logging directly to physical devices.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Efficient Data Structures For Tamper-Evident Logging" url="https://www.researchgate.net/publication/221260542_Efficient_Data_Structures_For_Tamper-Evident_Logging"/>
            <reference name="Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Detect all high-value transactions that are susceptible of having strict security measures.&lt;/li&gt;&lt;li&gt;Ensure that all transactions detected are traced correctly, ensuring the confidentiality and integrity of the data.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:08.686">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-PROPER-LOG-FORMAT" name="Ensure that logs are generated in a format that log management solutions can easily consume" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use standard formats over secure protocols to record and send event data or log files to other systems e.g. Common Log File System (CLFS) or Common Event Format (CEF) over syslog; standard formats facilitate integration with centralized logging services.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify which log format is used in the application and which one supports the management solution.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:08.709">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-VAL-LOG" name="Log and reject all data validation failures" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Data validation failures, together with access control violations, are symptomatic of malicious activity where an attacker is attempting to subvert the protections in place. It is therefore likely that unexpected input detected by the application relates to an attack. Rejecting and logging such activity, and ideally terminating the session, increases the likelihood of detecting and inhibiting structured attacks against the application.
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Log all validation failures when rejecting requests.&lt;/li&gt;
  &lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;
  &lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;
  &lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.5.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:08.899">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="david@doughty.uk.net" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="IR-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-02-24T07:25:08.718">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-170-INSUFFICIENT-LOGGING" name="Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Insufficient logging, detection, monitoring and active response occurs any time:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditable events, such as logins, failed logins, and high-value transactions are not logged.&lt;/li&gt;&lt;li&gt;Warnings and errors generate no, inadequate, or unclear log messages.&lt;/li&gt;&lt;li&gt;Logs of applications and APIs are not monitored for suspicious activity.&lt;/li&gt;&lt;li&gt;Logs are only stored locally.&lt;/li&gt;&lt;li&gt;Appropriate alerting thresholds and response escalation processes are not in place or effective.&lt;/li&gt;&lt;li&gt;Penetration testing and scans by DAST tools (such as OWASP ZAP) do not trigger alerts.&lt;/li&gt;&lt;li&gt;The application is unable to detect, escalate, or alert for active attacks in real time or near real time.&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-AUDIT-SENSITIVE-OPERATIONS" mitigation="33"/>
                <countermeasure ref="C-PROPER-LOG-FORMAT" mitigation="33"/>
                <countermeasure ref="CSD-VAL-LOG" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-93-LOG-FORGING" name="The attacker injects, manipulates or forges malicious log entries in the log file, allowing them to mislead a log audit, cover traces of attack, or perform log injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. A more subtle attack might involve skewing the log file statistics. Forged or otherwise, corrupted log files can be used to cover an attacker's tracks or even to implicate another party in the commission of a malicious act.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="33"/>
                <countermeasure ref="CSD-VAL-LOG" mitigation="34"/>
                <countermeasure ref="LOG-RETENTION" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="626d881e-1210-4cd0-9891-c3de07be0c7a" diagramComponentId="e57f9728-a345-4d38-aa7e-6f7925d5c4bc" ref="4a398577-eccd-45dc-854f-a5da94d41fa2" name="PostgreSQL" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="postgresql" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-29T09:16:00.986">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-27T13:08:23.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-89" name="Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted and executed as SQL instead of ordinary user data. This can be leveraged to alter query logic in order to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands. SQL injection has become a common issue with database-driven web sites. The flaw is relatively easily detected, and often easily exploited, and as such, any site or software package with even a minimal user base is likely to be subject to an attempted automated attack of this kind. This flaw depends on the fact that SQL makes no real distinction between the control and data planes.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:13.083">
              <output/>
            </source>
            <references>
              <reference name="CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')" url="https://cwe.mitre.org/data/definitions/89.html"/>
              <reference name="OWASP Testing Guide" url="https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OTG-INPVAL-005)#Standard_SQL_Injection_Testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:44.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;ul&gt; 
 &lt;li&gt;Weak encryption algorithms&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Loss of encryption keys&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Compromised encryption keys&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Revoked keys are still active (bad key lifecycle management)&lt;/li&gt; 
&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:47.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="RESTRICT-ACCESS-DATABASE" name="Access the data store from an account with the least privileges necessary" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;Use an account with only the minimum set of permissions required to access the data store. The account should not be able to perform operations that are not explicitly required by the component that performs these operations. For example, if a web application needs to read data from certain tables and insert and update data from others, then a database account with only those specific permissions should be used by the application server.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify the user account used by external components to access this data store.&lt;/li&gt; 
 &lt;li&gt;Check which permissions are assigned to this user account.&lt;/li&gt; 
 &lt;li&gt;Verify that they are the minimum set of permissions necessary and no unnecessary permissions are assigned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:45.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="PATCH-SERVICE" name="Apply required security patches to the service" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Vendors and other maintainers of software release patches in response to security flaws and other bugs in their products.&amp;nbsp; The longer a system is exposed with a known security vulnerability, the easier to compromise it. &amp;nbsp;As the exploit enters the public domain, they get included in automated exploitation suites like Metasploit and a wider less skilled miscreant is able to leverage them.&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Apply patches and other software updates in a timely manner to prevent unexpected failures or exploitation.&lt;/li&gt;&lt;li&gt;Clearly define an approach for testing and applying patches, in particular security patches, with expected timescales. &amp;nbsp;There is often a small window between the release of a patch, and potentially malicious actors reverse-engineering the patch to identify and exploit the flaw.&lt;/li&gt;&lt;li&gt;Use a threat intelligence, vulnerability scanning, or other alerting services to ensure the project team is promptly aware of issues within the project or its components.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-01 Configuration Management Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/152-08_02_CM-01"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CM-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check with the software or service vendor whether security vulnerabilities and
                            their associated patches are available for the version deployed.&lt;/li&gt;
                            &lt;li&gt;Evaluate the criticality of the vulnerability and schedule a fix accordingly.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:18.535">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" name="Encrypt personal data" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement encryption at rest (see guidance below) or give a risk-based explanation as to why encryption was not implemented.&lt;br /&gt;&lt;br /&gt;Use well-known encryption libraries, taking into account the data use, and do not invent your own. 
          &lt;br /&gt;
              &lt;ul&gt;
              &lt;li&gt;personal data must be encrypted&lt;/li&gt;
              &lt;li&gt;data that is not used by the application (e.g. passwords, ...) should be hashed so they cannot be recovered easily&lt;/li&gt;
              &lt;/ul&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf"/>
            <reference name="OWASP Proactive controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.12.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                &lt;ol&gt;
                &lt;li&gt;Verify that users' personal data processed by the application is encrypted at rest (e.g. databases).&lt;/li&gt;
                &lt;li&gt;If encryption is not being leveraged, verify that there is documentation outlining the reasoning for that decision.&lt;/li&gt;
                &lt;/ol&gt;
                &lt;/div&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:47.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-306-SERVICE" name="Require authentication before presenting restricted data" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For less sensitive but still restricted data, simple verification of the location of the user may suffice (e.g. IP restrictions).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For non-sensitive but non-public data, access could be restricted by IP address, limiting access to internal networks, workstations, or gateways&lt;/li&gt;&lt;li&gt;For more sensitive data, TLS client-side certificates may be appropriate&lt;/li&gt;&lt;li&gt;Where secret or other sensitive data is handled, a full authentication process to identify and validate users with single or multi-factor authentication may be required&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-21" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-21" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-21" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-22" supportedStandardRef="NIST 800-53"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Identify which parts of the service present sensitive data.&amp;nbsp;&lt;/li&gt;
                &lt;li&gt;Try to obtain access to this information without any type of authentication, for example, attempt to navigate directly to URLs that present sensitive data.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:14.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-SERVICE" name="Restrict access to the service at the network layer to reduce exposure" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to services should be restricted to expected sources, limiting the exposure of the service and its attack surface; and the likelihood of a malicious actor gaining access to the system.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Apply network layer security controls so that only the necessary and expected IP addresses are permitted access to connect to the service.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check that the network access to the service is only allowed for the components which need it.&lt;/li&gt; 
 &lt;li&gt;There should be a firewall protecting the network segment in which the service is installed.&lt;/li&gt; 
 &lt;li&gt;Check that the firewall restricts all access and only permits the minimum connections required using the principal of least privilege.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="david@doughty.uk.net" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Ccf-Priority" value="3"/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should used be in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:13.157">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACCESS SERVICE" name="Access service" desc="" library="CS-Default">
          <threats>
            <threat ref="VULN-SERVICE" name="Attackers gain access to unauthorised data by exploiting vulnerabilities in the service" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>Attackers exploit vulnerabilities in the service and gain access to data, or to
                                services for which they are not authorized.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="PATCH-SERVICE" mitigation="50"/>
                    <countermeasure ref="RESTRICT-SERVICE" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="PATCH-SERVICE" mitigation="50"/>
                <countermeasure ref="RESTRICT-SERVICE" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-115" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA">
                  <countermeasures>
                    <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication" name="Authentication" desc="" library="CS-Default">
          <threats>
            <threat ref="AUTH-DATASTORE-LEAST-PRIV" name="Attackers who compromise the application or application server could directly access and modify the data store" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>If attackers gain access to the application or the application server, then they could
                                directly access the data store using the privilege assigned to the application.
                                &lt;div&gt;
                                If the data store user account used by the application has elevated privileges then this
                                could allow attackers to perform unauthorized operations such as dropping tables,
                                modifying the database schema or modifying data.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="1" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-66" name="Attackers gain unauthorised access to data and/or systems through SQL Injection attacks" state="Expose" source="RULES" edited="false" owner="david@doughty.uk.net" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Successful SQL Injection attacks could lead to full compromise of the database or to a partial compromise of only the data visible to the application.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Typically, these types of attacks result in unauthorized disclosure of sensitive data, but can also be used to inject spurious data into the database or to drop tables and deny services to legitimate users.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-89">
                  <countermeasures>
                    <countermeasure ref="CWE-89-PREPARED" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-89-PREPARED" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Tcf-STRIDE" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
  <threadFixScans/>
</project>
